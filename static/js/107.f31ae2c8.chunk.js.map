{"version":3,"file":"static/js/107.f31ae2c8.chunk.js","mappings":"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,GAAM,UACN,GAAM,eACN,GAAM,WACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,sBACN,GAAM,UACN,GAAM,oBACN,GAAM,UACN,GAAM,mCACN,GAAM,SACN,GAAM,UACN,GAAM,SACN,GAAM,gBACN,GAAM,WACN,GAAM,UACN,GAAM,SACN,GAAM,SACN,GAAM,0BACN,GAAM,oCACN,GAAM,2BACN,GAAM,QACN,GAAM,cACN,GAAM,gBACN,GAAM,eACN,GAAM,QACN,GAAM,WACN,GAAM,QACN,GAAM,WACN,GAAM,aACN,GAAM,OACN,GAAM,aACN,GAAM,aACN,GAAM,mBACN,GAAM,SACN,GAAM,iBACN,GAAM,UACN,GAAM,WACN,GAAM,UACN,GAAM,WACN,GAAM,qBACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,iBACN,GAAM,UACN,GAAM,QACN,GAAM,WACN,GAAM,UACN,GAAM,OACN,GAAM,mBACN,GAAM,iCACN,GAAM,gBACN,GAAM,SACN,GAAM,QACN,GAAM,iBACN,GAAM,UACN,GAAM,UACN,GAAM,gBACN,GAAM,WACN,GAAM,QACN,GAAM,YACN,GAAM,YACN,GAAM,SACN,GAAM,SACN,GAAM,aACN,GAAM,oBACN,GAAM,SACN,GAAM,+CACN,GAAM,YACN,GAAM,OACN,GAAM,gBACN,GAAM,SACN,GAAM,YACN,GAAM,oCACN,GAAM,WACN,GAAM,UACN,GAAM,QACN,GAAM,UACN,GAAM,YACN,GAAM,UACN,GAAM,SACN,GAAM,cACN,GAAM,QACN,GAAM,iCACN,GAAM,OACN,GAAM,OACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,UACN,GAAM,SACN,GAAM,QACN,GAAM,QACN,GAAM,aACN,GAAM,WACN,GAAM,WACN,GAAM,UACN,GAAM,wBACN,GAAM,cACN,GAAM,cACN,GAAM,SACN,GAAM,iBACN,GAAM,aACN,GAAM,OACN,GAAM,UACN,GAAM,cACN,GAAM,gBACN,GAAM,YACN,GAAM,UACN,GAAM,UACN,GAAM,YACN,GAAM,aACN,GAAM,SACN,GAAM,QACN,GAAM,UACN,GAAM,SACN,GAAM,UACN,GAAM,aACN,GAAM,6BACN,GAAM,aACN,GAAM,mBACN,GAAM,kBACN,GAAM,OACN,GAAM,UACN,GAAM,WACN,GAAM,QACN,GAAM,2BACN,GAAM,aACN,GAAM,aACN,GAAM,aACN,GAAM,QACN,GAAM,YACN,GAAM,WACN,GAAM,SACN,GAAM,SACN,GAAM,WACN,GAAM,aACN,GAAM,UACN,GAAM,gBACN,GAAM,QACN,GAAM,iBACN,GAAM,UACN,GAAM,YACN,GAAM,cACN,GAAM,SACN,GAAM,QACN,GAAM,QACN,GAAM,OACN,GAAM,cACN,GAAM,OACN,GAAM,gBACN,GAAM,SACN,GAAM,OACN,GAAM,mBACN,GAAM,mBACN,GAAM,cACN,GAAM,WACN,GAAM,SACN,GAAM,4BACN,GAAM,WACN,GAAM,cACN,GAAM,YACN,GAAM,WACN,GAAM,QACN,GAAM,WACN,GAAM,QACN,GAAM,UACN,GAAM,UACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,eACN,GAAM,kBACN,GAAM,aACN,GAAM,QACN,GAAM,SACN,GAAM,YACN,GAAM,eACN,GAAM,WACN,GAAM,yBACN,GAAM,WACN,GAAM,eACN,GAAM,aACN,GAAM,UACN,GAAM,UACN,GAAM,WACN,GAAM,cACN,GAAM,wBACN,GAAM,cACN,GAAM,eACN,GAAM,QACN,GAAM,YACN,GAAM,mBACN,GAAM,2BACN,GAAM,OACN,GAAM,8BACN,GAAM,OACN,GAAM,WACN,GAAM,aACN,GAAM,UACN,GAAM,cACN,GAAM,eACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,sBACN,GAAM,SACN,GAAM,SACN,GAAM,WACN,GAAM,UACN,GAAM,SACN,GAAM,uCACN,GAAM,gBACN,GAAM,UACN,GAAM,aACN,GAAM,gCACN,GAAM,mCACN,GAAM,YACN,GAAM,0BACN,GAAM,uBACN,GAAM,UACN,GAAM,UACN,GAAM,oBACN,GAAM,QACN,GAAM,SACN,GAAM,QACN,GAAM,UACN,GAAM,eACN,GAAM,SACN,GAAM,WACN,GAAM,2BCjQG2T,EAAWnX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GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,KAAK,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,KAAK,KAAK,KAAK,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,KAAK,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,KAAK,KAAK,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,GAAK,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,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","sources":["../node_modules/@hookform/error-message/src/ErrorMessage.tsx","../node_modules/classnames/index.js","../node_modules/moment/moment.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","../node_modules/libphonenumber-js/metadata.min.json.js","../node_modules/react-phone-number-input/locale/en.json.js","../node_modules/react-phone-number-input/source/PropTypes.js","../node_modules/input-format/source/helpers.js","../node_modules/input-format/source/closeBraces.js","../node_modules/input-format/source/templateFormatter.js","../node_modules/input-format/source/format.js","../node_modules/input-format/source/dom.js","../node_modules/input-format/source/inputControl.js","../node_modules/input-format/source/parse.js","../node_modules/input-format/source/edit.js","../node_modules/input-format/source/react/Input.js","../node_modules/libphonenumber-js/source/tools/semver-compare.js","../node_modules/libphonenumber-js/source/metadata.js","../node_modules/libphonenumber-js/source/helpers/mergeArrays.js","../node_modules/libphonenumber-js/source/helpers/checkNumberLength.js","../node_modules/libphonenumber-js/source/isPossibleNumber_.js","../node_modules/libphonenumber-js/source/helpers/matchesEntirely.js","../node_modules/libphonenumber-js/source/helpers/getNumberType.js","../node_modules/libphonenumber-js/source/constants.js","../node_modules/libphonenumber-js/source/helpers/applyInternationalSeparatorStyle.js","../node_modules/libphonenumber-js/source/helpers/formatNationalNumberUsingFormat.js","../node_modules/libphonenumber-js/source/helpers/getIddPrefix.js","../node_modules/libphonenumber-js/source/helpers/extension/createExtensionPattern.js","../node_modules/libphonenumber-js/source/helpers/isViablePhoneNumber.js","../node_modules/libphonenumber-js/source/helpers/RFC3966.js","../node_modules/libphonenumber-js/source/format_.js","../node_modules/libphonenumber-js/source/PhoneNumber.js","../node_modules/libphonenumber-js/source/validate_.js","../node_modules/libphonenumber-js/source/AsYouTypeState.js","../node_modules/libphonenumber-js/source/AsYouTypeFormatter.util.js","../node_modules/libphonenumber-js/source/helpers/parseDigits.js","../node_modules/libphonenumber-js/source/AsYouTypeFormatter.complete.js","../node_modules/libphonenumber-js/source/AsYouTypeFormatter.PatternParser.js","../node_modules/libphonenumber-js/source/AsYouTypeFormatter.PatternMatcher.js","../node_modules/libphonenumber-js/source/AsYouTypeFormatter.js","../node_modules/libphonenumber-js/source/helpers/stripIddPrefix.js","../node_modules/libphonenumber-js/source/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js","../node_modules/libphonenumber-js/source/helpers/extractNationalNumber.js","../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js","../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCode.js","../node_modules/libphonenumber-js/source/AsYouTypeParser.js","../node_modules/libphonenumber-js/source/helpers/getCountryByCallingCode.js","../node_modules/libphonenumber-js/source/AsYouType.js","../node_modules/libphonenumber-js/source/parseIncompletePhoneNumber.js","../node_modules/react-phone-number-input/source/helpers/inputValuePrefix.js","../node_modules/react-phone-number-input/source/InputSmart.js","../node_modules/react-phone-number-input/source/InputBasic.js","../node_modules/libphonenumber-js/source/formatIncompletePhoneNumber.js","../node_modules/country-flag-icons/source/unicode.js","../node_modules/react-phone-number-input/source/CountrySelect.js","../node_modules/react-phone-number-input/source/Flag.js","../node_modules/react-phone-number-input/source/InternationalIcon.js","../node_modules/react-phone-number-input/source/helpers/countries.js","../node_modules/libphonenumber-js/source/getCountries.js","../node_modules/react-phone-number-input/source/CountryIcon.js","../node_modules/libphonenumber-js/source/parsePhoneNumber.js","../node_modules/libphonenumber-js/source/ParseError.js","../node_modules/libphonenumber-js/source/helpers/extension/extractExtension.js","../node_modules/libphonenumber-js/source/parse_.js","../node_modules/libphonenumber-js/source/parsePhoneNumber_.js","../node_modules/libphonenumber-js/source/parsePhoneNumberFromString_.js","../node_modules/react-phone-number-input/source/helpers/getInternationalPhoneNumberPrefix.js","../node_modules/react-phone-number-input/source/helpers/phoneInputHelpers.js","../node_modules/libphonenumber-js/source/parsePhoneNumberFromString.js","../node_modules/react-phone-number-input/source/helpers/getPhoneInputWithCountryStateUpdateFromNewProps.js","../node_modules/react-phone-number-input/source/PhoneInputWithCountry.js","../node_modules/react-phone-number-input/source/PhoneInputWithCountryDefault.js","../node_modules/react-phone-number-input/min/index.js"],"sourcesContent":["import * as React from 'react';\nimport { useFormContext, get, FieldErrors } from 'react-hook-form';\nimport { Props } from './types';\n\nconst ErrorMessage = <\n  TFieldErrors extends FieldErrors,\n  TAs extends\n    | undefined\n    | React.ReactElement\n    | React.ComponentType<any>\n    | keyof JSX.IntrinsicElements = undefined\n>({\n  as,\n  errors,\n  name,\n  message,\n  render,\n  ...rest\n}: Props<TFieldErrors, TAs>) => {\n  const methods = useFormContext();\n  const error = get(errors || methods.formState.errors, name);\n\n  if (!error) {\n    return null;\n  }\n\n  const { message: messageFromRegister, types } = error;\n  const props = Object.assign({}, rest, {\n    children: messageFromRegister || message,\n  });\n\n  return React.isValidElement(as)\n    ? React.cloneElement(as, props)\n    : render\n    ? (render({\n        message: messageFromRegister || message,\n        messages: types,\n      }) as React.ReactElement)\n    : React.createElement((as as string) || React.Fragment, props);\n};\n\nexport { ErrorMessage };\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\"],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([457]\\\\d{6})$\",\"268$1\",0,\"268\"],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2457]\\\\d{6})$\",\"264$1\",0,\"264\"],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\"],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\"],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\"],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([267]\\\\d{6})$\",\"684$1\",0,\"684\"],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"0|(183[12])\",0,0,0,[[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",0,\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\"],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\"],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"246$1\",0,\"246\"],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|22\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\"],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\"],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]]],\"BG\":[\"359\",\"00\",\"[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[047]\"]]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]]],\"BJ\":[\"229\",\"00\",\"(?:[25689]\\\\d|40)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]]]],\"BL\":[\"590\",\"00\",\"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|5[12]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"976[01]\\\\d{5}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-8]\\\\d{6})$\",\"441$1\",0,\"441\"],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[23]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\"],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37)\",\"4(?:02|37)0|[34]00\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([3-8]\\\\d{6})$\",\"242$1\",0,\"242\"],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-79]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,0,\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]]],\"CA\":[\"1\",\"011\",\"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\",[7,10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|6[578])|4(?:03|1[68]|3[178]|50|68|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|13|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",[10]],[\"\",[10]],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",[10]],[\"900[2-9]\\\\d{6}\",[10]],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-7]|33|44|66|77|88)|622)[2-9]\\\\d{6}\",[10]],0,[\"310\\\\d{4}\",[7]],0,[\"600[2-9]\\\\d{6}\",[10]]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"0|([59]\\\\d{7})$\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"[189]\\\\d{8}|[1-68]\\\\d{6}\",[7,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\"],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]\",\"(?:10|2[0-57-9])(?:10|9[56])\",\"(?:10|2[0-57-9])(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"0|(1(?:[12]\\\\d|79)\\\\d\\\\d)\",0,0,0,0,\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\",[10,11],[[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3[0-357]|91\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0(4(?:[14]4|56)|[579])?\"],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"119\",\"[27]\\\\d{6,7}|[34]\\\\d{5,7}|(?:5|8\\\\d\\\\d)\\\\d{7}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\"],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\"],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"0|([59]\\\\d{7})$\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:83[0-38]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[0568]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\"],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-7]\\\\d{6})$\",\"767$1\",0,\"767\"],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\"],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\"],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[189]\"],\"0$1\"]],\"0\"],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\"],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\"],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-579]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-579]\"],\"0$1\"]],\"0\"],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[12]00|[368]|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[1245]|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",0,\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,0,\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\"],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\"],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[013579])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d\\\\d|1(?:[0-7]\\\\d\\\\d|8(?:[02]\\\\d|1[0-246-9])))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"473$1\",0,\"473\"],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\"],\"GF\":[\"594\",\"00\",\"(?:[56]94|80\\\\d|976)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"0|([25-9]\\\\d{5})$\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\"],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d\\\\d|606)\\\\d{5}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"00\",\"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|6[0-289]|7[08]|8[0-689]|9\\\\d)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"976[01]\\\\d{5}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]]],\"GT\":[\"502\",\"00\",\"(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([3-9]\\\\d{6})$\",\"671$1\",0,\"671\"],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]]],\"GY\":[\"592\",\"001\",\"9008\\\\d{3}|(?:[2-467]\\\\d\\\\d|862)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46-9]\"]]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,0,\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]]],\"HR\":[\"385\",\"00\",\"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-5]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"HT\":[\"509\",\"00\",\"[2-489]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-489]\"]]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\"],\"ID\":[\"62\",\"00[89]\",\"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\"],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\"],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"0|([25-8]\\\\d{5})$\",\"1624$1\",0,\"74576|(?:16|7[56])24\"],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\"],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\"],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,0,\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[378]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"],[\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"0|([0-24-8]\\\\d{5})$\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\"],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\"],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|(?:[235-8]\\\\d|99)\\\\d{7}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\"],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-7]\\\\d{6})$\",\"869$1\",0,\"869\"],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"345$1\",0,\"345\"],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",0,\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\"],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\"],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-8]\\\\d{6})$\",\"758$1\",0,\"758\"],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"0|(1001)\"],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\"],\"LR\":[\"231\",\"00\",\"(?:2|33|5\\\\d|77|88)\\\\d{7}|[4-6]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[4-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3578]\"],\"0$1\"]],\"0\"],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"8 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(8-$1)\",1]],\"8\",0,\"[08]\"],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{5})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29[89]|389)\",\"5(?:29[89]|389)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|9)|892\",\"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5(?:29(?:[189][05]|2[29]|3[01])|389[05])\\\\d{4}|5(?:2(?:[0-25-7]\\\\d|3[1-578]|4[02-46-8]|8[0235-7]|90)|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[08]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[017]\\\\d|2[0-2]|6[0-8]|8[0-3]))\\\\d{6}\"],[\"80\\\\d{7}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"592(?:4[0-2]|93)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\"],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\"],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MF\":[\"590\",\"00\",\"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"976[01]\\\\d{5}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"0|([24-9]\\\\d{6})$\",\"20$1\"],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\"],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\"],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\"],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"670$1\",0,\"670\"],\"MQ\":[\"596\",\"00\",\"(?:69|80)\\\\d{7}|(?:59|97)6\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([34]\\\\d{6})$\",\"664$1\",0,\"664\"],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:5|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,0,\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[3467]|9[13-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,0,\"00\"],\"MW\":[\"265\",\"00\",\"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\"],\"MX\":[\"52\",\"0[09]\",\"1(?:(?:44|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[017]\\\\d|[235][1-9]|4[0-35-9]|6[0-46-9]|8[1-79]|9[1-8])|[2-9]\\\\d)\\\\d{8}\",[10,11],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"],0,1],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 $3 $4\",[\"1(?:33|5[56]|81)\"],0,1],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 $3 $4\",[\"1\"],0,1]],\"01\",0,\"0(?:[12]|4[45])|1\",0,0,0,0,\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9]|53)|8\",\"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1(?:[367]|80)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"NC\":[\"687\",\"00\",\"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[02-57-9]\"]]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[04]\"]]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\"],\"NG\":[\"234\",\"009\",\"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\",[7,8,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-7]|8[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\"],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",[5,6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-578]|91\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[489]|59\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-7]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\"],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\"],\"NR\":[\"674\",\"00\",\"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-68]\"]]]],\"NU\":[\"683\",\"00\",\"(?:[47]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[29]\\\\d{7,9}|50\\\\d{5}(?:\\\\d{2,3})?|6[0-35-9]\\\\d{6}|7\\\\d{7,8}|8\\\\d{4,9}|(?:11\\\\d|[34])\\\\d{7}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-579]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|[89]0\",\"50(?:[0367]|88)|[89]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[59]|80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7|86\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]]],\"PE\":[\"51\",\"00|19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,0,\"00\",\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,0,\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\"],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\"],\"PL\":[\"48\",\"00\",\"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|20|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]]],\"PM\":[\"508\",\"00\",\"(?:[45]|80\\\\d\\\\d)\\\\d{5}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\"],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\"],\"QA\":[\"974\",\"00\",\"[2-7]\\\\d{7}|800\\\\d{4}(?:\\\\d{2})?|2\\\\d{6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[126]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]]]],\"RE\":[\"262\",\"00\",\"976\\\\d{6}|(?:26|[68]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"],\"0$1\"]],\"0\",0,0,0,0,\"26[23]|69|[89]\"],\"RO\":[\"40\",\"00\",\"(?:[2378]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[237-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\"],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-6]2|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-6]2|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",0,\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]]],\"0\"],\"SA\":[\"966\",\"00\",\"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\"],\"SB\":[\"677\",\"0[01]\",\"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,0,\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\"],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-5]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\"],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,0,\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|[57]9)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\"],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\"],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\"],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\"],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"24|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3478]|64|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6(?:0[5-7]|[1-35-9])|9[2-9]\"]]],\"0\"],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|(5\\\\d{6})$\",\"721$1\",0,\"721\"],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\"],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\"],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-479]\\\\d{6})$\",\"649$1\",0,\"649\"],\"TD\":[\"235\",\"00|16\",\"(?:22|[69]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2679]\"]]],0,0,0,0,0,0,0,\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"TJ\":[\"992\",\"810\",\"(?:00|[1-57-9]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[34]7|91[78]\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,0,\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]]],\"TM\":[\"993\",\"810\",\"[1-6]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"6\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|616)\",\"5(?:[0-59]|6161)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\"],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-46-8]\\\\d{6})$\",\"868$1\",0,\"868\"],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[25-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\"],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\",\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|89|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\"],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"310\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"505(?:[2-57-9]\\\\d\\\\d|6(?:[0-35-9]\\\\d|44))\\\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-289]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"4\\\\d{9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"405|8|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\",\" int. \"],\"UZ\":[\"998\",\"810\",\"(?:33|55|[679]\\\\d|88)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[35-9]\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11],0,0,0,0,0,0,\"06698\"],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-7]\\\\d{6})$\",\"784$1\",0,\"784\"],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\"],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-578]\\\\d{6})$\",\"284$1\",0,\"284\"],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"340$1\",0,\"340\"],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[69]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3578]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\"],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]]],\"WF\":[\"681\",\"00\",\"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[478]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"XK\":[\"383\",\"00\",\"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[23]\"],\"0$1\"]],\"0\"],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7[24-68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"YT\":[\"262\",\"00\",\"80\\\\d{7}|(?:26|63)9\\\\d{6}\",[9],0,\"0\",0,0,0,0,\"269|63\"],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[79]\"],\"0$1\"]],\"0\"],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\"]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:00|[1-9]\\\\d)\\\\d{6}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[35-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[35-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"[0-36-9]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-36-9]\"]]],0,0,0,0,0,0,[0,[\"[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|285\\\\d{9}|(?:[19]\\\\d|49)\\\\d{6}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"4\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34[57]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-3]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|3(?:2|47|7\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,0,0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:(?:285\\\\d\\\\d|3(?:45|[69]\\\\d{3}))\\\\d|9[89])\\\\d{6}\"]]],\"883\":[\"883\",0,\"(?:210|370\\\\d\\\\d)\\\\d{7}|51\\\\d{7}(?:\\\\d{3})?\",[9,10,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[35]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:210|(?:370[1-9]|51[013]0)\\\\d)\\\\d{7}|5100\\\\d{5}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}","export default {\n  \"ext\": \"ext.\",\n  \"country\": \"Phone number country\",\n  \"phone\": \"Phone\",\n  \"AB\": \"Abkhazia\",\n  \"AC\": \"Ascension Island\",\n  \"AD\": \"Andorra\",\n  \"AE\": \"United Arab Emirates\",\n  \"AF\": \"Afghanistan\",\n  \"AG\": \"Antigua and Barbuda\",\n  \"AI\": \"Anguilla\",\n  \"AL\": \"Albania\",\n  \"AM\": \"Armenia\",\n  \"AO\": \"Angola\",\n  \"AQ\": \"Antarctica\",\n  \"AR\": \"Argentina\",\n  \"AS\": \"American Samoa\",\n  \"AT\": \"Austria\",\n  \"AU\": \"Australia\",\n  \"AW\": \"Aruba\",\n  \"AX\": \"Åland Islands\",\n  \"AZ\": \"Azerbaijan\",\n  \"BA\": \"Bosnia and Herzegovina\",\n  \"BB\": \"Barbados\",\n  \"BD\": \"Bangladesh\",\n  \"BE\": \"Belgium\",\n  \"BF\": \"Burkina Faso\",\n  \"BG\": \"Bulgaria\",\n  \"BH\": \"Bahrain\",\n  \"BI\": \"Burundi\",\n  \"BJ\": \"Benin\",\n  \"BL\": \"Saint Barthélemy\",\n  \"BM\": \"Bermuda\",\n  \"BN\": \"Brunei Darussalam\",\n  \"BO\": \"Bolivia\",\n  \"BQ\": \"Bonaire, Sint Eustatius and Saba\",\n  \"BR\": \"Brazil\",\n  \"BS\": \"Bahamas\",\n  \"BT\": \"Bhutan\",\n  \"BV\": \"Bouvet Island\",\n  \"BW\": \"Botswana\",\n  \"BY\": \"Belarus\",\n  \"BZ\": \"Belize\",\n  \"CA\": \"Canada\",\n  \"CC\": \"Cocos (Keeling) Islands\",\n  \"CD\": \"Congo, Democratic Republic of the\",\n  \"CF\": \"Central African Republic\",\n  \"CG\": \"Congo\",\n  \"CH\": \"Switzerland\",\n  \"CI\": \"Cote d'Ivoire\",\n  \"CK\": \"Cook Islands\",\n  \"CL\": \"Chile\",\n  \"CM\": \"Cameroon\",\n  \"CN\": \"China\",\n  \"CO\": \"Colombia\",\n  \"CR\": \"Costa Rica\",\n  \"CU\": \"Cuba\",\n  \"CV\": \"Cape Verde\",\n  \"CW\": \"Curaçao\",\n  \"CX\": \"Christmas Island\",\n  \"CY\": \"Cyprus\",\n  \"CZ\": \"Czech Republic\",\n  \"DE\": \"Germany\",\n  \"DJ\": \"Djibouti\",\n  \"DK\": \"Denmark\",\n  \"DM\": \"Dominica\",\n  \"DO\": \"Dominican Republic\",\n  \"DZ\": \"Algeria\",\n  \"EC\": \"Ecuador\",\n  \"EE\": \"Estonia\",\n  \"EG\": \"Egypt\",\n  \"EH\": \"Western Sahara\",\n  \"ER\": \"Eritrea\",\n  \"ES\": \"Spain\",\n  \"ET\": \"Ethiopia\",\n  \"FI\": \"Finland\",\n  \"FJ\": \"Fiji\",\n  \"FK\": \"Falkland Islands\",\n  \"FM\": \"Federated States of Micronesia\",\n  \"FO\": \"Faroe Islands\",\n  \"FR\": \"France\",\n  \"GA\": \"Gabon\",\n  \"GB\": \"United Kingdom\",\n  \"GD\": \"Grenada\",\n  \"GE\": \"Georgia\",\n  \"GF\": \"French Guiana\",\n  \"GG\": \"Guernsey\",\n  \"GH\": \"Ghana\",\n  \"GI\": \"Gibraltar\",\n  \"GL\": \"Greenland\",\n  \"GM\": \"Gambia\",\n  \"GN\": \"Guinea\",\n  \"GP\": \"Guadeloupe\",\n  \"GQ\": \"Equatorial Guinea\",\n  \"GR\": \"Greece\",\n  \"GS\": \"South Georgia and the South Sandwich Islands\",\n  \"GT\": \"Guatemala\",\n  \"GU\": \"Guam\",\n  \"GW\": \"Guinea-Bissau\",\n  \"GY\": \"Guyana\",\n  \"HK\": \"Hong Kong\",\n  \"HM\": \"Heard Island and McDonald Islands\",\n  \"HN\": \"Honduras\",\n  \"HR\": \"Croatia\",\n  \"HT\": \"Haiti\",\n  \"HU\": \"Hungary\",\n  \"ID\": \"Indonesia\",\n  \"IE\": \"Ireland\",\n  \"IL\": \"Israel\",\n  \"IM\": \"Isle of Man\",\n  \"IN\": \"India\",\n  \"IO\": \"British Indian Ocean Territory\",\n  \"IQ\": \"Iraq\",\n  \"IR\": \"Iran\",\n  \"IS\": \"Iceland\",\n  \"IT\": \"Italy\",\n  \"JE\": \"Jersey\",\n  \"JM\": \"Jamaica\",\n  \"JO\": \"Jordan\",\n  \"JP\": \"Japan\",\n  \"KE\": \"Kenya\",\n  \"KG\": \"Kyrgyzstan\",\n  \"KH\": \"Cambodia\",\n  \"KI\": \"Kiribati\",\n  \"KM\": \"Comoros\",\n  \"KN\": \"Saint Kitts and Nevis\",\n  \"KP\": \"North Korea\",\n  \"KR\": \"South Korea\",\n  \"KW\": \"Kuwait\",\n  \"KY\": \"Cayman Islands\",\n  \"KZ\": \"Kazakhstan\",\n  \"LA\": \"Laos\",\n  \"LB\": \"Lebanon\",\n  \"LC\": \"Saint Lucia\",\n  \"LI\": \"Liechtenstein\",\n  \"LK\": \"Sri Lanka\",\n  \"LR\": \"Liberia\",\n  \"LS\": \"Lesotho\",\n  \"LT\": \"Lithuania\",\n  \"LU\": \"Luxembourg\",\n  \"LV\": \"Latvia\",\n  \"LY\": \"Libya\",\n  \"MA\": \"Morocco\",\n  \"MC\": \"Monaco\",\n  \"MD\": \"Moldova\",\n  \"ME\": \"Montenegro\",\n  \"MF\": \"Saint Martin (French Part)\",\n  \"MG\": \"Madagascar\",\n  \"MH\": \"Marshall Islands\",\n  \"MK\": \"North Macedonia\",\n  \"ML\": \"Mali\",\n  \"MM\": \"Myanmar\",\n  \"MN\": \"Mongolia\",\n  \"MO\": \"Macao\",\n  \"MP\": \"Northern Mariana Islands\",\n  \"MQ\": \"Martinique\",\n  \"MR\": \"Mauritania\",\n  \"MS\": \"Montserrat\",\n  \"MT\": \"Malta\",\n  \"MU\": \"Mauritius\",\n  \"MV\": \"Maldives\",\n  \"MW\": \"Malawi\",\n  \"MX\": \"Mexico\",\n  \"MY\": \"Malaysia\",\n  \"MZ\": \"Mozambique\",\n  \"NA\": \"Namibia\",\n  \"NC\": \"New Caledonia\",\n  \"NE\": \"Niger\",\n  \"NF\": \"Norfolk Island\",\n  \"NG\": \"Nigeria\",\n  \"NI\": \"Nicaragua\",\n  \"NL\": \"Netherlands\",\n  \"NO\": \"Norway\",\n  \"NP\": \"Nepal\",\n  \"NR\": \"Nauru\",\n  \"NU\": \"Niue\",\n  \"NZ\": \"New Zealand\",\n  \"OM\": \"Oman\",\n  \"OS\": \"South Ossetia\",\n  \"PA\": \"Panama\",\n  \"PE\": \"Peru\",\n  \"PF\": \"French Polynesia\",\n  \"PG\": \"Papua New Guinea\",\n  \"PH\": \"Philippines\",\n  \"PK\": \"Pakistan\",\n  \"PL\": \"Poland\",\n  \"PM\": \"Saint Pierre and Miquelon\",\n  \"PN\": \"Pitcairn\",\n  \"PR\": \"Puerto Rico\",\n  \"PS\": \"Palestine\",\n  \"PT\": \"Portugal\",\n  \"PW\": \"Palau\",\n  \"PY\": \"Paraguay\",\n  \"QA\": \"Qatar\",\n  \"RE\": \"Reunion\",\n  \"RO\": \"Romania\",\n  \"RS\": \"Serbia\",\n  \"RU\": \"Russia\",\n  \"RW\": \"Rwanda\",\n  \"SA\": \"Saudi Arabia\",\n  \"SB\": \"Solomon Islands\",\n  \"SC\": \"Seychelles\",\n  \"SD\": \"Sudan\",\n  \"SE\": \"Sweden\",\n  \"SG\": \"Singapore\",\n  \"SH\": \"Saint Helena\",\n  \"SI\": \"Slovenia\",\n  \"SJ\": \"Svalbard and Jan Mayen\",\n  \"SK\": \"Slovakia\",\n  \"SL\": \"Sierra Leone\",\n  \"SM\": \"San Marino\",\n  \"SN\": \"Senegal\",\n  \"SO\": \"Somalia\",\n  \"SR\": \"Suriname\",\n  \"SS\": \"South Sudan\",\n  \"ST\": \"Sao Tome and Principe\",\n  \"SV\": \"El Salvador\",\n  \"SX\": \"Sint Maarten\",\n  \"SY\": \"Syria\",\n  \"SZ\": \"Swaziland\",\n  \"TA\": \"Tristan da Cunha\",\n  \"TC\": \"Turks and Caicos Islands\",\n  \"TD\": \"Chad\",\n  \"TF\": \"French Southern Territories\",\n  \"TG\": \"Togo\",\n  \"TH\": \"Thailand\",\n  \"TJ\": \"Tajikistan\",\n  \"TK\": \"Tokelau\",\n  \"TL\": \"Timor-Leste\",\n  \"TM\": \"Turkmenistan\",\n  \"TN\": \"Tunisia\",\n  \"TO\": \"Tonga\",\n  \"TR\": \"Turkey\",\n  \"TT\": \"Trinidad and Tobago\",\n  \"TV\": \"Tuvalu\",\n  \"TW\": \"Taiwan\",\n  \"TZ\": \"Tanzania\",\n  \"UA\": \"Ukraine\",\n  \"UG\": \"Uganda\",\n  \"UM\": \"United States Minor Outlying Islands\",\n  \"US\": \"United States\",\n  \"UY\": \"Uruguay\",\n  \"UZ\": \"Uzbekistan\",\n  \"VA\": \"Holy See (Vatican City State)\",\n  \"VC\": \"Saint Vincent and the Grenadines\",\n  \"VE\": \"Venezuela\",\n  \"VG\": \"Virgin Islands, British\",\n  \"VI\": \"Virgin Islands, U.S.\",\n  \"VN\": \"Vietnam\",\n  \"VU\": \"Vanuatu\",\n  \"WF\": \"Wallis and Futuna\",\n  \"WS\": \"Samoa\",\n  \"XK\": \"Kosovo\",\n  \"YE\": \"Yemen\",\n  \"YT\": \"Mayotte\",\n  \"ZA\": \"South Africa\",\n  \"ZM\": \"Zambia\",\n  \"ZW\": \"Zimbabwe\",\n  \"ZZ\": \"International\"\n}","import PropTypes from 'prop-types'\r\n\r\nexport const metadata = PropTypes.shape({\r\n\tcountry_calling_codes : PropTypes.object.isRequired,\r\n\tcountries : PropTypes.object.isRequired\r\n})\r\n\r\nexport const labels = PropTypes.objectOf(PropTypes.string)","// Counts all occurences of a symbol in a string\r\nexport function count_occurences(symbol, string) {\r\n\tlet count = 0\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes)\r\n\t// but template placeholder characters don't fall into that range\r\n\t// so skipping such miscellaneous \"exotic\" characters\r\n\t// won't matter here for just counting placeholder character occurrences.\r\n\tfor (const character of string.split('')) {\r\n\t\tif (character === symbol) {\r\n\t\t\tcount++\r\n\t\t}\r\n\t}\r\n\treturn count\r\n}","import { count_occurences } from './helpers.js'\r\n\r\nexport default function closeBraces(retained_template, template, placeholder = 'x', empty_placeholder = ' ')\r\n{\r\n\tlet cut_before = retained_template.length\r\n\r\n\tconst opening_braces = count_occurences('(', retained_template)\r\n\tconst closing_braces = count_occurences(')', retained_template)\r\n\r\n\tlet dangling_braces = opening_braces - closing_braces\r\n\r\n\twhile (dangling_braces > 0 && cut_before < template.length)\r\n\t{\r\n\t\tretained_template += template[cut_before].replace(placeholder, empty_placeholder)\r\n\r\n\t\tif (template[cut_before] === ')')\r\n\t\t{\r\n\t\t\tdangling_braces--\r\n\t\t}\r\n\r\n\t\tcut_before++\r\n\t}\r\n\r\n\treturn retained_template\r\n}\r\n","import { count_occurences } from './helpers.js'\r\nimport close_braces from './closeBraces.js'\r\n\r\n// Takes a `template` where character placeholders\r\n// are denoted by 'x'es (e.g. 'x (xxx) xxx-xx-xx').\r\n//\r\n// Returns a function which takes `value` characters\r\n// and returns the `template` filled with those characters.\r\n// If the `template` can only be partially filled\r\n// then it is cut off.\r\n//\r\n// If `should_close_braces` is `true`,\r\n// then it will also make sure all dangling braces are closed,\r\n// e.g. \"8 (8\" -> \"8 (8  )\" (iPhone style phone number input).\r\n//\r\nexport default function(template, placeholder = 'x', should_close_braces)\r\n{\r\n\tif (!template)\r\n\t{\r\n\t\treturn value => ({ text: value })\r\n\t}\r\n\r\n\tconst characters_in_template = count_occurences(placeholder, template)\r\n\r\n\treturn function(value)\r\n\t{\r\n\t\tif (!value)\r\n\t\t{\r\n\t\t\treturn { text: '', template }\r\n\t\t}\r\n\r\n\t\tlet value_character_index = 0\r\n\t\tlet filled_in_template = ''\r\n\r\n\t\t// Using `.split('')` here instead of normal `for ... of`\r\n\t\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t\t// (the ones consisting of four bytes)\r\n\t\t// but template placeholder characters don't fall into that range\r\n\t\t// and appending UTF-8 characters to a string in parts still works.\r\n\t\tfor (const character of template.split(''))\r\n\t\t{\r\n\t\t\tif (character !== placeholder)\r\n\t\t\t{\r\n\t\t\t\tfilled_in_template += character\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\tfilled_in_template += value[value_character_index]\r\n\t\t\tvalue_character_index++\r\n\r\n\t\t\t// If the last available value character has been filled in,\r\n\t\t\t// then return the filled in template\r\n\t\t\t// (either trim the right part or retain it,\r\n\t\t\t//  if no more character placeholders in there)\r\n\t\t\tif (value_character_index === value.length)\r\n\t\t\t{\r\n\t\t\t\t// If there are more character placeholders\r\n\t\t\t\t// in the right part of the template\r\n\t\t\t\t// then simply trim it.\r\n\t\t\t\tif (value.length < characters_in_template)\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (should_close_braces)\r\n\t\t{\r\n\t\t\tfilled_in_template = close_braces(filled_in_template, template)\r\n\t\t}\r\n\r\n\t\treturn { text: filled_in_template, template }\r\n\t}\r\n}","import template_formatter from './templateFormatter.js'\r\n\r\n// Formats `value` value preserving `caret` at the same character.\r\n//\r\n// `{ value, caret }` attribute is the result of `parse()` function call.\r\n//\r\n// Returns `{ text, caret }` where the new `caret` is the caret position\r\n// inside `text` text corresponding to the original `caret` position inside `value`.\r\n//\r\n// `formatter(value)` is a function returning `{ text, template }`.\r\n//\r\n// `text` is the `value` value formatted using `template`.\r\n// It may either cut off the non-filled right part of the `template`\r\n// or it may fill the non-filled character placeholders\r\n// in the right part of the `template` with `spacer`\r\n// which is a space (' ') character by default.\r\n//\r\n// `template` is the template used to format the `value`.\r\n// It can be either a full-length template or a partial template.\r\n//\r\n// `formatter` can also be a string — a `template`\r\n// where character placeholders are denoted by 'x'es.\r\n// In this case `formatter` function is automatically created.\r\n//\r\n// Example:\r\n//\r\n// `value` is '880',\r\n// `caret` is `2` (before the first `0`)\r\n//\r\n// `formatter` is `'880' =>\r\n//   { text: '8 (80 )', template: 'x (xxx) xxx-xx-xx' }`\r\n//\r\n// The result is `{ text: '8 (80 )', caret: 4 }`.\r\n//\r\nexport default function format(value, caret, formatter)\r\n{\r\n\tif (typeof formatter === 'string')\r\n\t{\r\n\t\tformatter = template_formatter(formatter)\r\n\t}\r\n\r\n\tlet { text, template } = formatter(value) || {}\r\n\r\n\tif (text === undefined)\r\n\t{\r\n\t\t text = value\r\n\t}\r\n\r\n\tif (template)\r\n\t{\r\n\t\tif (caret === undefined)\r\n\t\t{\r\n\t\t\tcaret = text.length\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlet index = 0\r\n\t\t\tlet found = false\r\n\r\n\t\t\tlet possibly_last_input_character_index = -1\r\n\r\n\t\t\twhile (index < text.length && index < template.length)\r\n\t\t\t{\r\n\t\t\t\t// Character placeholder found\r\n\t\t\t\tif (text[index] !== template[index])\r\n\t\t\t\t{\r\n\t\t\t\t\tif (caret === 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfound = true\r\n\t\t\t\t\t\tcaret = index\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpossibly_last_input_character_index = index\r\n\r\n\t\t\t\t\tcaret--\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++\r\n\t\t\t}\r\n\r\n\t\t\t// If the caret was positioned after last input character,\r\n\t\t\t// then the text caret index is just after the last input character.\r\n\t\t\tif (!found)\r\n\t\t\t{\r\n\t\t\t\tcaret = possibly_last_input_character_index + 1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { text, caret }\r\n}","export function isReadOnly(element)\r\n{\r\n\treturn element.hasAttribute('readonly')\r\n}\r\n\r\n// Gets <input/> selection bounds\r\nexport function getSelection(element)\r\n{\r\n\t// If no selection, return nothing\r\n\tif (element.selectionStart === element.selectionEnd)\r\n\t{\r\n\t\treturn\r\n\t}\r\n\r\n\treturn { start: element.selectionStart, end: element.selectionEnd }\r\n}\r\n\r\n// Key codes\r\nexport const Keys =\r\n{\r\n\tBackspace : 8,\r\n\tDelete    : 46\r\n}\r\n\r\n// Finds out the operation to be intercepted and performed\r\n// based on the key down event `keyCode`.\r\nexport function getOperation(event)\r\n{\r\n\tswitch (event.keyCode)\r\n\t{\r\n\t\tcase Keys.Backspace:\r\n\t\t\treturn 'Backspace'\r\n\r\n\t\tcase Keys.Delete:\r\n\t\t\treturn 'Delete'\r\n\t}\r\n}\r\n\r\n// Gets <input/> caret position\r\nexport function getCaretPosition(element)\r\n{\r\n\treturn element.selectionStart\r\n}\r\n\r\n// Sets <input/> caret position\r\nexport function setCaretPosition(element, caret_position)\r\n{\r\n\t// Sanity check\r\n\tif (caret_position === undefined)\r\n\t{\r\n\t\treturn\r\n\t}\r\n\r\n\t// Set caret position.\r\n\t// There has been an issue with caret positioning on Android devices.\r\n\t// https://github.com/catamphetamine/input-format/issues/2\r\n\t// I was revisiting this issue and looked for similar issues in other libraries.\r\n\t// For example, there's [`text-mask`](https://github.com/text-mask/text-mask) library.\r\n\t// They've had exactly the same issue when the caret seemingly refused to be repositioned programmatically.\r\n\t// The symptoms were the same: whenever the caret passed through a non-digit character of a mask (a whitespace, a bracket, a dash, etc), it looked as if it placed itself one character before its correct position.\r\n\t// https://github.com/text-mask/text-mask/issues/300\r\n\t// They seem to have found a basic fix for it: calling `input.setSelectionRange()` in a timeout rather than instantly for Android devices.\r\n\t// https://github.com/text-mask/text-mask/pull/400/files\r\n\t// I've implemented the same workaround here.\r\n\tif (isAndroid()) {\r\n      setTimeout(() => element.setSelectionRange(caret_position, caret_position), 0)\r\n\t} else {\r\n\t\telement.setSelectionRange(caret_position, caret_position)\r\n\t}\r\n}\r\n\r\nfunction isAndroid() {\r\n\t// `navigator` is not defined when running mocha tests.\r\n\tif (typeof navigator !== 'undefined') {\r\n\t\treturn ANDROID_USER_AGENT_REG_EXP.test(navigator.userAgent)\r\n\t}\r\n}\r\n\r\nconst ANDROID_USER_AGENT_REG_EXP = /Android/i","import edit   from './edit.js'\r\nimport parse  from './parse.js'\r\nimport format from './format.js'\r\n\r\nimport\r\n{\r\n\tisReadOnly,\r\n\tgetOperation,\r\n\tgetSelection,\r\n\tgetCaretPosition,\r\n\tsetCaretPosition\r\n}\r\nfrom './dom.js'\r\n\r\n// Deprecated.\r\n// I don't know why this function exists.\r\nexport function onCut(event, input, _parse, _format, on_change)\r\n{\r\n\tif (isReadOnly(input)) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// The actual cut hasn't happened just yet hence the timeout.\r\n\tsetTimeout(() => formatInputText(input, _parse, _format, undefined, on_change), 0)\r\n}\r\n\r\n// Deprecated.\r\n// I don't know why this function exists.\r\nexport function onPaste(event, input, _parse, _format, on_change)\r\n{\r\n\tif (isReadOnly(input)) {\r\n\t\treturn\r\n\t}\r\n\r\n\tconst selection = getSelection(input)\r\n\r\n\t// If selection is made,\r\n\t// just erase the selected text\r\n\t// prior to pasting\r\n\tif (selection)\r\n\t{\r\n\t\teraseSelection(input, selection)\r\n\t}\r\n\r\n\tformatInputText(input, _parse, _format, undefined, on_change)\r\n}\r\n\r\nexport function onChange(event, input, _parse, _format, on_change)\r\n{\r\n\tformatInputText(input, _parse, _format, undefined, on_change)\r\n}\r\n\r\n// \"Delete\" and \"Backspace\" keys are special\r\n// in a way that they're not handled by the regular `onChange()` handler\r\n// and instead are intercepted and re-applied manually.\r\n// The reason is that normally hitting \"Backspace\" or \"Delete\"\r\n// results in erasing a character, but that character might be any character,\r\n// while it would be a better \"user experience\" if it erased not just any character\r\n// but the closest \"meaningful\" character.\r\n// For example, if a template is `(xxx) xxx-xxxx`,\r\n// and the `<input/>` value is `(111) 222-3333`,\r\n// then, if a user begins erasing the `3333` part via \"Backspace\"\r\n// and reaches the \"-\" character, then it would just erase the \"-\" character.\r\n// Nothing wrong with that, but it would be a better \"user experience\"\r\n// if hitting \"Backspace\" at that position would erase the closest \"meaningful\"\r\n// character, which would be the rightmost `2`.\r\n// So, what this `onKeyDown()` handler does is it intercepts\r\n// \"Backspace\" and \"Delete\" keys and re-applies those operations manually\r\n// following the logic described above.\r\nexport function onKeyDown(event, input, _parse, _format, on_change)\r\n{\r\n\tif (isReadOnly(input)) {\r\n\t\treturn\r\n\t}\r\n\r\n\tconst operation = getOperation(event)\r\n\tswitch (operation)\r\n\t{\r\n\t\tcase 'Delete':\r\n\t\tcase 'Backspace':\r\n\t\t\t// Intercept this operation and perform it manually.\r\n\t\t\tevent.preventDefault()\r\n\r\n\t\t\tconst selection = getSelection(input)\r\n\r\n\t\t\t// If a selection is made, just erase the selected text.\r\n\t\t\tif (selection)\r\n\t\t\t{\r\n\t\t\t\teraseSelection(input, selection)\r\n\t\t\t\treturn formatInputText(input, _parse, _format, undefined, on_change)\r\n\t\t\t}\r\n\r\n\t\t\t// Else, perform the (character erasing) operation manually.\r\n\t\t\treturn formatInputText(input, _parse, _format, operation, on_change)\r\n\r\n\t\tdefault:\r\n\t\t\t// Will be handled normally as part of the `onChange` handler.\r\n\t}\r\n}\r\n\r\n/**\r\n * Erases the selected text inside an `<input/>`.\r\n * @param  {DOMElement} input\r\n * @param  {Selection} selection\r\n */\r\nfunction eraseSelection(input, selection)\r\n{\r\n\tlet text = input.value\r\n\ttext = text.slice(0, selection.start) + text.slice(selection.end)\r\n\r\n\tinput.value = text\r\n\tsetCaretPosition(input, selection.start)\r\n}\r\n\r\n/**\r\n * Parses and re-formats `<input/>` textual value.\r\n * E.g. when a user enters something into the `<input/>`\r\n * that raw input must first be parsed and the re-formatted properly.\r\n * Is called either after some user input (e.g. entered a character, pasted something)\r\n * or after the user performed an `operation` (e.g. \"Backspace\", \"Delete\").\r\n * @param  {DOMElement} input\r\n * @param  {Function} parse\r\n * @param  {Function} format\r\n * @param  {string} [operation] - The operation that triggered `<input/>` textual value change. E.g. \"Backspace\", \"Delete\".\r\n * @param  {Function} onChange\r\n */\r\nfunction formatInputText(input, _parse, _format, operation, on_change)\r\n{\r\n\t// Parse `<input/>` textual value.\r\n\t// Get the `value` and `caret` position.\r\n\tlet { value, caret } = parse(input.value, getCaretPosition(input), _parse)\r\n\r\n\t// If a user performed an operation (\"Backspace\", \"Delete\")\r\n\t// then apply that operation and get the new `value` and `caret` position.\r\n\tif (operation)\r\n\t{\r\n\t\tconst newValueAndCaret = edit(value, caret, operation)\r\n\r\n\t\tvalue = newValueAndCaret.value\r\n\t\tcaret = newValueAndCaret.caret\r\n\t}\r\n\r\n\t// Format the `value`.\r\n\t// (and reposition the caret accordingly)\r\n\tconst formatted = format(value, caret, _format)\r\n\r\n\tconst text = formatted.text\r\n\tcaret      = formatted.caret\r\n\r\n\t// Set `<input/>` textual value manually\r\n\t// to prevent React from resetting the caret position\r\n\t// later inside a subsequent `render()`.\r\n\t// Doesn't work for custom `inputComponent`s for some reason.\r\n\tinput.value = text\r\n\t// Position the caret properly.\r\n\tsetCaretPosition(input, caret)\r\n\r\n\t// If the `<input/>` textual value did change,\r\n\t// then the parsed `value` may have changed too.\r\n\ton_change(value)\r\n}","// Parses the `text`.\r\n//\r\n// Returns `{ value, caret }` where `caret` is\r\n// the caret position inside `value`\r\n// corresponding to the `caret_position` inside `text`.\r\n//\r\n// The `text` is parsed by feeding each character sequentially to\r\n// `parse_character(character, value)` function\r\n// and appending the result (if it's not `undefined`) to `value`.\r\n//\r\n// Example:\r\n//\r\n// `text` is `8 (800) 555-35-35`,\r\n// `caret_position` is `4` (before the first `0`).\r\n// `parse_character` is `(character, value) =>\r\n//   if (character >= '0' && character <= '9') { return character }`.\r\n//\r\n// then `parse()` outputs `{ value: '88005553535', caret: 2 }`.\r\n//\r\nexport default function parse(text, caret_position, parse_character)\r\n{\r\n\tlet value = ''\r\n\r\n\tlet focused_input_character_index = 0\r\n\r\n\tlet index = 0\r\n\twhile (index < text.length)\r\n\t{\r\n\t\tconst character = parse_character(text[index], value)\r\n\r\n\t\tif (character !== undefined)\r\n\t\t{\r\n\t\t\tvalue += character\r\n\r\n\t\t\tif (caret_position !== undefined)\r\n\t\t\t{\r\n\t\t\t\tif (caret_position === index)\r\n\t\t\t\t{\r\n\t\t\t\t\tfocused_input_character_index = value.length - 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (caret_position > index)\r\n\t\t\t\t{\r\n\t\t\t\t\tfocused_input_character_index = value.length\r\n\t\t\t\t}\r\n\t\t\t }\r\n\t\t}\r\n\r\n\t\tindex++\r\n\t}\r\n\r\n\t// If caret position wasn't specified\r\n\tif (caret_position === undefined)\r\n\t{\r\n\t\t// Then set caret position to \"after the last input character\"\r\n\t\tfocused_input_character_index = value.length\r\n\t}\r\n\r\n\tconst result =\r\n\t{\r\n\t\tvalue,\r\n\t\tcaret : focused_input_character_index\r\n\t}\r\n\r\n\treturn result\r\n}","// Edits text `value` (if `operation` is passed) and repositions the `caret` if needed.\r\n//\r\n// Example:\r\n//\r\n// value - '88005553535'\r\n// caret - 2 // starting from 0; is positioned before the first zero\r\n// operation - 'Backspace'\r\n//\r\n// Returns\r\n// {\r\n// \tvalue: '8005553535'\r\n// \tcaret: 1\r\n// }\r\n//\r\n// Currently supports just 'Delete' and 'Backspace' operations\r\n//\r\nexport default function edit(value, caret, operation)\r\n{\r\n\tswitch (operation)\r\n\t{\r\n\t\tcase 'Backspace':\r\n\t\t\t// If there exists the previous character,\r\n\t\t\t// then erase it and reposition the caret.\r\n\t\t\tif (caret > 0)\r\n\t\t\t{\r\n\t\t\t\t// Remove the previous character\r\n\t\t\t\tvalue = value.slice(0, caret - 1) + value.slice(caret)\r\n\t\t\t\t// Position the caret where the previous (erased) character was\r\n\t\t\t\tcaret--\r\n\t\t\t}\r\n\t\t\tbreak\r\n\r\n\t\tcase 'Delete':\r\n\t\t\t// Remove current digit (if any)\r\n\t\t\tvalue = value.slice(0, caret) + value.slice(caret + 1)\r\n\t\t\tbreak\r\n\t}\r\n\r\n\treturn { value, caret }\r\n}","// This is just `./ReactInput.js` rewritten in Hooks.\r\n\r\nimport React, { useCallback, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n\tonChange as onInputChange,\r\n\tonKeyDown as onInputKeyDown\r\n} from '../inputControl.js'\r\n\r\n// Usage:\r\n//\r\n// <ReactInput\r\n// \tvalue={this.state.phone}\r\n// \tonChange={phone => this.setState({ phone })}\r\n// \tparse={character => character}\r\n// \tformat={value => ({ text: value, template: 'xxxxxxxx' })}/>\r\n//\r\nfunction Input({\r\n\tvalue,\r\n\tparse,\r\n\tformat,\r\n\tinputComponent: InputComponent,\r\n\tonChange,\r\n\tonKeyDown,\r\n\t...rest\r\n}, ref) {\r\n\tconst internalRef = useRef();\r\n\tconst setRef = useCallback((instance) => {\r\n\t\tinternalRef.current = instance;\r\n\t\tif (ref) {\r\n\t\t\tif (typeof ref === 'function') {\r\n\t\t\t\tref(instance)\r\n\t\t\t} else {\r\n\t\t\t\tref.current = instance\r\n\t\t\t}\r\n\t\t}\r\n\t}, [ref]);\r\n\tconst _onChange = useCallback((event) => {\r\n\t\treturn onInputChange(\r\n\t\t\tevent,\r\n\t\t\tinternalRef.current,\r\n\t\t\tparse,\r\n\t\t\tformat,\r\n\t\t\tonChange\r\n\t\t)\r\n\t}, [internalRef, parse, format, onChange])\r\n\r\n\tconst _onKeyDown = useCallback((event) => {\r\n\t\tif (onKeyDown) {\r\n\t\t\tonKeyDown(event)\r\n\t\t}\r\n\t\treturn onInputKeyDown(\r\n\t\t\tevent,\r\n\t\t\tinternalRef.current,\r\n\t\t\tparse,\r\n\t\t\tformat,\r\n\t\t\tonChange\r\n\t\t)\r\n\t}, [internalRef, parse, format, onChange, onKeyDown])\r\n\r\n\treturn (\r\n\t\t<InputComponent\r\n\t\t\t{...rest}\r\n\t\t\tref={setRef}\r\n\t\t\tvalue={format(isEmptyValue(value) ? '' : value).text}\r\n\t\t\tonKeyDown={_onKeyDown}\r\n\t\t\tonChange={_onChange}/>\r\n\t)\r\n}\r\n\r\nInput = React.forwardRef(Input)\r\n\r\nInput.propTypes = {\r\n\t// Parses a single characher of `<input/>` text.\r\n\tparse: PropTypes.func.isRequired,\r\n\r\n\t// Formats `value` into `<input/>` text.\r\n\tformat: PropTypes.func.isRequired,\r\n\r\n\t// Renders `<input/>` by default.\r\n\tinputComponent: PropTypes.elementType.isRequired,\r\n\r\n\t// `<input/>` `type` attribute.\r\n\ttype: PropTypes.string.isRequired,\r\n\r\n\t// Is parsed from <input/> text.\r\n\tvalue: PropTypes.string,\r\n\r\n\t// This handler is called each time `<input/>` text is changed.\r\n\tonChange: PropTypes.func.isRequired,\r\n\r\n\t// Passthrough\r\n\tonKeyDown: PropTypes.func,\r\n\tonCut: PropTypes.func,\r\n\tonPaste: PropTypes.func\r\n}\r\n\r\nInput.defaultProps = {\r\n\t// Renders `<input/>` by default.\r\n\tinputComponent: 'input',\r\n\r\n\t// `<input/>` `type` attribute.\r\n\ttype: 'text'\r\n}\r\n\r\nexport default Input\r\n\r\nfunction isEmptyValue(value) {\r\n\treturn value === undefined || value === null\r\n}","// Copy-pasted from:\r\n// https://github.com/substack/semver-compare/blob/master/index.js\r\n//\r\n// Inlining this function because some users reported issues with\r\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\r\n//\r\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\r\nexport default function(a, b) {\r\n    a = a.split('-')\r\n    b = b.split('-')\r\n    var pa = a[0].split('.')\r\n    var pb = b[0].split('.')\r\n    for (var i = 0; i < 3; i++) {\r\n        var na = Number(pa[i])\r\n        var nb = Number(pb[i])\r\n        if (na > nb) return 1\r\n        if (nb > na) return -1\r\n        if (!isNaN(na) && isNaN(nb)) return 1\r\n        if (isNaN(na) && !isNaN(nb)) return -1\r\n    }\r\n    if (a[1] && b[1]) {\r\n        return a[1] > b[1] ? 1 : (a[1] < b[1] ? -1 : 0)\r\n    }\r\n    return !a[1] && b[1] ? 1 : (a[1] && !b[1] ? -1 : 0)\r\n}","import compare from './tools/semver-compare.js'\r\n\r\n// Added \"possibleLengths\" and renamed\r\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\r\nconst V2 = '1.0.18'\r\n\r\n// Added \"idd_prefix\" and \"default_idd_prefix\".\r\nconst V3 = '1.2.0'\r\n\r\n// Moved `001` country code to \"nonGeographic\" section of metadata.\r\nconst V4 = '1.7.35'\r\n\r\nconst DEFAULT_EXT_PREFIX = ' ext. '\r\n\r\nconst CALLING_CODE_REG_EXP = /^\\d+$/\r\n\r\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\r\nexport default class Metadata {\r\n\tconstructor(metadata) {\r\n\t\tvalidateMetadata(metadata)\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, metadata)\r\n\t}\r\n\r\n\tgetCountries() {\r\n\t\treturn Object.keys(this.metadata.countries).filter(_ => _ !== '001')\r\n\t}\r\n\r\n\tgetCountryMetadata(countryCode) {\r\n\t\treturn this.metadata.countries[countryCode]\r\n\t}\r\n\r\n\tnonGeographic() {\r\n\t\tif (this.v1 || this.v2 || this.v3) return\r\n\t\t// `nonGeographical` was a typo.\r\n\t\t// It's present in metadata generated from `1.7.35` to `1.7.37`.\r\n\t\t// The test case could be found by searching for \"nonGeographical\".\r\n\t\treturn this.metadata.nonGeographic || this.metadata.nonGeographical\r\n\t}\r\n\r\n\thasCountry(country) {\r\n\t\treturn this.getCountryMetadata(country) !== undefined\r\n\t}\r\n\r\n\thasCallingCode(callingCode) {\r\n\t\tif (this.getCountryCodesForCallingCode(callingCode)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tif (this.nonGeographic()[callingCode]) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisNonGeographicCallingCode(callingCode) {\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\treturn this.nonGeographic()[callingCode] ? true : false\r\n\t\t} else {\r\n\t\t\treturn this.getCountryCodesForCallingCode(callingCode) ? false : true\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountry(countryCode) {\r\n\t\treturn this.selectNumberingPlan(countryCode)\r\n\t}\r\n\r\n\tselectNumberingPlan(countryCode, callingCode) {\r\n\t\t// Supports just passing `callingCode` as the first argument.\r\n\t\tif (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\r\n\t\t\tcallingCode = countryCode\r\n\t\t\tcountryCode = null\r\n\t\t}\r\n\t\tif (countryCode && countryCode !== '001') {\r\n\t\t\tif (!this.hasCountry(countryCode)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${countryCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this)\r\n\t\t} else if (callingCode) {\r\n\t\t\tif (!this.hasCallingCode(callingCode)) {\r\n\t\t\t\tthrow new Error(`Unknown calling code: ${callingCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this)\r\n\t\t} else {\r\n\t\t\tthis.numberingPlan = undefined\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tgetCountryCodesForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\tif (countryCodes) {\r\n\t\t\t// Metadata before V4 included \"non-geographic entity\" calling codes\r\n\t\t\t// inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\r\n\t\t\t// Now the semantics of `country_calling_codes` has changed:\r\n\t\t\t// it's specifically for \"countries\" now.\r\n\t\t\t// Older versions of custom metadata will simply skip parsing\r\n\t\t\t// \"non-geographic entity\" phone numbers with new versions\r\n\t\t\t// of this library: it's not considered a bug,\r\n\t\t\t// because such numbers are extremely rare,\r\n\t\t\t// and developers extremely rarely use custom metadata.\r\n\t\t\tif (countryCodes.length === 1 && countryCodes[0].length === 3) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\treturn countryCodes\r\n\t\t}\r\n\t}\r\n\r\n\tgetCountryCodeForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.getCountryCodesForCallingCode(callingCode)\r\n\t\tif (countryCodes) {\r\n\t\t\treturn countryCodes[0]\r\n\t\t}\r\n\t}\r\n\r\n\tgetNumberingPlanMetadata(callingCode) {\r\n\t\tconst countryCode = this.getCountryCodeForCallingCode(callingCode)\r\n\t\tif (countryCode) {\r\n\t\t\treturn this.getCountryMetadata(countryCode)\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tconst metadata = this.nonGeographic()[callingCode]\r\n\t\t\tif (metadata) {\r\n\t\t\t\treturn metadata\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\t// In that metadata, there was no concept of \"non-geographic\" metadata\r\n\t\t\t// so metadata for `001` country code was stored along with other countries.\r\n\t\t\t// The test case can be found by searching for:\r\n\t\t\t// \"should work around `nonGeographic` metadata not existing\".\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn this.metadata.countries['001']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountryCallingCode() {\r\n\t\treturn this.numberingPlan.callingCode()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tIDDPrefix() {\r\n\t\treturn this.numberingPlan.IDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tdefaultIDDPrefix() {\r\n\t\treturn this.numberingPlan.defaultIDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalNumberPattern() {\r\n\t\treturn this.numberingPlan.nationalNumberPattern()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tpossibleLengths() {\r\n\t\treturn this.numberingPlan.possibleLengths()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tformats() {\r\n\t\treturn this.numberingPlan.formats()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixForParsing() {\r\n\t\treturn this.numberingPlan.nationalPrefixForParsing()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.numberingPlan.nationalPrefixTransformRule()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tleadingDigits() {\r\n\t\treturn this.numberingPlan.leadingDigits()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\thasTypes() {\r\n\t\treturn this.numberingPlan.hasTypes()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\ttype(type) {\r\n\t\treturn this.numberingPlan.type(type)\r\n\t}\r\n\r\n\t// Deprecated.\r\n\text() {\r\n\t\treturn this.numberingPlan.ext()\r\n\t}\r\n\r\n\tcountryCallingCodes() {\r\n\t\tif (this.v1) return this.metadata.country_phone_code_to_countries\r\n\t\treturn this.metadata.country_calling_codes\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tchooseCountryByCountryCallingCode(callingCode) {\r\n\t\treturn this.selectNumberingPlan(callingCode)\r\n\t}\r\n\r\n\thasSelectedNumberingPlan() {\r\n\t\treturn this.numberingPlan !== undefined\r\n\t}\r\n}\r\n\r\nclass NumberingPlan {\r\n\tconstructor(metadata, globalMetadataObject) {\r\n\t\tthis.globalMetadataObject = globalMetadataObject\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, globalMetadataObject.metadata)\r\n\t}\r\n\r\n\tcallingCode() {\r\n\t\treturn this.metadata[0]\r\n\t}\r\n\r\n\t// Formatting information for regions which share\r\n\t// a country calling code is contained by only one region\r\n\t// for performance reasons. For example, for NANPA region\r\n\t// (\"North American Numbering Plan Administration\",\r\n\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\r\n\t// it will be contained in the metadata for `US`.\r\n\tgetDefaultCountryMetadataForRegion() {\r\n\t\treturn this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())\r\n\t}\r\n\r\n\t// Is always present.\r\n\tIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[1]\r\n\t}\r\n\r\n\t// Is only present when a country supports multiple IDD prefixes.\r\n\tdefaultIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[12]\r\n\t}\r\n\r\n\tnationalNumberPattern() {\r\n\t\tif (this.v1 || this.v2) return this.metadata[1]\r\n\t\treturn this.metadata[2]\r\n\t}\r\n\r\n\t// \"possible length\" data is always present in Google's metadata.\r\n\tpossibleLengths() {\r\n\t\tif (this.v1) return\r\n\t\treturn this.metadata[this.v2 ? 2 : 3]\r\n\t}\r\n\r\n\t_getFormats(metadata) {\r\n\t\treturn metadata[this.v1 ? 2 : this.v2 ? 3 : 4]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// formats are all stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tformats() {\r\n\t\tconst formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || []\r\n\t\treturn formats.map(_ => new Format(_, this))\r\n\t}\r\n\r\n\tnationalPrefix() {\r\n\t\treturn this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5]\r\n\t}\r\n\r\n\t_getNationalPrefixFormattingRule(metadata) {\r\n\t\treturn metadata[this.v1 ? 4 : this.v2 ? 5 : 6]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// national prefix formatting rule is stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\t_nationalPrefixForParsing() {\r\n\t\treturn this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7]\r\n\t}\r\n\r\n\tnationalPrefixForParsing() {\r\n\t\t// If `national_prefix_for_parsing` is not set explicitly,\r\n\t\t// then infer it from `national_prefix` (if any)\r\n\t\treturn this._nationalPrefixForParsing() || this.nationalPrefix()\r\n\t}\r\n\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8]\r\n\t}\r\n\r\n\t_getNationalPrefixIsOptionalWhenFormatting() {\r\n\t\treturn !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// \"national prefix is optional when formatting\" flag is\r\n\t// stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) ||\r\n\t\t\tthis._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\tleadingDigits() {\r\n\t\treturn this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10]\r\n\t}\r\n\r\n\ttypes() {\r\n\t\treturn this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11]\r\n\t}\r\n\r\n\thasTypes() {\r\n\t\t// Versions 1.2.0 - 1.2.4: can be `[]`.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (this.types() && this.types().length === 0) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// Versions <= 1.2.4: can be `undefined`.\r\n\t\t// Version >= 1.2.5: can be `0`.\r\n\t\treturn !!this.types()\r\n\t}\r\n\r\n\ttype(type) {\r\n\t\tif (this.hasTypes() && getType(this.types(), type)) {\r\n\t\t\treturn new Type(getType(this.types(), type), this)\r\n\t\t}\r\n\t}\r\n\r\n\text() {\r\n\t\tif (this.v1 || this.v2) return DEFAULT_EXT_PREFIX\r\n\t\treturn this.metadata[13] || DEFAULT_EXT_PREFIX\r\n\t}\r\n}\r\n\r\nclass Format {\r\n\tconstructor(format, metadata) {\r\n\t\tthis._format = format\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\treturn this._format[0]\r\n\t}\r\n\r\n\tformat() {\r\n\t\treturn this._format[1]\r\n\t}\r\n\r\n\tleadingDigitsPatterns() {\r\n\t\treturn this._format[2] || []\r\n\t}\r\n\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._format[3] || this.metadata.nationalPrefixFormattingRule()\r\n\t}\r\n\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\tnationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\r\n\t\t// National prefix is omitted if there's no national prefix formatting rule\r\n\t\t// set for this country, or when the national prefix formatting rule\r\n\t\t// contains no national prefix itself, or when this rule is set but\r\n\t\t// national prefix is optional for this phone number format\r\n\t\t// (and it is not enforced explicitly)\r\n\t\treturn this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\t// Checks whether national prefix formatting rule contains national prefix.\r\n\tusesNationalPrefix() {\r\n\t\treturn this.nationalPrefixFormattingRule() &&\r\n\t\t\t// Check that national prefix formatting rule is not a \"dummy\" one.\r\n\t\t\t!FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule())\r\n\t\t\t// In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\r\n\t\t\t// when `national_prefix_formatting_rule` is not present.\r\n\t\t\t// So, `true` or `false` are returned explicitly here, so that\r\n\t\t\t// `0` number isn't returned.\r\n\t\t\t? true\r\n\t\t\t: false\r\n\t}\r\n\r\n\tinternationalFormat() {\r\n\t\treturn this._format[5] || this.format()\r\n\t}\r\n}\r\n\r\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\r\nconst FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/\r\n\r\nclass Type {\r\n\tconstructor(type, metadata) {\r\n\t\tthis.type = type\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\tif (this.metadata.v1) return this.type\r\n\t\treturn this.type[0]\r\n\t}\r\n\r\n\tpossibleLengths() {\r\n\t\tif (this.metadata.v1) return\r\n\t\treturn this.type[1] || this.metadata.possibleLengths()\r\n\t}\r\n}\r\n\r\nfunction getType(types, type) {\r\n\tswitch (type) {\r\n\t\tcase 'FIXED_LINE':\r\n\t\t\treturn types[0]\r\n\t\tcase 'MOBILE':\r\n\t\t\treturn types[1]\r\n\t\tcase 'TOLL_FREE':\r\n\t\t\treturn types[2]\r\n\t\tcase 'PREMIUM_RATE':\r\n\t\t\treturn types[3]\r\n\t\tcase 'PERSONAL_NUMBER':\r\n\t\t\treturn types[4]\r\n\t\tcase 'VOICEMAIL':\r\n\t\t\treturn types[5]\r\n\t\tcase 'UAN':\r\n\t\t\treturn types[6]\r\n\t\tcase 'PAGER':\r\n\t\t\treturn types[7]\r\n\t\tcase 'VOIP':\r\n\t\t\treturn types[8]\r\n\t\tcase 'SHARED_COST':\r\n\t\t\treturn types[9]\r\n\t}\r\n}\r\n\r\nexport function validateMetadata(metadata) {\r\n\tif (!metadata) {\r\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.')\r\n\t}\r\n\r\n\t// `country_phone_code_to_countries` was renamed to\r\n\t// `country_calling_codes` in `1.0.18`.\r\n\tif (!is_object(metadata) || !is_object(metadata.countries)) {\r\n\t\tthrow new Error(`[libphonenumber-js] \\`metadata\\` argument was passed but it's not a valid metadata. Must be an object having \\`.countries\\` child object property. Got ${is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata}.`)\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst type_of = _ => typeof _\r\n\r\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\r\nexport function getExtPrefix(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).ext()\r\n\t}\r\n\treturn DEFAULT_EXT_PREFIX\r\n}\r\n\r\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\r\nexport function getCountryCallingCode(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).countryCallingCode()\r\n\t}\r\n\tthrow new Error(`Unknown country: ${country}`)\r\n}\r\n\r\nexport function isSupportedCountry(country, metadata) {\r\n\t// metadata = new Metadata(metadata)\r\n\t// return metadata.hasCountry(country)\r\n\treturn metadata.countries[country] !== undefined\r\n}\r\n\r\nfunction setVersion(metadata) {\r\n\tconst { version } = metadata\r\n\tif (typeof version === 'number') {\r\n\t\tthis.v1 = version === 1\r\n\t\tthis.v2 = version === 2\r\n\t\tthis.v3 = version === 3\r\n\t\tthis.v4 = version === 4\r\n\t} else {\r\n\t\tif (!version) {\r\n\t\t\tthis.v1 = true\r\n\t\t} else if (compare(version, V3) === -1) {\r\n\t\t\tthis.v2 = true\r\n\t\t} else if (compare(version, V4) === -1) {\r\n\t\t\tthis.v3 = true\r\n\t\t} else {\r\n\t\t\tthis.v4 = true\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\r\n// function isCountryCode(countryCode) {\r\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\r\n// }","/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\r\nexport default function mergeArrays(a, b) {\r\n\tconst merged = a.slice()\r\n\r\n\tfor (const element of b) {\r\n\t\tif (a.indexOf(element) < 0) {\r\n\t\t\tmerged.push(element)\r\n\t\t}\r\n\t}\r\n\r\n\treturn merged.sort((a, b) => a - b)\r\n\r\n\t// ES6 version, requires Set polyfill.\r\n\t// let merged = new Set(a)\r\n\t// for (const element of b) {\r\n\t// \tmerged.add(i)\r\n\t// }\r\n\t// return Array.from(merged).sort((a, b) => a - b)\r\n}","import mergeArrays from './mergeArrays.js'\r\n\r\nexport default function checkNumberLength(nationalNumber, metadata) {\r\n\treturn checkNumberLengthForType(nationalNumber, undefined, metadata)\r\n}\r\n\r\n// Checks whether a number is possible for the country based on its length.\r\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\r\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\r\n\tconst type_info = metadata.type(type)\r\n\r\n\t// There should always be \"<possiblePengths/>\" set for every type element.\r\n\t// This is declared in the XML schema.\r\n\t// For size efficiency, where a sub-description (e.g. fixed-line)\r\n\t// has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\r\n\t// so we fall back to the \"general description\". Where no numbers of the type\r\n\t// exist at all, there is one possible length (-1) which is guaranteed\r\n\t// not to match the length of any real phone number.\r\n\tlet possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths()\r\n\t// let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\r\n\r\n\t// Metadata before version `1.0.18` didn't contain `possible_lengths`.\r\n\tif (!possible_lengths) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (type === 'FIXED_LINE_OR_MOBILE') {\r\n\t\t// No such country in metadata.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (!metadata.type('FIXED_LINE')) {\r\n\t\t\t// The rare case has been encountered where no fixedLine data is available\r\n\t\t\t// (true for some non-geographic entities), so we just check mobile.\r\n\t\t\treturn checkNumberLengthForType(nationalNumber, 'MOBILE', metadata)\r\n\t\t}\r\n\r\n\t\tconst mobile_type = metadata.type('MOBILE')\r\n\t\tif (mobile_type) {\r\n\t\t\t// Merge the mobile data in if there was any. \"Concat\" creates a new\r\n\t\t\t// array, it doesn't edit possible_lengths in place, so we don't need a copy.\r\n\t\t\t// Note that when adding the possible lengths from mobile, we have\r\n\t\t\t// to again check they aren't empty since if they are this indicates\r\n\t\t\t// they are the same as the general desc and should be obtained from there.\r\n\t\t\tpossible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths())\r\n\t\t\t// The current list is sorted; we need to merge in the new list and\r\n\t\t\t// re-sort (duplicates are okay). Sorting isn't so expensive because\r\n\t\t\t// the lists are very small.\r\n\r\n\t\t\t// if (local_lengths) {\r\n\t\t\t// \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\r\n\t\t\t// } else {\r\n\t\t\t// \tlocal_lengths = mobile_type.possibleLengthsLocal()\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\t// If the type doesn't exist then return 'INVALID_LENGTH'.\r\n\telse if (type && !type_info) {\r\n\t\treturn 'INVALID_LENGTH'\r\n\t}\r\n\r\n\tconst actual_length = nationalNumber.length\r\n\r\n\t// In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\r\n\t// // This is safe because there is never an overlap beween the possible lengths\r\n\t// // and the local-only lengths; this is checked at build time.\r\n\t// if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\r\n\t// {\r\n\t// \treturn 'IS_POSSIBLE_LOCAL_ONLY'\r\n\t// }\r\n\r\n\tconst minimum_length = possible_lengths[0]\r\n\r\n\tif (minimum_length === actual_length) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (minimum_length > actual_length) {\r\n\t\treturn 'TOO_SHORT'\r\n\t}\r\n\r\n\tif (possible_lengths[possible_lengths.length - 1] < actual_length) {\r\n\t\treturn 'TOO_LONG'\r\n\t}\r\n\r\n\t// We skip the first element since we've already checked it.\r\n\treturn possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH'\r\n}","import Metadata from './metadata.js'\r\nimport checkNumberLength from './helpers/checkNumberLength.js'\r\n\r\nexport default function isPossiblePhoneNumber(input, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (options.v2) {\r\n\t\tif (!input.countryCallingCode) {\r\n\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t}\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t} else {\r\n\t\tif (!input.phone) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (input.country) {\r\n\t\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t\t}\r\n\t\t\tmetadata.country(input.country)\r\n\t\t} else {\r\n\t\t\tif (!input.countryCallingCode) {\r\n\t\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t\t}\r\n\t\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t\t}\r\n\t}\r\n\r\n\t// Old metadata (< 1.0.18) had no \"possible length\" data.\r\n\tif (metadata.possibleLengths()) {\r\n\t\treturn isPossibleNumber(input.phone || input.nationalNumber, metadata)\r\n\t} else {\r\n\t\t// There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\r\n\t\t// were missing for \"non-geographical\" numbering plans.\r\n\t\t// Just assume the number is possible in such cases:\r\n\t\t// it's unlikely that anyone generated their custom metadata\r\n\t\t// in that short period of time (one day).\r\n\t\t// This code can be removed in some future major version update.\r\n\t\tif (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\r\n\t\t\t// \"Non-geographic entities\" did't have `possibleLengths`\r\n\t\t\t// due to a bug in metadata generation process.\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tthrow new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isPossibleNumber(nationalNumber, metadata) { //, isInternational) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'IS_POSSIBLE':\r\n\t\t\treturn true\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t// \treturn !isInternational\r\n\t\tdefault:\r\n\t\t\treturn false\r\n\t}\r\n}","/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\r\nexport default function matchesEntirely(text, regular_expression) {\r\n\t// If assigning the `''` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\ttext = text || ''\r\n\treturn new RegExp('^(?:' + regular_expression + ')$').test(text)\r\n}","import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\n\r\nconst NON_FIXED_LINE_PHONE_TYPES = [\r\n\t'MOBILE',\r\n\t'PREMIUM_RATE',\r\n\t'TOLL_FREE',\r\n\t'SHARED_COST',\r\n\t'VOIP',\r\n\t'PERSONAL_NUMBER',\r\n\t'PAGER',\r\n\t'UAN',\r\n\t'VOICEMAIL'\r\n]\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function getNumberType(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\t// When `parse()` returned `{}`\r\n\t// meaning that the phone number is not a valid one.\r\n\tif (!input.country) {\r\n\t\treturn\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// The following is copy-pasted from the original function:\r\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\r\n\r\n\t// Is this national number even valid for this country\r\n\tif (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Is it fixed line number\r\n\tif (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\r\n\t\t// Because duplicate regular expressions are removed\r\n\t\t// to reduce metadata size, if \"mobile\" pattern is \"\"\r\n\t\t// then it means it was removed due to being a duplicate of the fixed-line pattern.\r\n\t\t//\r\n\t\tif (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.\r\n\t\t// For example, for \"US\" country.\r\n\t\t// Old metadata (< `1.0.18`) had a specific \"types\" data structure\r\n\t\t// that happened to be `undefined` for `MOBILE` in that case.\r\n\t\t// Newer metadata (>= `1.0.18`) has another data structure that is\r\n\t\t// not `undefined` for `MOBILE` in that case (it's just an empty array).\r\n\t\t// So this `if` is just for backwards compatibility with old metadata.\r\n\t\tif (!metadata.type('MOBILE')) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\r\n\t\t// (no such country in the minimal metadata set)\r\n\t\t/* istanbul ignore if */\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\treturn 'FIXED_LINE'\r\n\t}\r\n\r\n\tfor (const type of NON_FIXED_LINE_PHONE_TYPES) {\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\r\n\t\t\treturn type\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\r\n\ttype = metadata.type(type)\r\n\tif (!type || !type.pattern()) {\r\n\t\treturn false\r\n\t}\r\n\t// Check if any possible number lengths are present;\r\n\t// if so, we use them to avoid checking\r\n\t// the validation pattern if they don't match.\r\n\t// If they are absent, this means they match\r\n\t// the general description, which we have\r\n\t// already checked before a specific number type.\r\n\tif (type.possibleLengths() &&\r\n\t\ttype.possibleLengths().indexOf(nationalNumber.length) < 0) {\r\n\t\treturn false\r\n\t}\r\n\treturn matchesEntirely(nationalNumber, type.pattern())\r\n}","// The minimum length of the national significant number.\r\nexport const MIN_LENGTH_FOR_NSN = 2\r\n\r\n// The ITU says the maximum length should be 15,\r\n// but one can find longer numbers in Germany.\r\nexport const MAX_LENGTH_FOR_NSN = 17\r\n\r\n// The maximum length of the country calling code.\r\nexport const MAX_LENGTH_COUNTRY_CODE = 3\r\n\r\n// Digits accepted in phone numbers\r\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\r\nexport const VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9'\r\n\r\n// `DASHES` will be right after the opening square bracket of the \"character class\"\r\nconst DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D'\r\nconst SLASHES = '\\uFF0F/'\r\nconst DOTS = '\\uFF0E.'\r\nexport const WHITESPACE = ' \\u00A0\\u00AD\\u200B\\u2060\\u3000'\r\nconst BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]'\r\n// export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\r\nconst TILDES = '~\\u2053\\u223C\\uFF5E'\r\n\r\n// Regular expression of acceptable punctuation found in phone numbers. This\r\n// excludes punctuation found as a leading character only. This consists of dash\r\n// characters, white space characters, full stops, slashes, square brackets,\r\n// parentheses and tildes. Full-width variants are also present.\r\nexport const VALID_PUNCTUATION = `${DASHES}${SLASHES}${DOTS}${WHITESPACE}${BRACKETS}${TILDES}`\r\n\r\nexport const PLUS_CHARS = '+\\uFF0B'\r\n// const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')","import { VALID_PUNCTUATION } from '../constants.js'\r\n\r\n// Removes brackets and replaces dashes with spaces.\r\n//\r\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\r\n//\r\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\r\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\r\n//\r\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\r\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\r\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\r\n//\r\n// \"The country calling code for all countries participating in the NANP is 1.\r\n// In international format, an NANP number should be listed as +1 301 555 01 00,\r\n// where 301 is an area code (Maryland).\"\r\n//\r\n// I personally prefer the international format without any punctuation.\r\n// For example, brackets are remnants of the old age, meaning that the\r\n// phone number part in brackets (so called \"area code\") can be omitted\r\n// if dialing within the same \"area\".\r\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\r\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\r\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\r\n// He has a couple of seconds to memorize that number until it passes by.\r\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\r\n// but with hyphens instead of spaces the grouping is more explicit.\r\n// I personally think that hyphens introduce visual clutter,\r\n// so I prefer replacing them with spaces in international numbers.\r\n// In the modern age all output is done on displays where spaces are clearly distinguishable\r\n// so hyphens can be safely replaced with spaces without losing any legibility.\r\n//\r\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\r\n\treturn formattedNumber.replace(new RegExp(`[${VALID_PUNCTUATION}]+`, 'g'), ' ').trim()\r\n}","import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'\r\n\r\n// This was originally set to $1 but there are some countries for which the\r\n// first group is not used in the national pattern (e.g. Argentina) so the $1\r\n// group does not match correctly. Therefore, we use `\\d`, so that the first\r\n// group actually used in the pattern will be matched.\r\nexport const FIRST_GROUP_PATTERN = /(\\$\\d)/\r\n\r\nexport default function formatNationalNumberUsingFormat(\r\n\tnumber,\r\n\tformat,\r\n\t{\r\n\t\tuseInternationalFormat,\r\n\t\twithNationalPrefix,\r\n\t\tcarrierCode,\r\n\t\tmetadata\r\n\t}\r\n) {\r\n\tconst formattedNumber = number.replace(\r\n\t\tnew RegExp(format.pattern()),\r\n\t\tuseInternationalFormat\r\n\t\t\t? format.internationalFormat()\r\n\t\t\t: (\r\n\t\t\t\t// This library doesn't use `domestic_carrier_code_formatting_rule`,\r\n\t\t\t\t// because that one is only used when formatting phone numbers\r\n\t\t\t\t// for dialing from a mobile phone, and this is not a dialing library.\r\n\t\t\t\t// carrierCode && format.domesticCarrierCodeFormattingRule()\r\n\t\t\t\t// \t// First, replace the $CC in the formatting rule with the desired carrier code.\r\n\t\t\t\t// \t// Then, replace the $FG in the formatting rule with the first group\r\n\t\t\t\t// \t// and the carrier code combined in the appropriate way.\r\n\t\t\t\t// \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\r\n\t\t\t\t// \t: (\r\n\t\t\t\t// \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t// \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t// \t\t\t: format.format()\r\n\t\t\t\t// \t)\r\n\t\t\t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t\t: format.format()\r\n\t\t\t)\r\n\t)\r\n\tif (useInternationalFormat) {\r\n\t\treturn applyInternationalSeparatorStyle(formattedNumber)\r\n\t}\r\n\treturn formattedNumber\r\n}","import Metadata from '../metadata.js'\r\n\r\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\r\nconst SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/\r\n\r\n// For regions that have multiple IDD prefixes\r\n// a preferred IDD prefix is returned.\r\nexport default function getIddPrefix(country, callingCode, metadata) {\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tif (countryMetadata.defaultIDDPrefix()) {\r\n\t\treturn countryMetadata.defaultIDDPrefix()\r\n\t}\r\n\tif (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\r\n\t\treturn countryMetadata.IDDPrefix()\r\n\t}\r\n}\r\n","import { VALID_DIGITS } from '../../constants.js'\r\n\r\n// The RFC 3966 format for extensions.\r\nconst RFC3966_EXTN_PREFIX = ';ext='\r\n\r\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\r\nconst getExtensionDigitsPattern = (maxLength) => `([${VALID_DIGITS}]{1,${maxLength}})`\r\n\r\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\r\nexport default function createExtensionPattern(purpose) {\r\n\t// We cap the maximum length of an extension based on the ambiguity of the way\r\n\t// the extension is prefixed. As per ITU, the officially allowed length for\r\n\t// extensions is actually 40, but we don't support this since we haven't seen real\r\n\t// examples and this introduces many false interpretations as the extension labels\r\n\t// are not standardized.\r\n\t/** @type {string} */\r\n\tvar extLimitAfterExplicitLabel = '20';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterLikelyLabel = '15';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterAmbiguousChar = '9';\r\n\t/** @type {string} */\r\n\tvar extLimitWhenNotSure = '6';\r\n\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\u00A0\\\\t,]*\";\r\n\t// Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\r\n\t/** @type {string} */\r\n\tvar possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\u00A0\\\\t,-]*\";\r\n\t/** @type {string} */\r\n\tvar optionalExtnSuffix = \"#?\";\r\n\r\n\t// Here the extension is called out in more explicit way, i.e mentioning it obvious\r\n\t// patterns like \"ext.\".\r\n\t/** @type {string} */\r\n\tvar explicitExtLabels =\r\n\t  \"(?:e?xt(?:ensi(?:o\\u0301?|\\u00F3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\";\r\n\t// One-character symbols that can be used to indicate an extension, and less\r\n\t// commonly used or more ambiguous extension labels.\r\n\t/** @type {string} */\r\n\tvar ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\";\r\n\t// When extension is not separated clearly.\r\n\t/** @type {string} */\r\n\tvar ambiguousSeparator = \"[- ]+\";\r\n\t// This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\r\n\t// comma as extension label may have it.\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsNumberExtLabelNoComma = \"[ \\u00A0\\\\t]*\";\r\n\t// \",,\" is commonly used for auto dialling the extension when connected. First\r\n\t// comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\r\n\t// not repeat it here. Semi-colon works in Iphone and Android also to pop up a\r\n\t// button with the extension number following.\r\n\t/** @type {string} */\r\n\tvar autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\r\n\r\n\t/** @type {string} */\r\n\tvar rfcExtn = RFC3966_EXTN_PREFIX\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\r\n\t/** @type {string} */\r\n\tvar explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel)\r\n\t     + optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t+ getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar americanStyleExtnWithSuffix = ambiguousSeparator\r\n\t+ getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\r\n\r\n\t/** @type {string} */\r\n\tvar autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t     + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterLikelyLabel)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t    + \"(?:,)+\" + possibleCharsAfterExtLabel\r\n\t    + getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t    + optionalExtnSuffix;\r\n\r\n\t// The first regular expression covers RFC 3966 format, where the extension is added\r\n\t// using \";ext=\". The second more generic where extension is mentioned with explicit\r\n\t// labels like \"ext:\". In both the above cases we allow more numbers in extension than\r\n\t// any other extension labels. The third one captures when single character extension\r\n\t// labels or less commonly used labels are used. In such cases we capture fewer\r\n\t// extension digits in order to reduce the chance of falsely interpreting two\r\n\t// numbers beside each other as a number + extension. The fourth one covers the\r\n\t// special case of American numbers where the extension is written with a hash\r\n\t// at the end, such as \"- 503#\". The fifth one is exclusively for extension\r\n\t// autodialling formats which are used when dialling and in this case we accept longer\r\n\t// extensions. The last one is more liberal on the number of commas that acts as\r\n\t// extension labels, so we have a strict cap on the number of digits in such extensions.\r\n\treturn rfcExtn + \"|\"\r\n\t       + explicitExtn + \"|\"\r\n\t       + ambiguousExtn + \"|\"\r\n\t       + americanStyleExtnWithSuffix + \"|\"\r\n\t       + autoDiallingExtn + \"|\"\r\n\t       + onlyCommasExtn;\r\n}","import {\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tVALID_DIGITS,\r\n\tVALID_PUNCTUATION,\r\n\tPLUS_CHARS\r\n} from '../constants.js'\r\n\r\nimport createExtensionPattern from './extension/createExtensionPattern.js'\r\n\r\n//  Regular expression of viable phone numbers. This is location independent.\r\n//  Checks we have at least three leading digits, and only valid punctuation,\r\n//  alpha characters and digits in the phone number. Does not include extension\r\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\r\n//  used as a placeholder for carrier codes, for example in Brazilian phone\r\n//  numbers. We also allow multiple '+' characters at the start.\r\n//\r\n//  Corresponds to the following:\r\n//  [digits]{minLengthNsn}|\r\n//  plus_sign*\r\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\r\n//\r\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\r\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\r\n//  The second expression restricts the number of digits to three or more, but\r\n//  then allows them to be in international form, and to have alpha-characters\r\n//  and punctuation. We split up the two reg-exes here and combine them when\r\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\r\n//  with ^ and append $ to each branch.\r\n//\r\n//  \"Note VALID_PUNCTUATION starts with a -,\r\n//   so must be the first in the range\" (c) Google devs.\r\n//  (wtf did they mean by saying that; probably nothing)\r\n//\r\nconst MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'\r\n//\r\n// And this is the second reg-exp:\r\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\r\n//\r\nexport const VALID_PHONE_NUMBER =\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){3,}' +\r\n\t'[' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']*'\r\n\r\n// This regular expression isn't present in Google's `libphonenumber`\r\n// and is only used to determine whether the phone number being input\r\n// is too short for it to even consider it a \"valid\" number.\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nconst VALID_PHONE_NUMBER_START_REG_EXP = new RegExp(\r\n\t'^' +\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){1,2}' +\r\n\t'$'\r\n, 'i')\r\n\r\nexport const VALID_PHONE_NUMBER_WITH_EXTENSION =\r\n\tVALID_PHONE_NUMBER +\r\n\t// Phone number extensions\r\n\t'(?:' + createExtensionPattern() + ')?'\r\n\r\n// The combined regular expression for valid phone numbers:\r\n//\r\nconst VALID_PHONE_NUMBER_PATTERN = new RegExp(\r\n\t// Either a short two-digit-only phone number\r\n\t'^' +\r\n\t\tMIN_LENGTH_PHONE_NUMBER_PATTERN +\r\n\t'$' +\r\n\t'|' +\r\n\t// Or a longer fully parsed phone number (min 3 characters)\r\n\t'^' +\r\n\t\tVALID_PHONE_NUMBER_WITH_EXTENSION +\r\n\t'$'\r\n, 'i')\r\n\r\n// Checks to see if the string of characters could possibly be a phone number at\r\n// all. At the moment, checks to see that the string begins with at least 2\r\n// digits, ignoring any punctuation commonly found in phone numbers. This method\r\n// does not require the number to be normalized in advance - but does assume\r\n// that leading non-number symbols have been removed, such as by the method\r\n// `extract_possible_number`.\r\n//\r\nexport default function isViablePhoneNumber(number) {\r\n\treturn number.length >= MIN_LENGTH_FOR_NSN &&\r\n\t\tVALID_PHONE_NUMBER_PATTERN.test(number)\r\n}\r\n\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nexport function isViablePhoneNumberStart(number) {\r\n\treturn VALID_PHONE_NUMBER_START_REG_EXP.test(number)\r\n}","import isViablePhoneNumber from './isViablePhoneNumber.js'\r\n\r\n// https://www.ietf.org/rfc/rfc3966.txt\r\n\r\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nexport function parseRFC3966(text) {\r\n\tlet number\r\n\tlet ext\r\n\r\n\t// Replace \"tel:\" with \"tel=\" for parsing convenience.\r\n\ttext = text.replace(/^tel:/, 'tel=')\r\n\r\n\tfor (const part of text.split(';')) {\r\n\t\tconst [name, value] = part.split('=')\r\n\t\tswitch (name) {\r\n\t\t\tcase 'tel':\r\n\t\t\t\tnumber = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ext':\r\n\t\t\t\text = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'phone-context':\r\n\t\t\t\t// Only \"country contexts\" are supported.\r\n\t\t\t\t// \"Domain contexts\" are ignored.\r\n\t\t\t\tif (value[0] === '+') {\r\n\t\t\t\t\tnumber = value + number\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst result = { number }\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\r\nexport function formatRFC3966({ number, ext }) {\r\n\tif (!number) {\r\n\t\treturn ''\r\n\t}\r\n\tif (number[0] !== '+') {\r\n\t\tthrow new Error(`\"formatRFC3966()\" expects \"number\" to be in E.164 format.`)\r\n\t}\r\n\treturn `tel:${number}${ext ? ';ext=' + ext : ''}`\r\n}","// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js'\r\nimport Metadata, { getCountryCallingCode } from './metadata.js'\r\nimport getIddPrefix from './helpers/getIddPrefix.js'\r\nimport { formatRFC3966 } from './helpers/RFC3966.js'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n\tformatExtension: (formattedNumber, extension, metadata) => `${formattedNumber}${metadata.ext()}${extension}`\r\n}\r\n\r\n// Formats a phone number\r\n//\r\n// Example use cases:\r\n//\r\n// ```js\r\n// formatNumber('8005553535', 'RU', 'INTERNATIONAL')\r\n// formatNumber('8005553535', 'RU', 'INTERNATIONAL', metadata)\r\n// formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL')\r\n// formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', metadata)\r\n// formatNumber('+78005553535', 'NATIONAL')\r\n// formatNumber('+78005553535', 'NATIONAL', metadata)\r\n// ```\r\n//\r\nexport default function formatNumber(input, format, options, metadata) {\r\n\t// Apply default options.\r\n\tif (options) {\r\n\t\toptions = { ...DEFAULT_OPTIONS, ...options }\r\n\t} else {\r\n\t\toptions = DEFAULT_OPTIONS\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (input.country && input.country !== '001') {\r\n\t\t// Validate `input.country`.\r\n\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t}\r\n\t\tmetadata.country(input.country)\r\n\t}\r\n\telse if (input.countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t}\r\n\telse return input.phone || ''\r\n\r\n\tconst countryCallingCode = metadata.countryCallingCode()\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// This variable should have been declared inside `case`s\r\n\t// but Babel has a bug and it says \"duplicate variable declaration\".\r\n\tlet number\r\n\r\n\tswitch (format) {\r\n\t\tcase 'NATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options)\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'INTERNATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn `+${countryCallingCode}`\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options)\r\n\t\t\tnumber = `+${countryCallingCode} ${number}`\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'E.164':\r\n\t\t\t// `E.164` doesn't define \"phone number extensions\".\r\n\t\t\treturn `+${countryCallingCode}${nationalNumber}`\r\n\r\n\t\tcase 'RFC3966':\r\n\t\t\treturn formatRFC3966({\r\n\t\t\t\tnumber: `+${countryCallingCode}${nationalNumber}`,\r\n\t\t\t\text: input.ext\r\n\t\t\t})\r\n\r\n\t\t// For reference, here's Google's IDD formatter:\r\n\t\t// https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\r\n\t\t// Not saying that this IDD formatter replicates it 1:1, but it seems to work.\r\n\t\t// Who would even need to format phone numbers in IDD format anyway?\r\n\t\tcase 'IDD':\r\n\t\t\tif (!options.fromCountry) {\r\n\t\t\t\treturn\r\n\t\t\t\t// throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\r\n\t\t\t}\r\n\t\t\tconst formattedNumber = formatIDD(\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tinput.carrierCode,\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\toptions.fromCountry,\r\n\t\t\t\tmetadata\r\n\t\t\t)\r\n\t\t\treturn addExtension(formattedNumber, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unknown \"format\" argument passed to \"formatNumber()\": \"${format}\"`)\r\n\t}\r\n}\r\n\r\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\r\n\tconst format = chooseFormatForNumber(metadata.formats(), number)\r\n\tif (!format) {\r\n\t\treturn number\r\n\t}\r\n\treturn formatNationalNumberUsingFormat(\r\n\t\tnumber,\r\n\t\tformat,\r\n\t\t{\r\n\t\t\tuseInternationalFormat: formatAs === 'INTERNATIONAL',\r\n\t\t\twithNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && (options && options.nationalPrefix === false) ? false : true,\r\n\t\t\tcarrierCode,\r\n\t\t\tmetadata\r\n\t\t}\r\n\t)\r\n}\r\n\r\nfunction chooseFormatForNumber(availableFormats, nationalNnumber) {\r\n\tfor (const format of availableFormats) {\r\n\t\t// Validate leading digits.\r\n\t\t// The test case for \"else path\" could be found by searching for\r\n\t\t// \"format.leadingDigitsPatterns().length === 0\".\r\n\t\tif (format.leadingDigitsPatterns().length > 0) {\r\n\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\r\n\t\t\tconst lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]\r\n\t\t\t// If leading digits don't match then move on to the next phone number format\r\n\t\t\tif (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Check that the national number matches the phone number format regular expression\r\n\t\tif (matchesEntirely(nationalNnumber, format.pattern())) {\r\n\t\t\treturn format\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\r\n\treturn ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber\r\n}\r\n\r\nfunction formatIDD(\r\n\tnationalNumber,\r\n\tcarrierCode,\r\n\tcountryCallingCode,\r\n\tfromCountry,\r\n\tmetadata\r\n) {\r\n\tconst fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata)\r\n\t// When calling within the same country calling code.\r\n\tif (fromCountryCallingCode === countryCallingCode) {\r\n\t\tconst formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata)\r\n\t\t// For NANPA regions, return the national format for these regions\r\n\t\t// but prefix it with the country calling code.\r\n\t\tif (countryCallingCode === '1') {\r\n\t\t\treturn countryCallingCode + ' ' + formattedNumber\r\n\t\t}\r\n\t\t// If regions share a country calling code, the country calling code need\r\n\t\t// not be dialled. This also applies when dialling within a region, so this\r\n\t\t// if clause covers both these cases. Technically this is the case for\r\n\t\t// dialling from La Reunion to other overseas departments of France (French\r\n\t\t// Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\r\n\t\t// this edge case for now and for those cases return the version including\r\n\t\t// country calling code. Details here:\r\n\t\t// http://www.petitfute.com/voyage/225-info-pratiques-reunion\r\n\t\t//\r\n\t\treturn formattedNumber\r\n\t}\r\n\tconst iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata)\r\n\tif (iddPrefix) {\r\n\t\treturn `${iddPrefix} ${countryCallingCode} ${formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata)}`\r\n\t}\r\n}","import Metadata from './metadata.js'\r\nimport isPossibleNumber from './isPossibleNumber_.js'\r\nimport isValidNumber from './validate_.js'\r\nimport isValidNumberForRegion from './isValidNumberForRegion_.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\nimport formatNumber from './format_.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default class PhoneNumber {\r\n\tconstructor(countryCallingCode, nationalNumber, metadata) {\r\n\t\tif (!countryCallingCode) {\r\n\t\t\tthrow new TypeError('`country` or `countryCallingCode` not passed')\r\n\t\t}\r\n\t\tif (!nationalNumber) {\r\n\t\t\tthrow new TypeError('`nationalNumber` not passed')\r\n\t\t}\r\n\t\tif (!metadata) {\r\n\t\t\tthrow new TypeError('`metadata` not passed')\r\n\t\t}\r\n\t\tconst _metadata = new Metadata(metadata)\r\n\t\t// If country code is passed then derive `countryCallingCode` from it.\r\n\t\t// Also store the country code as `.country`.\r\n\t\tif (isCountryCode(countryCallingCode)) {\r\n\t\t\tthis.country = countryCallingCode\r\n\t\t\t_metadata.country(countryCallingCode)\r\n\t\t\tcountryCallingCode = _metadata.countryCallingCode()\r\n\t\t} else {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (_metadata.isNonGeographicCallingCode(countryCallingCode)) {\r\n\t\t\t\t\tthis.country = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.countryCallingCode = countryCallingCode\r\n\t\tthis.nationalNumber = nationalNumber\r\n\t\tthis.number = '+' + this.countryCallingCode + this.nationalNumber\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tsetExt(ext) {\r\n\t\tthis.ext = ext\r\n\t}\r\n\r\n\tisPossible() {\r\n\t\treturn isPossibleNumber(this, { v2: true }, this.metadata)\r\n\t}\r\n\r\n\tisValid() {\r\n\t\treturn isValidNumber(this, { v2: true }, this.metadata)\r\n\t}\r\n\r\n\tisNonGeographic() {\r\n\t\tconst metadata = new Metadata(this.metadata)\r\n\t\treturn metadata.isNonGeographicCallingCode(this.countryCallingCode)\r\n\t}\r\n\r\n\tisEqual(phoneNumber) {\r\n\t\treturn this.number === phoneNumber.number && this.ext === phoneNumber.ext\r\n\t}\r\n\r\n\t// // Is just an alias for `this.isValid() && this.country === country`.\r\n\t// // https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n\t// isValidForRegion(country) {\r\n\t// \treturn isValidNumberForRegion(this, country, { v2: true }, this.metadata)\r\n\t// }\r\n\r\n\tgetType() {\r\n\t\treturn getNumberType(this, { v2: true }, this.metadata)\r\n\t}\r\n\r\n\tformat(format, options) {\r\n\t\treturn formatNumber(\r\n\t\t\tthis,\r\n\t\t\tformat,\r\n\t\t\toptions ? { ...options, v2: true } : { v2: true },\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t}\r\n\r\n\tformatNational(options) {\r\n\t\treturn this.format('NATIONAL', options)\r\n\t}\r\n\r\n\tformatInternational(options) {\r\n\t\treturn this.format('INTERNATIONAL', options)\r\n\t}\r\n\r\n\tgetURI(options) {\r\n\t\treturn this.format('RFC3966', options)\r\n\t}\r\n}\r\n\r\nconst isCountryCode = (value) => /^[A-Z]{2}$/.test(value)","import Metadata from './metadata.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\n\r\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isValidNumber(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// This is just to support `isValidNumber({})`\r\n\t// for cases when `parseNumber()` returns `{}`.\r\n\tif (!input.country)\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\t// By default, countries only have type regexps when it's required for\r\n\t// distinguishing different countries having the same `countryCallingCode`.\r\n\tif (metadata.hasTypes())\r\n\t{\r\n\t\treturn getNumberType(input, options, metadata.metadata) !== undefined\r\n\t}\r\n\r\n\t// If there are no type regexps for this country in metadata then use\r\n\t// `nationalNumberPattern` as a \"better than nothing\" replacement.\r\n\tconst national_number = options.v2 ? input.nationalNumber : input.phone\r\n\treturn matchesEntirely(national_number, metadata.nationalNumberPattern())\r\n}","export default class AsYouTypeState {\r\n\tconstructor({ onCountryChange, onCallingCodeChange }) {\r\n\t\tthis.onCountryChange = onCountryChange\r\n\t\tthis.onCallingCodeChange = onCallingCodeChange\r\n\t}\r\n\r\n\treset(defaultCountry, defaultCallingCode) {\r\n\t\tthis.international = false\r\n\t\tthis.IDDPrefix = undefined\r\n\t\tthis.missingPlus = undefined\r\n\t\tthis.callingCode = undefined\r\n\t\tthis.digits = ''\r\n\t\tthis.resetNationalSignificantNumber()\r\n\t\tthis.initCountryAndCallingCode(defaultCountry, defaultCallingCode)\r\n\t}\r\n\r\n\tresetNationalSignificantNumber() {\r\n\t\tthis.nationalSignificantNumber = this.getNationalDigits()\r\n\t\tthis.nationalSignificantNumberMatchesInput = true\r\n\t\tthis.nationalPrefix = undefined\r\n\t\tthis.carrierCode = undefined\r\n\t\tthis.complexPrefixBeforeNationalSignificantNumber = undefined\r\n\t}\r\n\r\n\tupdate(properties) {\r\n\t\tfor (const key of Object.keys(properties)) {\r\n\t\t\tthis[key] = properties[key]\r\n\t\t}\r\n\t}\r\n\r\n\tinitCountryAndCallingCode(country, callingCode) {\r\n\t\tthis.setCountry(country)\r\n\t\tthis.setCallingCode(callingCode)\r\n\t}\r\n\r\n\tsetCountry(country) {\r\n\t\tthis.country = country\r\n\t\tthis.onCountryChange(country)\r\n\t}\r\n\r\n\tsetCallingCode(callingCode) {\r\n\t\tthis.callingCode = callingCode\r\n\t\tthis.onCallingCodeChange(callingCode, this.country)\r\n\t}\r\n\r\n\tstartInternationalNumber(country, callingCode) {\r\n\t\t// Prepend the `+` to parsed input.\r\n\t\tthis.international = true\r\n\t\t// If a default country was set then reset it\r\n\t\t// because an explicitly international phone\r\n\t\t// number is being entered.\r\n\t\tthis.initCountryAndCallingCode(country, callingCode)\r\n\t}\r\n\r\n\tappendDigits(nextDigits) {\r\n\t\tthis.digits += nextDigits\r\n\t}\r\n\r\n\tappendNationalSignificantNumberDigits(nextDigits) {\r\n\t\tthis.nationalSignificantNumber += nextDigits\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the part of `this.digits` that corresponds to the national number.\r\n\t * Basically, all digits that have been input by the user, except for the\r\n\t * international prefix and the country calling code part\r\n\t * (if the number is an international one).\r\n\t * @return {string}\r\n\t */\r\n\tgetNationalDigits() {\r\n\t\tif (this.international) {\r\n\t\t\treturn this.digits.slice(\r\n\t\t\t\t(this.IDDPrefix ? this.IDDPrefix.length : 0) +\r\n\t\t\t\t(this.callingCode ? this.callingCode.length : 0)\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.digits\r\n\t}\r\n\r\n\tgetDigitsWithoutInternationalPrefix() {\r\n\t\tif (this.international) {\r\n\t\t\tif (this.IDDPrefix) {\r\n\t\t\t\treturn this.digits.slice(this.IDDPrefix.length)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.digits\r\n\t}\r\n}","// Should be the same as `DIGIT_PLACEHOLDER` in `libphonenumber-metadata-generator`.\r\nexport const DIGIT_PLACEHOLDER = 'x' // '\\u2008' (punctuation space)\r\nconst DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER)\r\n\r\n// Counts all occurences of a symbol in a string.\r\n// Unicode-unsafe (because using `.split()`).\r\nexport function countOccurences(symbol, string) {\r\n\tlet count = 0\r\n\t// Using `.split('')` to iterate through a string here\r\n\t// to avoid requiring `Symbol.iterator` polyfill.\r\n\t// `.split('')` is generally not safe for Unicode,\r\n\t// but in this particular case for counting brackets it is safe.\r\n\t// for (const character of string)\r\n\tfor (const character of string.split('')) {\r\n\t\tif (character === symbol) {\r\n\t\t\tcount++\r\n\t\t}\r\n\t}\r\n\treturn count\r\n}\r\n\r\n// Repeats a string (or a symbol) N times.\r\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\r\nexport function repeat(string, times) {\r\n\tif (times < 1) {\r\n\t\treturn ''\r\n\t}\r\n\tlet result = ''\r\n\twhile (times > 1) {\r\n\t\tif (times & 1) {\r\n\t\t\tresult += string\r\n\t\t}\r\n\t\ttimes >>= 1\r\n\t\tstring += string\r\n\t}\r\n\treturn result + string\r\n}\r\n\r\nexport function cutAndStripNonPairedParens(string, cutBeforeIndex) {\r\n\tif (string[cutBeforeIndex] === ')') {\r\n\t\tcutBeforeIndex++\r\n\t}\r\n\treturn stripNonPairedParens(string.slice(0, cutBeforeIndex))\r\n}\r\n\r\nexport function closeNonPairedParens(template, cut_before) {\r\n\tconst retained_template = template.slice(0, cut_before)\r\n\tconst opening_braces = countOccurences('(', retained_template)\r\n\tconst closing_braces = countOccurences(')', retained_template)\r\n\tlet dangling_braces = opening_braces - closing_braces\r\n\twhile (dangling_braces > 0 && cut_before < template.length) {\r\n\t\tif (template[cut_before] === ')') {\r\n\t\t\tdangling_braces--\r\n\t\t}\r\n\t\tcut_before++\r\n\t}\r\n\treturn template.slice(0, cut_before)\r\n}\r\n\r\nexport function stripNonPairedParens(string) {\r\n\tconst dangling_braces =[]\r\n\tlet i = 0\r\n\twhile (i < string.length) {\r\n\t\tif (string[i] === '(') {\r\n\t\t\tdangling_braces.push(i)\r\n\t\t}\r\n\t\telse if (string[i] === ')') {\r\n\t\t\tdangling_braces.pop()\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\tlet start = 0\r\n\tlet cleared_string = ''\r\n\tdangling_braces.push(string.length)\r\n\tfor (const index of dangling_braces) {\r\n\t\tcleared_string += string.slice(start, index)\r\n\t\tstart = index + 1\r\n\t}\r\n\treturn cleared_string\r\n}\r\n\r\nexport function populateTemplateWithDigits(template, position, digits) {\r\n\t// Using `.split('')` to iterate through a string here\r\n\t// to avoid requiring `Symbol.iterator` polyfill.\r\n\t// `.split('')` is generally not safe for Unicode,\r\n\t// but in this particular case for `digits` it is safe.\r\n\t// for (const digit of digits)\r\n\tfor (const digit of digits.split('')) {\r\n\t\t// If there is room for more digits in current `template`,\r\n\t\t// then set the next digit in the `template`,\r\n\t\t// and return the formatted digits so far.\r\n\t\t// If more digits are entered than the current format could handle.\r\n\t\tif (template.slice(position + 1).search(DIGIT_PLACEHOLDER_MATCHER) < 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tposition = template.search(DIGIT_PLACEHOLDER_MATCHER)\r\n\t\ttemplate = template.replace(DIGIT_PLACEHOLDER_MATCHER, digit)\r\n\t}\r\n\treturn [template, position]\r\n}","// These mappings map a character (key) to a specific digit that should\r\n// replace it for normalization purposes. Non-European digits that\r\n// may be used in phone numbers are mapped to a European equivalent.\r\n//\r\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n//\r\nexport const DIGITS = {\r\n\t'0': '0',\r\n\t'1': '1',\r\n\t'2': '2',\r\n\t'3': '3',\r\n\t'4': '4',\r\n\t'5': '5',\r\n\t'6': '6',\r\n\t'7': '7',\r\n\t'8': '8',\r\n\t'9': '9',\r\n\t'\\uFF10': '0', // Fullwidth digit 0\r\n\t'\\uFF11': '1', // Fullwidth digit 1\r\n\t'\\uFF12': '2', // Fullwidth digit 2\r\n\t'\\uFF13': '3', // Fullwidth digit 3\r\n\t'\\uFF14': '4', // Fullwidth digit 4\r\n\t'\\uFF15': '5', // Fullwidth digit 5\r\n\t'\\uFF16': '6', // Fullwidth digit 6\r\n\t'\\uFF17': '7', // Fullwidth digit 7\r\n\t'\\uFF18': '8', // Fullwidth digit 8\r\n\t'\\uFF19': '9', // Fullwidth digit 9\r\n\t'\\u0660': '0', // Arabic-indic digit 0\r\n\t'\\u0661': '1', // Arabic-indic digit 1\r\n\t'\\u0662': '2', // Arabic-indic digit 2\r\n\t'\\u0663': '3', // Arabic-indic digit 3\r\n\t'\\u0664': '4', // Arabic-indic digit 4\r\n\t'\\u0665': '5', // Arabic-indic digit 5\r\n\t'\\u0666': '6', // Arabic-indic digit 6\r\n\t'\\u0667': '7', // Arabic-indic digit 7\r\n\t'\\u0668': '8', // Arabic-indic digit 8\r\n\t'\\u0669': '9', // Arabic-indic digit 9\r\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\r\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\r\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\r\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\r\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\r\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\r\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\r\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\r\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\r\n\t'\\u06F9': '9'  // Eastern-Arabic digit 9\r\n}\r\n\r\nexport function parseDigit(character) {\r\n\treturn DIGITS[character]\r\n}\r\n\r\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\r\nexport default function parseDigits(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tconst digit = parseDigit(character)\r\n\t\tif (digit) {\r\n\t\t\tresult += digit\r\n\t\t}\r\n\t}\r\n\treturn result\r\n}","import checkNumberLength from './helpers/checkNumberLength.js'\r\nimport parseDigits from './helpers/parseDigits.js'\r\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js'\r\n\r\nexport default function formatCompleteNumber(state, format, {\r\n\tmetadata,\r\n\tshouldTryNationalPrefixFormattingRule,\r\n\tgetSeparatorAfterNationalPrefix\r\n}) {\r\n\tconst matcher = new RegExp(`^(?:${format.pattern()})$`)\r\n\tif (matcher.test(state.nationalSignificantNumber)) {\r\n\t\treturn formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(\r\n\t\t\tstate,\r\n\t\t\tformat,\r\n\t\t\t{\r\n\t\t\t\tmetadata,\r\n\t\t\t\tshouldTryNationalPrefixFormattingRule,\r\n\t\t\t\tgetSeparatorAfterNationalPrefix\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport function canFormatCompleteNumber(nationalSignificantNumber, metadata) {\r\n\treturn checkNumberLength(nationalSignificantNumber, metadata) === 'IS_POSSIBLE'\r\n}\r\n\r\nfunction formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(state, format, {\r\n\tmetadata,\r\n\tshouldTryNationalPrefixFormattingRule,\r\n\tgetSeparatorAfterNationalPrefix\r\n}) {\r\n\t// `format` has already been checked for `nationalPrefix` requirement.\r\n\r\n\tconst {\r\n\t\tnationalSignificantNumber,\r\n\t\tinternational,\r\n\t\tnationalPrefix,\r\n\t\tcarrierCode\r\n\t} = state\r\n\r\n\t// Format the number with using `national_prefix_formatting_rule`.\r\n\t// If the resulting formatted number is a valid formatted number, then return it.\r\n\t//\r\n\t// Google's AsYouType formatter is different in a way that it doesn't try\r\n\t// to format using the \"national prefix formatting rule\", and instead it\r\n\t// simply prepends a national prefix followed by a \" \" character.\r\n\t// This code does that too, but as a fallback.\r\n\t// The reason is that \"national prefix formatting rule\" may use parentheses,\r\n\t// which wouldn't be included has it used the simpler Google's way.\r\n\t//\r\n\tif (shouldTryNationalPrefixFormattingRule(format)) {\r\n\t\tconst formattedNumber = formatNationalNumber(state, format, {\r\n\t\t\tuseNationalPrefixFormattingRule: true,\r\n\t\t\tgetSeparatorAfterNationalPrefix,\r\n\t\t\tmetadata\r\n\t\t})\r\n\t\tif (formattedNumber) {\r\n\t\t\treturn formattedNumber\r\n\t\t}\r\n\t}\r\n\r\n\t// Format the number without using `national_prefix_formatting_rule`.\r\n\treturn formatNationalNumber(state, format, {\r\n\t\tuseNationalPrefixFormattingRule: false,\r\n\t\tgetSeparatorAfterNationalPrefix,\r\n\t\tmetadata\r\n\t})\r\n}\r\n\r\nfunction formatNationalNumber(state, format, {\r\n\tmetadata,\r\n\tuseNationalPrefixFormattingRule,\r\n\tgetSeparatorAfterNationalPrefix\r\n}) {\r\n\tlet formattedNationalNumber = formatNationalNumberUsingFormat(\r\n\t\tstate.nationalSignificantNumber,\r\n\t\tformat,\r\n\t\t{\r\n\t\t\tcarrierCode: state.carrierCode,\r\n\t\t\tuseInternationalFormat: state.international,\r\n\t\t\twithNationalPrefix: useNationalPrefixFormattingRule,\r\n\t\t\tmetadata\r\n\t\t}\r\n\t)\r\n\tif (!useNationalPrefixFormattingRule) {\r\n\t\tif (state.nationalPrefix) {\r\n\t\t\t// If a national prefix was extracted, then just prepend it,\r\n\t\t\t// followed by a \" \" character.\r\n\t\t\tformattedNationalNumber = state.nationalPrefix +\r\n\t\t\t\tgetSeparatorAfterNationalPrefix(format) +\r\n\t\t\t\tformattedNationalNumber\r\n\t\t} else if (state.complexPrefixBeforeNationalSignificantNumber) {\r\n\t\t\tformattedNationalNumber = state.complexPrefixBeforeNationalSignificantNumber +\r\n\t\t\t\t' ' +\r\n\t\t\t\tformattedNationalNumber\r\n\t\t}\r\n\t}\r\n\tif (isValidFormattedNationalNumber(formattedNationalNumber, state)) {\r\n\t\treturn formattedNationalNumber\r\n\t}\r\n}\r\n\r\n// Check that the formatted phone number contains exactly\r\n// the same digits that have been input by the user.\r\n// For example, when \"0111523456789\" is input for `AR` country,\r\n// the extracted `this.nationalSignificantNumber` is \"91123456789\",\r\n// which means that the national part of `this.digits` isn't simply equal to\r\n// `this.nationalPrefix` + `this.nationalSignificantNumber`.\r\n//\r\n// Also, a `format` can add extra digits to the `this.nationalSignificantNumber`\r\n// being formatted via `metadata[country].national_prefix_transform_rule`.\r\n// For example, for `VI` country, it prepends `340` to the national number,\r\n// and if this check hasn't been implemented, then there would be a bug\r\n// when `340` \"area coude\" is \"duplicated\" during input for `VI` country:\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/318\r\n//\r\n// So, all these \"gotchas\" are filtered out.\r\n//\r\n// In the original Google's code, the comments say:\r\n// \"Check that we didn't remove nor add any extra digits when we matched\r\n// this formatting pattern. This usually happens after we entered the last\r\n// digit during AYTF. Eg: In case of MX, we swallow mobile token (1) when\r\n// formatted but AYTF should retain all the number entered and not change\r\n// in order to match a format (of same leading digits and length) display\r\n// in that way.\"\r\n// \"If it's the same (i.e entered number and format is same), then it's\r\n// safe to return this in formatted number as nothing is lost / added.\"\r\n// Otherwise, don't use this format.\r\n// https://github.com/google/libphonenumber/commit/3e7c1f04f5e7200f87fb131e6f85c6e99d60f510#diff-9149457fa9f5d608a11bb975c6ef4bc5\r\n// https://github.com/google/libphonenumber/commit/3ac88c7106e7dcb553bcc794b15f19185928a1c6#diff-2dcb77e833422ee304da348b905cde0b\r\n//\r\nfunction isValidFormattedNationalNumber(formattedNationalNumber, state) {\r\n\treturn parseDigits(formattedNationalNumber) === state.getNationalDigits()\r\n}","export default class PatternParser {\r\n\tparse(pattern) {\r\n\t\tthis.context = [{\r\n\t\t\tor: true,\r\n\t\t\tinstructions: []\r\n\t\t}]\r\n\r\n\t\tthis.parsePattern(pattern)\r\n\r\n\t\tif (this.context.length !== 1) {\r\n\t\t\tthrow new Error('Non-finalized contexts left when pattern parse ended')\r\n\t\t}\r\n\r\n\t\tconst { branches, instructions } = this.context[0]\r\n\r\n\t\tif (branches) {\r\n\t\t\treturn {\r\n\t\t\t\top: '|',\r\n\t\t\t\targs: branches.concat([\r\n\t\t\t\t\texpandSingleElementArray(instructions)\r\n\t\t\t\t])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* istanbul ignore if */\r\n\t\tif (instructions.length === 0) {\r\n\t\t\tthrow new Error('Pattern is required')\r\n\t\t}\r\n\r\n\t\tif (instructions.length === 1) {\r\n\t\t\treturn instructions[0]\r\n\t\t}\r\n\r\n\t\treturn instructions\r\n\t}\r\n\r\n\tstartContext(context) {\r\n\t\tthis.context.push(context)\r\n\t}\r\n\r\n\tendContext() {\r\n\t\tthis.context.pop()\r\n\t}\r\n\r\n\tgetContext() {\r\n\t\treturn this.context[this.context.length - 1]\r\n\t}\r\n\r\n\tparsePattern(pattern) {\r\n\t\tif (!pattern) {\r\n\t\t\tthrow new Error('Pattern is required')\r\n\t\t}\r\n\r\n\t\tconst match = pattern.match(OPERATOR)\r\n\t\tif (!match) {\r\n\t\t\tif (ILLEGAL_CHARACTER_REGEXP.test(pattern)) {\r\n\t\t\t\tthrow new Error(`Illegal characters found in a pattern: ${pattern}`)\r\n\t\t\t}\r\n\t\t\tthis.getContext().instructions = this.getContext().instructions.concat(\r\n\t\t\t\tpattern.split('')\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst operator = match[1]\r\n\t\tconst before = pattern.slice(0, match.index)\r\n\t\tconst rightPart = pattern.slice(match.index + operator.length)\r\n\r\n\t\tswitch (operator) {\r\n\t\t\tcase '(?:':\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\tthis.startContext({\r\n\t\t\t\t\tor: true,\r\n\t\t\t\t\tinstructions: [],\r\n\t\t\t\t\tbranches: []\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase ')':\r\n\t\t\t\tif (!this.getContext().or) {\r\n\t\t\t\t\tthrow new Error('\")\" operator must be preceded by \"(?:\" operator')\r\n\t\t\t\t}\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.getContext().instructions.length === 0) {\r\n\t\t\t\t\tthrow new Error('No instructions found after \"|\" operator in an \"or\" group')\r\n\t\t\t\t}\r\n\t\t\t\tconst { branches } = this.getContext()\r\n\t\t\t\tbranches.push(\r\n\t\t\t\t\texpandSingleElementArray(\r\n\t\t\t\t\t\tthis.getContext().instructions\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t\tthis.endContext()\r\n\t\t\t\tthis.getContext().instructions.push({\r\n\t\t\t\t\top: '|',\r\n\t\t\t\t\targs: branches\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase '|':\r\n\t\t\t\tif (!this.getContext().or) {\r\n\t\t\t\t\tthrow new Error('\"|\" operator can only be used inside \"or\" groups')\r\n\t\t\t\t}\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\t// The top-level is an implicit \"or\" group, if required.\r\n\t\t\t\tif (!this.getContext().branches) {\r\n\t\t\t\t\t// `branches` are not defined only for the root implicit \"or\" operator.\r\n\t\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\t\tif (this.context.length === 1) {\r\n\t\t\t\t\t\tthis.getContext().branches = []\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('\"branches\" not found in an \"or\" group context')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.getContext().branches.push(\r\n\t\t\t\t\texpandSingleElementArray(\r\n\t\t\t\t\t\tthis.getContext().instructions\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t\tthis.getContext().instructions = []\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase '[':\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\tthis.startContext({\r\n\t\t\t\t\toneOfSet: true\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase ']':\r\n\t\t\t\tif (!this.getContext().oneOfSet) {\r\n\t\t\t\t\tthrow new Error('\"]\" operator must be preceded by \"[\" operator')\r\n\t\t\t\t}\r\n\t\t\t\tthis.endContext()\r\n\t\t\t\tthis.getContext().instructions.push({\r\n\t\t\t\t\top: '[]',\r\n\t\t\t\t\targs: parseOneOfSet(before)\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unknown operator: ${operator}`)\r\n\t\t}\r\n\r\n\t\tif (rightPart) {\r\n\t\t\tthis.parsePattern(rightPart)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction parseOneOfSet(pattern) {\r\n\tconst values = []\r\n\tlet i = 0\r\n\twhile (i < pattern.length) {\r\n\t\tif (pattern[i] === '-') {\r\n\t\t\tif (i === 0 || i === pattern.length - 1) {\r\n\t\t\t\tthrow new Error(`Couldn't parse a one-of set pattern: ${pattern}`)\r\n\t\t\t}\r\n\t\t\tconst prevValue = pattern[i - 1].charCodeAt(0) + 1\r\n\t\t\tconst nextValue = pattern[i + 1].charCodeAt(0) - 1\r\n\t\t\tlet value = prevValue\r\n\t\t\twhile (value <= nextValue) {\r\n\t\t\t\tvalues.push(String.fromCharCode(value))\r\n\t\t\t\tvalue++\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalues.push(pattern[i])\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\treturn values\r\n}\r\n\r\nconst ILLEGAL_CHARACTER_REGEXP = /[\\(\\)\\[\\]\\?\\:\\|]/\r\n\r\nconst OPERATOR = new RegExp(\r\n\t// any of:\r\n\t'(' +\r\n\t\t// or operator\r\n\t\t'\\\\|' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// or group start\r\n\t\t'\\\\(\\\\?\\\\:' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// or group end\r\n\t\t'\\\\)' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// one-of set start\r\n\t\t'\\\\[' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// one-of set end\r\n\t\t'\\\\]' +\r\n\t')'\r\n)\r\n\r\nfunction expandSingleElementArray(array) {\r\n\tif (array.length === 1) {\r\n\t\treturn array[0]\r\n\t}\r\n\treturn array\r\n}","import PatternParser from './AsYouTypeFormatter.PatternParser.js'\r\n\r\nexport default class PatternMatcher {\r\n\tconstructor(pattern) {\r\n\t\tthis.matchTree = new PatternParser().parse(pattern)\r\n\t}\r\n\r\n\tmatch(string, { allowOverflow } = {}) {\r\n\t\tif (!string) {\r\n\t\t\tthrow new Error('String is required')\r\n\t\t}\r\n\t\tconst result = match(string.split(''), this.matchTree, true)\r\n\t\tif (result && result.match) {\r\n\t\t\tdelete result.matchedChars\r\n\t\t}\r\n\t\tif (result && result.overflow) {\r\n\t\t\tif (!allowOverflow) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\n/**\r\n * Matches `characters` against a pattern compiled into a `tree`.\r\n * @param  {string[]} characters\r\n * @param  {Tree} tree — A pattern compiled into a `tree`. See the `*.d.ts` file for the description of the `tree` structure.\r\n * @param  {boolean} last — Whether it's the last (rightmost) subtree on its level of the match tree.\r\n * @return {object} See the `*.d.ts` file for the description of the result object.\r\n */\r\nfunction match(characters, tree, last) {\r\n\t// If `tree` is a string, then `tree` is a single character.\r\n\t// That's because when a pattern is parsed, multi-character-string parts\r\n\t// of a pattern are compiled into arrays of single characters.\r\n\t// I still wrote this piece of code for a \"general\" hypothetical case\r\n\t// when `tree` could be a string of several characters, even though\r\n\t// such case is not possible with the current implementation.\r\n\tif (typeof tree === 'string') {\r\n\t\tconst characterString = characters.join('')\r\n\t\tif (tree.indexOf(characterString) === 0) {\r\n\t\t\t// `tree` is always a single character.\r\n\t\t\t// If `tree.indexOf(characterString) === 0`\r\n\t\t\t// then `characters.length === tree.length`.\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (characters.length === tree.length) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmatch: true,\r\n\t\t\t\t\tmatchedChars: characters\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// `tree` is always a single character.\r\n\t\t\t// If `tree.indexOf(characterString) === 0`\r\n\t\t\t// then `characters.length === tree.length`.\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\treturn {\r\n\t\t\t\tpartialMatch: true,\r\n\t\t\t\t// matchedChars: characters\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (characterString.indexOf(tree) === 0) {\r\n\t\t\tif (last) {\r\n\t\t\t\t// The `else` path is not possible because `tree` is always a single character.\r\n\t\t\t\t// The `else` case for `characters.length > tree.length` would be\r\n\t\t\t\t// `characters.length <= tree.length` which means `characters.length <= 1`.\r\n\t\t\t\t// `characters` array can't be empty, so that means `characters === [tree]`,\r\n\t\t\t\t// which would also mean `tree.indexOf(characterString) === 0` and that'd mean\r\n\t\t\t\t// that the `if (tree.indexOf(characterString) === 0)` condition before this\r\n\t\t\t\t// `if` condition would be entered, and returned from there, not reaching this code.\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (characters.length > tree.length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toverflow: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tmatch: true,\r\n\t\t\t\tmatchedChars: characters.slice(0, tree.length)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\tif (Array.isArray(tree)) {\r\n\t\tlet restCharacters = characters.slice()\r\n\t\tlet i = 0\r\n\t\twhile (i < tree.length) {\r\n\t\t\tconst subtree = tree[i]\r\n\t\t\tconst result = match(restCharacters, subtree, last && (i === tree.length - 1))\r\n\t\t\tif (!result) {\r\n\t\t\t\treturn\r\n\t\t\t} else if (result.overflow) {\r\n\t\t\t\treturn result\r\n\t\t\t} else if (result.match) {\r\n\t\t\t\t// Continue with the next subtree with the rest of the characters.\r\n\t\t\t\trestCharacters = restCharacters.slice(result.matchedChars.length)\r\n\t\t\t\tif (restCharacters.length === 0) {\r\n\t\t\t\t\tif (i === tree.length - 1) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\t\tmatchedChars: characters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tpartialMatch: true,\r\n\t\t\t\t\t\t\t// matchedChars: characters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (result.partialMatch) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tpartialMatch: true,\r\n\t\t\t\t\t\t// matchedChars: characters\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(`Unsupported match result:\\n${JSON.stringify(result, null, 2)}`)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t\t// If `last` then overflow has already been checked\r\n\t\t// by the last element of the `tree` array.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (last) {\r\n\t\t\treturn {\r\n\t\t\t\toverflow: true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tmatch: true,\r\n\t\t\tmatchedChars: characters.slice(0, characters.length - restCharacters.length)\r\n\t\t}\r\n\t}\r\n\r\n\tswitch (tree.op) {\r\n\t\tcase '|':\r\n\t\t\tlet partialMatch\r\n\t\t\tfor (const branch of tree.args) {\r\n\t\t\t\tconst result = match(characters, branch, last)\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tif (result.overflow) {\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t} else if (result.match) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\t\tmatchedChars: result.matchedChars\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\t\t\tif (result.partialMatch) {\r\n\t\t\t\t\t\t\tpartialMatch = true\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow new Error(`Unsupported match result:\\n${JSON.stringify(result, null, 2)}`)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (partialMatch) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpartialMatch: true,\r\n\t\t\t\t\t// matchedChars: ...\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Not even a partial match.\r\n\t\t\treturn\r\n\r\n\t\tcase '[]':\r\n\t\t\tfor (const char of tree.args) {\r\n\t\t\t\tif (characters[0] === char) {\r\n\t\t\t\t\tif (characters.length === 1) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\t\tmatchedChars: characters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (last) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\toverflow: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\tmatchedChars: [char]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// No character matches.\r\n\t\t\treturn\r\n\r\n\t\t/* istanbul ignore next */\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unsupported instruction tree: ${tree}`)\r\n\t}\r\n}","import {\r\n\tDIGIT_PLACEHOLDER,\r\n\tcountOccurences,\r\n\trepeat,\r\n\tcutAndStripNonPairedParens,\r\n\tcloseNonPairedParens,\r\n\tstripNonPairedParens,\r\n\tpopulateTemplateWithDigits\r\n} from './AsYouTypeFormatter.util.js'\r\n\r\nimport formatCompleteNumber, {\r\n\tcanFormatCompleteNumber\r\n} from './AsYouTypeFormatter.complete.js'\r\n\r\nimport PatternMatcher from './AsYouTypeFormatter.PatternMatcher.js'\r\n\r\nimport parseDigits from './helpers/parseDigits.js'\r\nexport { DIGIT_PLACEHOLDER } from './AsYouTypeFormatter.util.js'\r\nimport { FIRST_GROUP_PATTERN } from './helpers/formatNationalNumberUsingFormat.js'\r\nimport { VALID_PUNCTUATION } from './constants.js'\r\nimport applyInternationalSeparatorStyle from './helpers/applyInternationalSeparatorStyle.js'\r\n\r\n// Used in phone number format template creation.\r\n// Could be any digit, I guess.\r\nconst DUMMY_DIGIT = '9'\r\n// I don't know why is it exactly `15`\r\nconst LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15\r\n// Create a phone number consisting only of the digit 9 that matches the\r\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\r\nconst LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH)\r\n\r\n// A set of characters that, if found in a national prefix formatting rules, are an indicator to\r\n// us that we should separate the national prefix from the number when formatting.\r\nconst NATIONAL_PREFIX_SEPARATORS_PATTERN = /[- ]/\r\n\r\n// Deprecated: Google has removed some formatting pattern related code from their repo.\r\n// https://github.com/googlei18n/libphonenumber/commit/a395b4fef3caf57c4bc5f082e1152a4d2bd0ba4c\r\n// \"We no longer have numbers in formatting matching patterns, only \\d.\"\r\n// Because this library supports generating custom metadata\r\n// some users may still be using old metadata so the relevant\r\n// code seems to stay until some next major version update.\r\nconst SUPPORT_LEGACY_FORMATTING_PATTERNS = true\r\n\r\n// A pattern that is used to match character classes in regular expressions.\r\n// An example of a character class is \"[1-4]\".\r\nconst CREATE_CHARACTER_CLASS_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && (() => /\\[([^\\[\\]])*\\]/g)\r\n\r\n// Any digit in a regular expression that actually denotes a digit. For\r\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\r\n// (8 and 0) are standalone digits, but the rest are not.\r\n// Two look-aheads are needed because the number following \\\\d could be a\r\n// two-digit number, since the phone number can be as long as 15 digits.\r\nconst CREATE_STANDALONE_DIGIT_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && (() => /\\d(?=[^,}][^,}])/g)\r\n\r\n// A regular expression that is used to determine if a `format` is\r\n// suitable to be used in the \"as you type formatter\".\r\n// A `format` is suitable when the resulting formatted number has\r\n// the same digits as the user has entered.\r\n//\r\n// In the simplest case, that would mean that the format\r\n// doesn't add any additional digits when formatting a number.\r\n// Google says that it also shouldn't add \"star\" (`*`) characters,\r\n// like it does in some Israeli formats.\r\n// Such basic format would only contain \"valid punctuation\"\r\n// and \"captured group\" identifiers ($1, $2, etc).\r\n//\r\n// An example of a format that adds additional digits:\r\n//\r\n// Country: `AR` (Argentina).\r\n// Format:\r\n// {\r\n//    \"pattern\": \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\r\n//    \"leading_digits_patterns\": [\"91\"],\r\n//    \"national_prefix_formatting_rule\": \"0$1\",\r\n//    \"format\": \"$2 15-$3-$4\",\r\n//    \"international_format\": \"$1 $2 $3-$4\"\r\n// }\r\n//\r\n// In the format above, the `format` adds `15` to the digits when formatting a number.\r\n// A sidenote: this format actually is suitable because `national_prefix_for_parsing`\r\n// has previously removed `15` from a national number, so re-adding `15` in `format`\r\n// doesn't actually result in any extra digits added to user's input.\r\n// But verifying that would be a complex procedure, so the code chooses a simpler path:\r\n// it simply filters out all `format`s that contain anything but \"captured group\" ids.\r\n//\r\n// This regular expression is called `ELIGIBLE_FORMAT_PATTERN` in Google's\r\n// `libphonenumber` code.\r\n//\r\nconst NON_ALTERING_FORMAT_REG_EXP = new RegExp(\r\n\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t// Google developers say:\r\n\t// \"We require that the first matching group is present in the\r\n\t//  output pattern to ensure no data is lost while formatting.\"\r\n\t'\\\\$1' +\r\n\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t'(\\\\$\\\\d[' + VALID_PUNCTUATION + ']*)*' +\r\n\t'$'\r\n)\r\n\r\n// This is the minimum length of the leading digits of a phone number\r\n// to guarantee the first \"leading digits pattern\" for a phone number format\r\n// to be preemptive.\r\nconst MIN_LEADING_DIGITS_LENGTH = 3\r\n\r\nexport default class AsYouTypeFormatter {\r\n\tconstructor({\r\n\t\tstate,\r\n\t\tmetadata\r\n\t}) {\r\n\t\tthis.metadata = metadata\r\n\t\tthis.resetFormat()\r\n\t}\r\n\r\n\tresetFormat() {\r\n\t\tthis.chosenFormat = undefined\r\n\t\tthis.template = undefined\r\n\t\tthis.nationalNumberTemplate = undefined\r\n\t\tthis.populatedNationalNumberTemplate = undefined\r\n\t\tthis.populatedNationalNumberTemplatePosition = -1\r\n\t}\r\n\r\n\treset(numberingPlan, state) {\r\n\t\tthis.resetFormat()\r\n\t\tif (numberingPlan) {\r\n\t\t\tthis.isNANP = numberingPlan.callingCode() === '1'\r\n\t\t\tthis.matchingFormats = numberingPlan.formats()\r\n\t\t\tif (state.nationalSignificantNumber) {\r\n\t\t\t\tthis.narrowDownMatchingFormats(state)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.isNANP = undefined\r\n\t\t\tthis.matchingFormats = []\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats an updated phone number.\r\n\t * @param  {string} nextDigits — Additional phone number digits.\r\n\t * @param  {object} state — `AsYouType` state.\r\n\t * @return {[string]} Returns undefined if the updated phone number can't be formatted using any of the available formats.\r\n\t */\r\n\tformat(nextDigits, state) {\r\n\t\t// See if the phone number digits can be formatted as a complete phone number.\r\n\t\t// If not, use the results from `formatNationalNumberWithNextDigits()`,\r\n\t\t// which formats based on the chosen formatting pattern.\r\n\t\t//\r\n\t\t// Attempting to format complete phone number first is how it's done\r\n\t\t// in Google's `libphonenumber`, so this library just follows it.\r\n\t\t// Google's `libphonenumber` code doesn't explain in detail why does it\r\n\t\t// attempt to format digits as a complete phone number\r\n\t\t// instead of just going with a previoulsy (or newly) chosen `format`:\r\n\t\t//\r\n\t\t// \"Checks to see if there is an exact pattern match for these digits.\r\n\t\t//  If so, we should use this instead of any other formatting template\r\n\t\t//  whose leadingDigitsPattern also matches the input.\"\r\n\t\t//\r\n\t\tif (canFormatCompleteNumber(state.nationalSignificantNumber, this.metadata)) {\r\n\t\t\tfor (const format of this.matchingFormats) {\r\n\t\t\t\tconst formattedCompleteNumber = formatCompleteNumber(\r\n\t\t\t\t\tstate,\r\n\t\t\t\t\tformat,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmetadata: this.metadata,\r\n\t\t\t\t\t\tshouldTryNationalPrefixFormattingRule: (format) => this.shouldTryNationalPrefixFormattingRule(format, {\r\n\t\t\t\t\t\t\tinternational: state.international,\r\n\t\t\t\t\t\t\tnationalPrefix: state.nationalPrefix\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tgetSeparatorAfterNationalPrefix: (format) => this.getSeparatorAfterNationalPrefix(format)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\tif (formattedCompleteNumber) {\r\n\t\t\t\t\tthis.resetFormat()\r\n\t\t\t\t\tthis.chosenFormat = format\r\n\t\t\t\t\tthis.setNationalNumberTemplate(formattedCompleteNumber.replace(/\\d/g, DIGIT_PLACEHOLDER), state)\r\n\t\t\t\t\tthis.populatedNationalNumberTemplate = formattedCompleteNumber\r\n\t\t\t\t\t// With a new formatting template, the matched position\r\n\t\t\t\t\t// using the old template needs to be reset.\r\n\t\t\t\t\tthis.populatedNationalNumberTemplatePosition = this.template.lastIndexOf(DIGIT_PLACEHOLDER)\r\n\t\t\t\t\treturn formattedCompleteNumber\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Format the digits as a partial (incomplete) phone number\r\n\t\t// using the previously chosen formatting pattern (or a newly chosen one).\r\n\t\treturn this.formatNationalNumberWithNextDigits(nextDigits, state)\r\n\t}\r\n\r\n\t// Formats the next phone number digits.\r\n\tformatNationalNumberWithNextDigits(nextDigits, state) {\r\n\t\tconst previouslyChosenFormat = this.chosenFormat\r\n\r\n\t\t// Choose a format from the list of matching ones.\r\n\t\tconst newlyChosenFormat = this.chooseFormat(state)\r\n\r\n\t\tif (newlyChosenFormat) {\r\n\t\t\tif (newlyChosenFormat === previouslyChosenFormat) {\r\n\t\t\t\t// If it can format the next (current) digits\r\n\t\t\t\t// using the previously chosen phone number format\r\n\t\t\t\t// then return the updated formatted number.\r\n\t\t\t\treturn this.formatNextNationalNumberDigits(nextDigits)\r\n\t\t\t} else {\r\n\t\t\t\t// If a more appropriate phone number format\r\n\t\t\t\t// has been chosen for these \"leading digits\",\r\n\t\t\t\t// then re-format the national phone number part\r\n\t\t\t\t// using the newly selected format.\r\n\t\t\t\treturn this.formatNextNationalNumberDigits(state.getNationalDigits())\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tnarrowDownMatchingFormats({\r\n\t\tnationalSignificantNumber,\r\n\t\tnationalPrefix,\r\n\t\tinternational\r\n\t}) {\r\n\t\tconst leadingDigits = nationalSignificantNumber\r\n\r\n\t\t// \"leading digits\" pattern list starts with a\r\n\t\t// \"leading digits\" pattern fitting a maximum of 3 leading digits.\r\n\t\t// So, after a user inputs 3 digits of a national (significant) phone number\r\n\t\t// this national (significant) number can already be formatted.\r\n\t\t// The next \"leading digits\" pattern is for 4 leading digits max,\r\n\t\t// and the \"leading digits\" pattern after it is for 5 leading digits max, etc.\r\n\r\n\t\t// This implementation is different from Google's\r\n\t\t// in that it searches for a fitting format\r\n\t\t// even if the user has entered less than\r\n\t\t// `MIN_LEADING_DIGITS_LENGTH` digits of a national number.\r\n\t\t// Because some leading digit patterns already match for a single first digit.\r\n\t\tlet leadingDigitsPatternIndex = leadingDigits.length - MIN_LEADING_DIGITS_LENGTH\r\n\t\tif (leadingDigitsPatternIndex < 0) {\r\n\t\t\tleadingDigitsPatternIndex = 0\r\n\t\t}\r\n\r\n\t\tthis.matchingFormats = this.matchingFormats.filter(\r\n\t\t\tformat => this.formatSuits(format, international, nationalPrefix)\r\n\t\t\t\t&& this.formatMatches(format, leadingDigits, leadingDigitsPatternIndex)\r\n\t\t)\r\n\r\n\t\t// If there was a phone number format chosen\r\n\t\t// and it no longer holds given the new leading digits then reset it.\r\n\t\t// The test for this `if` condition is marked as:\r\n\t\t// \"Reset a chosen format when it no longer holds given the new leading digits\".\r\n\t\t// To construct a valid test case for this one can find a country\r\n\t\t// in `PhoneNumberMetadata.xml` yielding one format for 3 `<leadingDigits>`\r\n\t\t// and yielding another format for 4 `<leadingDigits>` (Australia in this case).\r\n\t\tif (this.chosenFormat && this.matchingFormats.indexOf(this.chosenFormat) === -1) {\r\n\t\t\tthis.resetFormat()\r\n\t\t}\r\n\t}\r\n\r\n\tformatSuits(format, international, nationalPrefix) {\r\n\t\t// When a prefix before a national (significant) number is\r\n\t\t// simply a national prefix, then it's parsed as `this.nationalPrefix`.\r\n\t\t// In more complex cases, a prefix before national (significant) number\r\n\t\t// could include a national prefix as well as some \"capturing groups\",\r\n\t\t// and in that case there's no info whether a national prefix has been parsed.\r\n\t\t// If national prefix is not used when formatting a phone number\r\n\t\t// using this format, but a national prefix has been entered by the user,\r\n\t\t// and was extracted, then discard such phone number format.\r\n\t\t// In Google's \"AsYouType\" formatter code, the equivalent would be this part:\r\n\t\t// https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L175-L184\r\n\t\tif (nationalPrefix &&\r\n\t\t\t!format.usesNationalPrefix() &&\r\n\t\t\t// !format.domesticCarrierCodeFormattingRule() &&\r\n\t\t\t!format.nationalPrefixIsOptionalWhenFormattingInNationalFormat()) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// If national prefix is mandatory for this phone number format\r\n\t\t// and there're no guarantees that a national prefix is present in user input\r\n\t\t// then discard this phone number format as not suitable.\r\n\t\t// In Google's \"AsYouType\" formatter code, the equivalent would be this part:\r\n\t\t// https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L185-L193\r\n\t\tif (!international &&\r\n\t\t\t!nationalPrefix &&\r\n\t\t\tformat.nationalPrefixIsMandatoryWhenFormattingInNationalFormat()) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn true\r\n\t}\r\n\r\n\tformatMatches(format, leadingDigits, leadingDigitsPatternIndex) {\r\n\t\tconst leadingDigitsPatternsCount = format.leadingDigitsPatterns().length\r\n\r\n\t\t// If this format is not restricted to a certain\r\n\t\t// leading digits pattern then it fits.\r\n\t\t// The test case could be found by searching for \"leadingDigitsPatternsCount === 0\".\r\n\t\tif (leadingDigitsPatternsCount === 0) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\t// Start narrowing down the list of possible formats based on the leading digits.\r\n\t\t// (only previously matched formats take part in the narrowing down process)\r\n\r\n\t\t// `leading_digits_patterns` start with 3 digits min\r\n\t\t// and then go up from there one digit at a time.\r\n\t\tleadingDigitsPatternIndex = Math.min(leadingDigitsPatternIndex, leadingDigitsPatternsCount - 1)\r\n\t\tconst leadingDigitsPattern = format.leadingDigitsPatterns()[leadingDigitsPatternIndex]\r\n\r\n\t\t// Google imposes a requirement on the leading digits\r\n\t\t// to be minimum 3 digits long in order to be eligible\r\n\t\t// for checking those with a leading digits pattern.\r\n\t\t//\r\n\t\t// Since `leading_digits_patterns` start with 3 digits min,\r\n\t\t// Google's original `libphonenumber` library only starts\r\n\t\t// excluding any non-matching formats only when the\r\n\t\t// national number entered so far is at least 3 digits long,\r\n\t\t// otherwise format matching would give false negatives.\r\n\t\t//\r\n\t\t// For example, when the digits entered so far are `2`\r\n\t\t// and the leading digits pattern is `21` –\r\n\t\t// it's quite obvious in this case that the format could be the one\r\n\t\t// but due to the absence of further digits it would give false negative.\r\n\t\t//\r\n\t\t// Also, `leading_digits_patterns` doesn't always correspond to a single\r\n\t\t// digits count. For example, `60|8` pattern would already match `8`\r\n\t\t// but the `60` part would require having at least two leading digits,\r\n\t\t// so the whole pattern would require inputting two digits first in order to\r\n\t\t// decide on whether it matches the input, even when the input is \"80\".\r\n\t\t//\r\n\t\t// This library — `libphonenumber-js` — allows filtering by `leading_digits_patterns`\r\n\t\t// even when there's only 1 or 2 digits of the national (significant) number.\r\n\t\t// To do that, it uses a non-strict pattern matcher written specifically for that.\r\n\t\t//\r\n\t\tif (leadingDigits.length < MIN_LEADING_DIGITS_LENGTH) {\r\n\t\t\t// Before leading digits < 3 matching was implemented:\r\n\t\t\t// return true\r\n\t\t\t//\r\n\t\t\t// After leading digits < 3 matching was implemented:\r\n\t\t\ttry {\r\n\t\t\t\treturn new PatternMatcher(leadingDigitsPattern).match(leadingDigits, { allowOverflow: true }) !== undefined\r\n\t\t\t} catch (error) /* istanbul ignore next */ {\r\n\t\t\t\t// There's a slight possibility that there could be some undiscovered bug\r\n\t\t\t\t// in the pattern matcher code. Since the \"leading digits < 3 matching\"\r\n\t\t\t\t// feature is not \"essential\" for operation, it can fall back to the old way\r\n\t\t\t\t// in case of any issues rather than halting the application's execution.\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If at least `MIN_LEADING_DIGITS_LENGTH` digits of a national number are\r\n\t\t// available then use the usual regular expression matching.\r\n\t\t//\r\n\t\t// The whole pattern is wrapped in round brackets (`()`) because\r\n\t\t// the pattern can use \"or\" operator (`|`) at the top level of the pattern.\r\n\t\t//\r\n\t\treturn new RegExp(`^(${leadingDigitsPattern})`).test(leadingDigits)\r\n\t}\r\n\r\n\tgetFormatFormat(format, international) {\r\n\t\treturn international ? format.internationalFormat() : format.format()\r\n\t}\r\n\r\n\tchooseFormat(state) {\r\n\t\t// When there are multiple available formats, the formatter uses the first\r\n\t\t// format where a formatting template could be created.\r\n\t\t//\r\n\t\t// For some weird reason, `istanbul` says \"else path not taken\"\r\n\t\t// for the `for of` line below. Supposedly that means that\r\n\t\t// the loop doesn't ever go over the last element in the list.\r\n\t\t// That's true because there always is `this.chosenFormat`\r\n\t\t// when `this.matchingFormats` is non-empty.\r\n\t\t// And, for some weird reason, it doesn't think that the case\r\n\t\t// with empty `this.matchingFormats` qualifies for a valid \"else\" path.\r\n\t\t// So simply muting this `istanbul` warning.\r\n\t\t// It doesn't skip the contents of the `for of` loop,\r\n\t\t// it just skips the `for of` line.\r\n\t\t//\r\n\t\t/* istanbul ignore next */\r\n\t\tfor (const format of this.matchingFormats.slice()) {\r\n\t\t\t// If this format is currently being used\r\n\t\t\t// and is still suitable, then stick to it.\r\n\t\t\tif (this.chosenFormat === format) {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t// Sometimes, a formatting rule inserts additional digits in a phone number,\r\n\t\t\t// and \"as you type\" formatter can't do that: it should only use the digits\r\n\t\t\t// that the user has input.\r\n\t\t\t//\r\n\t\t\t// For example, in Argentina, there's a format for mobile phone numbers:\r\n\t\t\t//\r\n\t\t\t// {\r\n\t\t\t//    \"pattern\": \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\r\n\t\t\t//    \"leading_digits_patterns\": [\"91\"],\r\n\t\t\t//    \"national_prefix_formatting_rule\": \"0$1\",\r\n\t\t\t//    \"format\": \"$2 15-$3-$4\",\r\n\t\t\t//    \"international_format\": \"$1 $2 $3-$4\"\r\n\t\t\t// }\r\n\t\t\t//\r\n\t\t\t// In that format, `international_format` is used instead of `format`\r\n\t\t\t// because `format` inserts `15` in the formatted number,\r\n\t\t\t// and `AsYouType` formatter should only use the digits\r\n\t\t\t// the user has actually input, without adding any extra digits.\r\n\t\t\t// In this case, it wouldn't make a difference, because the `15`\r\n\t\t\t// is first stripped when applying `national_prefix_for_parsing`\r\n\t\t\t// and then re-added when using `format`, so in reality it doesn't\r\n\t\t\t// add any new digits to the number, but to detect that, the code\r\n\t\t\t// would have to be more complex: it would have to try formatting\r\n\t\t\t// the digits using the format and then see if any digits have\r\n\t\t\t// actually been added or removed, and then, every time a new digit\r\n\t\t\t// is input, it should re-check whether the chosen format doesn't\r\n\t\t\t// alter the digits.\r\n\t\t\t//\r\n\t\t\t// Google's code doesn't go that far, and so does this library:\r\n\t\t\t// it simply requires that a `format` doesn't add any additonal\r\n\t\t\t// digits to user's input.\r\n\t\t\t//\r\n\t\t\t// Also, people in general should move from inputting phone numbers\r\n\t\t\t// in national format (possibly with national prefixes)\r\n\t\t\t// and use international phone number format instead:\r\n\t\t\t// it's a logical thing in the modern age of mobile phones,\r\n\t\t\t// globalization and the internet.\r\n\t\t\t//\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (!NON_ALTERING_FORMAT_REG_EXP.test(this.getFormatFormat(format, state.international))) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (!this.createTemplateForFormat(format, state)) {\r\n\t\t\t\t// Remove the format if it can't generate a template.\r\n\t\t\t\tthis.matchingFormats = this.matchingFormats.filter(_ => _ !== format)\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tthis.chosenFormat = format\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tif (!this.chosenFormat) {\r\n\t\t\t// No format matches the national (significant) phone number.\r\n\t\t\tthis.resetFormat()\r\n\t\t}\r\n\t\treturn this.chosenFormat\r\n\t}\r\n\r\n\tcreateTemplateForFormat(format, state) {\r\n\t\t// The formatter doesn't format numbers when numberPattern contains '|', e.g.\r\n\t\t// (20|3)\\d{4}. In those cases we quickly return.\r\n\t\t// (Though there's no such format in current metadata)\r\n\t\t/* istanbul ignore if */\r\n\t\tif (SUPPORT_LEGACY_FORMATTING_PATTERNS && format.pattern().indexOf('|') >= 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Get formatting template for this phone number format\r\n\t\tconst template = this.getTemplateForFormat(format, state)\r\n\t\t// If the national number entered is too long\r\n\t\t// for any phone number format, then abort.\r\n\t\tif (template) {\r\n\t\t\tthis.setNationalNumberTemplate(template, state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tgetSeparatorAfterNationalPrefix(format) {\r\n\t\t// `US` metadata doesn't have a `national_prefix_formatting_rule`,\r\n\t\t// so the `if` condition below doesn't apply to `US`,\r\n\t\t// but in reality there shoudl be a separator\r\n\t\t// between a national prefix and a national (significant) number.\r\n\t\t// So `US` national prefix separator is a \"special\" \"hardcoded\" case.\r\n\t\tif (this.isNANP) {\r\n\t\t\treturn ' '\r\n\t\t}\r\n\t\t// If a `format` has a `national_prefix_formatting_rule`\r\n\t\t// and that rule has a separator after a national prefix,\r\n\t\t// then it means that there should be a separator\r\n\t\t// between a national prefix and a national (significant) number.\r\n\t\tif (format &&\r\n\t\t\tformat.nationalPrefixFormattingRule() &&\r\n\t\t\tNATIONAL_PREFIX_SEPARATORS_PATTERN.test(format.nationalPrefixFormattingRule())) {\r\n\t\t\treturn ' '\r\n\t\t}\r\n\t\t// At this point, there seems to be no clear evidence that\r\n\t\t// there should be a separator between a national prefix\r\n\t\t// and a national (significant) number. So don't insert one.\r\n\t\treturn ''\r\n\t}\r\n\r\n\tgetInternationalPrefixBeforeCountryCallingCode({ IDDPrefix, missingPlus }, options) {\r\n\t\tif (IDDPrefix) {\r\n\t\t\treturn options && options.spacing === false ? IDDPrefix : IDDPrefix + ' '\r\n\t\t}\r\n\t\tif (missingPlus) {\r\n\t\t\treturn ''\r\n\t\t}\r\n\t\treturn '+'\r\n\t}\r\n\r\n\tgetTemplate(state) {\r\n\t\tif (!this.template) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// `this.template` holds the template for a \"complete\" phone number.\r\n\t\t// The currently entered phone number is most likely not \"complete\",\r\n\t\t// so trim all non-populated digits.\r\n\t\tlet index = -1\r\n\t\tlet i = 0\r\n\t\tconst internationalPrefix = state.international ? this.getInternationalPrefixBeforeCountryCallingCode(state, { spacing: false }) : ''\r\n\t\twhile (i < internationalPrefix.length + state.getDigitsWithoutInternationalPrefix().length) {\r\n\t\t\tindex = this.template.indexOf(DIGIT_PLACEHOLDER, index + 1)\r\n\t\t\ti++\r\n\t\t}\r\n\t\treturn cutAndStripNonPairedParens(this.template, index + 1)\r\n\t}\r\n\r\n\tsetNationalNumberTemplate(template, state) {\r\n\t\tthis.nationalNumberTemplate = template\r\n\t\tthis.populatedNationalNumberTemplate = template\r\n\t\t// With a new formatting template, the matched position\r\n\t\t// using the old template needs to be reset.\r\n\t\tthis.populatedNationalNumberTemplatePosition = -1\r\n\t\t// For convenience, the public `.template` property\r\n\t\t// contains the whole international number\r\n\t\t// if the phone number being input is international:\r\n\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\r\n\t\t// a spacebar and then the template for the formatted national number.\r\n\t\tif (state.international) {\r\n\t\t\tthis.template =\r\n\t\t\t\tthis.getInternationalPrefixBeforeCountryCallingCode(state).replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER) +\r\n\t\t\t\trepeat(DIGIT_PLACEHOLDER, state.callingCode.length) +\r\n\t\t\t\t' ' +\r\n\t\t\t\ttemplate\r\n\t\t} else {\r\n\t\t\tthis.template = template\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generates formatting template for a national phone number,\r\n\t * optionally containing a national prefix, for a format.\r\n\t * @param  {Format} format\r\n\t * @param  {string} nationalPrefix\r\n\t * @return {string}\r\n\t */\r\n\tgetTemplateForFormat(format, {\r\n\t\tnationalSignificantNumber,\r\n\t\tinternational,\r\n\t\tnationalPrefix,\r\n\t\tcomplexPrefixBeforeNationalSignificantNumber\r\n\t}) {\r\n\t\tlet pattern = format.pattern()\r\n\r\n\t\t/* istanbul ignore else */\r\n\t\tif (SUPPORT_LEGACY_FORMATTING_PATTERNS) {\r\n\t\t\tpattern = pattern\r\n\t\t\t\t// Replace anything in the form of [..] with \\d\r\n\t\t\t\t.replace(CREATE_CHARACTER_CLASS_PATTERN(), '\\\\d')\r\n\t\t\t\t// Replace any standalone digit (not the one in `{}`) with \\d\r\n\t\t\t\t.replace(CREATE_STANDALONE_DIGIT_PATTERN(), '\\\\d')\r\n\t\t}\r\n\r\n\t\t// Generate a dummy national number (consisting of `9`s)\r\n\t\t// that fits this format's `pattern`.\r\n\t\t//\r\n\t\t// This match will always succeed,\r\n\t\t// because the \"longest dummy phone number\"\r\n\t\t// has enough length to accomodate any possible\r\n\t\t// national phone number format pattern.\r\n\t\t//\r\n\t\tlet digits = LONGEST_DUMMY_PHONE_NUMBER.match(pattern)[0]\r\n\r\n\t\t// If the national number entered is too long\r\n\t\t// for any phone number format, then abort.\r\n\t\tif (nationalSignificantNumber.length > digits.length) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Get a formatting template which can be used to efficiently format\r\n\t\t// a partial number where digits are added one by one.\r\n\r\n\t\t// Below `strictPattern` is used for the\r\n\t\t// regular expression (with `^` and `$`).\r\n\t\t// This wasn't originally in Google's `libphonenumber`\r\n\t\t// and I guess they don't really need it\r\n\t\t// because they're not using \"templates\" to format phone numbers\r\n\t\t// but I added `strictPattern` after encountering\r\n\t\t// South Korean phone number formatting bug.\r\n\t\t//\r\n\t\t// Non-strict regular expression bug demonstration:\r\n\t\t//\r\n\t\t// this.nationalSignificantNumber : `111111111` (9 digits)\r\n\t\t//\r\n\t\t// pattern : (\\d{2})(\\d{3,4})(\\d{4})\r\n\t\t// format : `$1 $2 $3`\r\n\t\t// digits : `9999999999` (10 digits)\r\n\t\t//\r\n\t\t// '9999999999'.replace(new RegExp(/(\\d{2})(\\d{3,4})(\\d{4})/g), '$1 $2 $3') = \"99 9999 9999\"\r\n\t\t//\r\n\t\t// template : xx xxxx xxxx\r\n\t\t//\r\n\t\t// But the correct template in this case is `xx xxx xxxx`.\r\n\t\t// The template was generated incorrectly because of the\r\n\t\t// `{3,4}` variability in the `pattern`.\r\n\t\t//\r\n\t\t// The fix is, if `this.nationalSignificantNumber` has already sufficient length\r\n\t\t// to satisfy the `pattern` completely then `this.nationalSignificantNumber`\r\n\t\t// is used instead of `digits`.\r\n\r\n\t\tconst strictPattern = new RegExp('^' + pattern + '$')\r\n\t\tconst nationalNumberDummyDigits = nationalSignificantNumber.replace(/\\d/g, DUMMY_DIGIT)\r\n\r\n\t\t// If `this.nationalSignificantNumber` has already sufficient length\r\n\t\t// to satisfy the `pattern` completely then use it\r\n\t\t// instead of `digits`.\r\n\t\tif (strictPattern.test(nationalNumberDummyDigits)) {\r\n\t\t\tdigits = nationalNumberDummyDigits\r\n\t\t}\r\n\r\n\t\tlet numberFormat = this.getFormatFormat(format, international)\r\n\t\tlet nationalPrefixIncludedInTemplate\r\n\r\n\t\t// If a user did input a national prefix (and that's guaranteed),\r\n\t\t// and if a `format` does have a national prefix formatting rule,\r\n\t\t// then see if that national prefix formatting rule\r\n\t\t// prepends exactly the same national prefix the user has input.\r\n\t\t// If that's the case, then use the `format` with the national prefix formatting rule.\r\n\t\t// Otherwise, use  the `format` without the national prefix formatting rule,\r\n\t\t// and prepend a national prefix manually to it.\r\n\t\tif (this.shouldTryNationalPrefixFormattingRule(format, { international, nationalPrefix })) {\r\n\t\t\tconst numberFormatWithNationalPrefix = numberFormat.replace(\r\n\t\t\t\tFIRST_GROUP_PATTERN,\r\n\t\t\t\tformat.nationalPrefixFormattingRule()\r\n\t\t\t)\r\n\t\t\t// If `national_prefix_formatting_rule` of a `format` simply prepends\r\n\t\t\t// national prefix at the start of a national (significant) number,\r\n\t\t\t// then such formatting can be used with `AsYouType` formatter.\r\n\t\t\t// There seems to be no `else` case: everywhere in metadata,\r\n\t\t\t// national prefix formatting rule is national prefix + $1,\r\n\t\t\t// or `($1)`, in which case such format isn't even considered\r\n\t\t\t// when the user has input a national prefix.\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (parseDigits(format.nationalPrefixFormattingRule()) === (nationalPrefix || '') + parseDigits('$1')) {\r\n\t\t\t\tnumberFormat = numberFormatWithNationalPrefix\r\n\t\t\t\tnationalPrefixIncludedInTemplate = true\r\n\t\t\t\t// Replace all digits of the national prefix in the formatting template\r\n\t\t\t\t// with `DIGIT_PLACEHOLDER`s.\r\n\t\t\t\tif (nationalPrefix) {\r\n\t\t\t\t\tlet i = nationalPrefix.length\r\n\t\t\t\t\twhile (i > 0) {\r\n\t\t\t\t\t\tnumberFormat = numberFormat.replace(/\\d/, DIGIT_PLACEHOLDER)\r\n\t\t\t\t\t\ti--\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Generate formatting template for this phone number format.\r\n\t\tlet template = digits\r\n\t\t\t// Format the dummy phone number according to the format.\r\n\t\t\t.replace(new RegExp(pattern), numberFormat)\r\n\t\t\t// Replace each dummy digit with a DIGIT_PLACEHOLDER.\r\n\t\t\t.replace(new RegExp(DUMMY_DIGIT, 'g'), DIGIT_PLACEHOLDER)\r\n\r\n\t\t// If a prefix of a national (significant) number is not as simple\r\n\t\t// as just a basic national prefix, then just prepend such prefix\r\n\t\t// before the national (significant) number, optionally spacing\r\n\t\t// the two with a whitespace.\r\n\t\tif (!nationalPrefixIncludedInTemplate) {\r\n\t\t\tif (complexPrefixBeforeNationalSignificantNumber) {\r\n\t\t\t\t// Prepend the prefix to the template manually.\r\n\t\t\t\ttemplate = repeat(DIGIT_PLACEHOLDER, complexPrefixBeforeNationalSignificantNumber.length) +\r\n\t\t\t\t\t' ' +\r\n\t\t\t\t\ttemplate\r\n\t\t\t} else if (nationalPrefix) {\r\n\t\t\t\t// Prepend national prefix to the template manually.\r\n\t\t\t\ttemplate = repeat(DIGIT_PLACEHOLDER, nationalPrefix.length) +\r\n\t\t\t\t\tthis.getSeparatorAfterNationalPrefix(format) +\r\n\t\t\t\t\ttemplate\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (international) {\r\n\t\t\ttemplate = applyInternationalSeparatorStyle(template)\r\n\t\t}\r\n\r\n\t\treturn template\r\n\t}\r\n\r\n\tformatNextNationalNumberDigits(digits) {\r\n\t\tconst result = populateTemplateWithDigits(\r\n\t\t\tthis.populatedNationalNumberTemplate,\r\n\t\t\tthis.populatedNationalNumberTemplatePosition,\r\n\t\t\tdigits\r\n\t\t)\r\n\r\n\t\tif (!result) {\r\n\t\t\t// Reset the format.\r\n\t\t\tthis.resetFormat()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.populatedNationalNumberTemplate = result[0]\r\n\t\tthis.populatedNationalNumberTemplatePosition = result[1]\r\n\r\n\t\t// Return the formatted phone number so far.\r\n\t\treturn cutAndStripNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1)\r\n\r\n\t\t// The old way which was good for `input-format` but is not so good\r\n\t\t// for `react-phone-number-input`'s default input (`InputBasic`).\r\n\t\t// return closeNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1)\r\n\t\t// \t.replace(new RegExp(DIGIT_PLACEHOLDER, 'g'), ' ')\r\n\t}\r\n\r\n\tshouldTryNationalPrefixFormattingRule(format, { international, nationalPrefix }) {\r\n\t\tif (format.nationalPrefixFormattingRule()) {\r\n\t\t\t// In some countries, `national_prefix_formatting_rule` is `($1)`,\r\n\t\t\t// so it applies even if the user hasn't input a national prefix.\r\n\t\t\t// `format.usesNationalPrefix()` detects such cases.\r\n\t\t\tconst usesNationalPrefix = format.usesNationalPrefix()\r\n\t\t\tif ((usesNationalPrefix && nationalPrefix) ||\r\n\t\t\t\t(!usesNationalPrefix && !international)) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import Metadata from '../metadata.js'\r\nimport { VALID_DIGITS } from '../constants.js'\r\n\r\nconst CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])')\r\n\r\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\r\n\tif (!country) {\r\n\t\treturn\r\n\t}\r\n\t// Check if the number is IDD-prefixed.\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tconst IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix())\r\n\tif (number.search(IDDPrefixPattern) !== 0) {\r\n\t\treturn\r\n\t}\r\n\t// Strip IDD prefix.\r\n\tnumber = number.slice(number.match(IDDPrefixPattern)[0].length)\r\n\t// If there're any digits after an IDD prefix,\r\n\t// then those digits are a country calling code.\r\n\t// Since no country code starts with a `0`,\r\n\t// the code below validates that the next digit (if present) is not `0`.\r\n\tconst matchedGroups = number.match(CAPTURING_DIGIT_PATTERN)\r\n\tif (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\r\n\t\tif (matchedGroups[1] === '0') {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\treturn number\r\n}","/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.\r\n */\r\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\r\n\tif (number && metadata.numberingPlan.nationalPrefixForParsing()) {\r\n\t\t// See METADATA.md for the description of\r\n\t\t// `national_prefix_for_parsing` and `national_prefix_transform_rule`.\r\n\t\t// Attempt to parse the first digits as a national prefix.\r\n\t\tconst prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')')\r\n\t\tconst prefixMatch = prefixPattern.exec(number)\r\n\t\tif (prefixMatch) {\r\n\t\t\tlet nationalNumber\r\n\t\t\tlet carrierCode\r\n\t\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\r\n\t\t\t// If a `national_prefix_for_parsing` has any \"capturing groups\"\r\n\t\t\t// then it means that the national (significant) number is equal to\r\n\t\t\t// those \"capturing groups\" transformed via `national_prefix_transform_rule`,\r\n\t\t\t// and nothing could be said about the actual national prefix:\r\n\t\t\t// what is it and was it even there.\r\n\t\t\t// If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\r\n\t\t\t// then everything it matches is a national prefix.\r\n\t\t\t// To determine whether `national_prefix_for_parsing` matched any\r\n\t\t\t// \"capturing groups\", the value of the result of calling `.exec()`\r\n\t\t\t// is looked at, and if it has non-undefined values where there're\r\n\t\t\t// \"capturing groups\" in the regular expression, then it means\r\n\t\t\t// that \"capturing groups\" have been matched.\r\n\t\t\t// It's not possible to tell whether there'll be any \"capturing gropus\"\r\n\t\t\t// before the matching process, because a `national_prefix_for_parsing`\r\n\t\t\t// could exhibit both behaviors.\r\n\t\t\tconst capturedGroupsCount = prefixMatch.length - 1\r\n\t\t\tconst hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount]\r\n\t\t\tif (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\r\n\t\t\t\tnationalNumber = number.replace(\r\n\t\t\t\t\tprefixPattern,\r\n\t\t\t\t\tmetadata.nationalPrefixTransformRule()\r\n\t\t\t\t)\r\n\t\t\t\t// If there's more than one captured group,\r\n\t\t\t\t// then carrier code is the second one.\r\n\t\t\t\tif (capturedGroupsCount > 1) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If there're no \"capturing groups\",\r\n\t\t\t// or if there're \"capturing groups\" but no\r\n\t\t\t// `national_prefix_transform_rule`,\r\n\t\t\t// then just strip the national prefix from the number,\r\n\t\t\t// and possibly a carrier code.\r\n\t\t\t// Seems like there could be more.\r\n\t\t\telse {\r\n\t\t\t\t// `prefixBeforeNationalNumber` is the whole substring matched by\r\n\t\t\t\t// the `national_prefix_for_parsing` regular expression.\r\n\t\t\t\t// There seem to be no guarantees that it's just a national prefix.\r\n\t\t\t\t// For example, if there's a carrier code, it's gonna be a\r\n\t\t\t\t// part of `prefixBeforeNationalNumber` too.\r\n\t\t\t\tconst prefixBeforeNationalNumber = prefixMatch[0]\r\n\t\t\t\tnationalNumber = number.slice(prefixBeforeNationalNumber.length)\r\n\t\t\t\t// If there's at least one captured group,\r\n\t\t\t\t// then carrier code is the first one.\r\n\t\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Tries to guess whether a national prefix was present in the input.\r\n\t\t\t// This is not something copy-pasted from Google's library:\r\n\t\t\t// they don't seem to have an equivalent for that.\r\n\t\t\t// So this isn't an \"officially approved\" way of doing something like that.\r\n\t\t\t// But since there seems no other existing method, this library uses it.\r\n\t\t\tlet nationalPrefix\r\n\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\tconst possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1])\r\n\t\t\t\tconst possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup)\r\n\t\t\t\t// Example: an Argentinian (AR) phone number `0111523456789`.\r\n\t\t\t\t// `prefixMatch[0]` is `01115`, and `$1` is `11`,\r\n\t\t\t\t// and the rest of the phone number is `23456789`.\r\n\t\t\t\t// The national number is transformed via `9$1` to `91123456789`.\r\n\t\t\t\t// National prefix `0` is detected being present at the start.\r\n\t\t\t\t// if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\r\n\t\t\t\tif (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\r\n\t\t\t\t\tnationalPrefix = metadata.numberingPlan.nationalPrefix()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnationalPrefix = prefixMatch[0]\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tnationalPrefix,\r\n\t\t\t\tcarrierCode\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n   return {\r\n   \tnationalNumber: number\r\n   }\r\n}","import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\n\r\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\r\nexport default function extractNationalNumber(number, metadata) {\r\n\t// Parsing national prefixes and carrier codes\r\n\t// is only required for local phone numbers\r\n\t// but some people don't understand that\r\n\t// and sometimes write international phone numbers\r\n\t// with national prefixes (or maybe even carrier codes).\r\n\t// http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\r\n\t// Google's original library forgives such mistakes\r\n\t// and so does this library, because it has been requested:\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/127\r\n\tconst {\r\n\t\tcarrierCode,\r\n\t\tnationalNumber\r\n\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\tnumber,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (nationalNumber !== number) {\r\n\t\tif (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {\r\n\t\t\t// Don't strip the national prefix.\r\n\t\t\treturn { nationalNumber: number }\r\n\t\t}\r\n\t\t// Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t\t// Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature.\r\n\t\tif (metadata.possibleLengths()) {\r\n\t\t\t// The number remaining after stripping the national prefix and carrier code\r\n\t\t\t// should be long enough to have a possible length for the country.\r\n\t\t\t// Otherwise, don't strip the national prefix and carrier code,\r\n\t\t\t// since the original number could be a valid number.\r\n\t\t\t// This check has been copy-pasted \"as is\" from Google's original library:\r\n\t\t\t// https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\r\n\t\t\t// It doesn't check for the \"possibility\" of the original `number`.\r\n\t\t\t// I guess it's fine not checking that one. It works as is anyway.\r\n\t\t\tif (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {\r\n\t\t\t\t// Don't strip the national prefix.\r\n\t\t\t\treturn { nationalNumber: number }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { nationalNumber, carrierCode }\r\n}\r\n\r\n// In some countries, the same digit could be a national prefix\r\n// or a leading digit of a valid phone number.\r\n// For example, in Russia, national prefix is `8`,\r\n// and also `800 555 35 35` is a valid number\r\n// in which `8` is not a national prefix, but the first digit\r\n// of a national (significant) number.\r\n// Same's with Belarus:\r\n// `82004910060` is a valid national (significant) number,\r\n// but `2004910060` is not.\r\n// To support such cases (to prevent the code from always stripping\r\n// national prefix), a condition is imposed: a national prefix\r\n// is not extracted when the original number is \"viable\" and the\r\n// resultant number is not, a \"viable\" national number being the one\r\n// that matches `national_number_pattern`.\r\nfunction shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {\r\n\t// The equivalent in Google's code is:\r\n\t// https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\r\n\tif (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) &&\r\n\t\t!matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {\r\n\t\treturn false\r\n\t}\r\n\t// This \"is possible\" national number (length) check has been commented out\r\n\t// because it's superceded by the (effectively) same check done in the\r\n\t// `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.\r\n\t// In other words, why run the same check twice if it could only be run once.\r\n\t// // Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t// // Fixes a minor \"weird behavior\" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57\r\n\t// // (Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature).\r\n\t// if (metadata.possibleLengths()) {\r\n\t// \tif (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&\r\n\t// \t\t!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {\r\n\t// \t\treturn false\r\n\t// \t}\r\n\t// }\r\n\treturn true\r\n}\r\n\r\nfunction isPossibleIncompleteNationalNumber(nationalNumber, metadata) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'TOO_SHORT':\r\n\t\tcase 'INVALID_LENGTH':\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t\treturn false\r\n\t\tdefault:\r\n\t\t\treturn true\r\n\t}\r\n}","import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport extractNationalNumber from './extractNationalNumber.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\nimport getCountryCallingCode from '../getCountryCallingCode.js'\r\n\r\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\r\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tconst countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode\r\n\tif (number.indexOf(countryCallingCode) === 0) {\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(country, callingCode)\r\n\t\tconst possibleShorterNumber = number.slice(countryCallingCode.length)\r\n\t\tconst {\r\n\t\t\tnationalNumber: possibleShorterNationalNumber,\r\n\t\t} = extractNationalNumber(\r\n\t\t\tpossibleShorterNumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tconst {\r\n\t\t\tnationalNumber\r\n\t\t} = extractNationalNumber(\r\n\t\t\tnumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\t// If the number was not valid before but is valid now,\r\n\t\t// or if it was too long before, we consider the number\r\n\t\t// with the country calling code stripped to be a better result\r\n\t\t// and keep that instead.\r\n\t\t// For example, in Germany (+49), `49` is a valid area code,\r\n\t\t// so if a number starts with `49`, it could be both a valid\r\n\t\t// national German number or an international number without\r\n\t\t// a leading `+`.\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t\t&&\r\n\t\t\t\tmatchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t)\r\n\t\t\t||\r\n\t\t\tcheckNumberLength(nationalNumber, metadata) === 'TOO_LONG'\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: possibleShorterNumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { number }\r\n}","import stripIddPrefix from './stripIddPrefix.js'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js'\r\nimport Metadata from '../metadata.js'\r\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants.js'\r\n\r\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\r\nexport default function extractCountryCallingCode(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// If this is not an international phone number,\r\n\t// then either extract an \"IDD\" prefix, or extract a\r\n\t// country calling code from a number by autocorrecting it\r\n\t// by prepending a leading `+` in cases when it starts\r\n\t// with the country calling code.\r\n\t// https://wikitravel.org/en/International_dialling_prefix\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\tif (number[0] !== '+') {\r\n\t\t// Convert an \"out-of-country\" dialing phone number\r\n\t\t// to a proper international phone number.\r\n\t\tconst numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata)\r\n\t\t// If an IDD prefix was stripped then\r\n\t\t// convert the number to international one\r\n\t\t// for subsequent parsing.\r\n\t\tif (numberWithoutIDD && numberWithoutIDD !== number) {\r\n\t\t\tnumber = '+' + numberWithoutIDD\r\n\t\t} else {\r\n\t\t\t// Check to see if the number starts with the country calling code\r\n\t\t\t// for the default country. If so, we remove the country calling code,\r\n\t\t\t// and do some checks on the validity of the number before and after.\r\n\t\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\t\t\tif (country || callingCode) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t} = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\t\t\t\t\tnumber,\r\n\t\t\t\t\tcountry,\r\n\t\t\t\t\tcallingCode,\r\n\t\t\t\t\tmetadata\r\n\t\t\t\t)\r\n\t\t\t\tif (countryCallingCode) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn { number }\r\n\t\t}\r\n\t}\r\n\r\n\t// Fast abortion: country codes do not begin with a '0'\r\n\tif (number[1] === '0') {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// The thing with country phone codes\r\n\t// is that they are orthogonal to each other\r\n\t// i.e. there's no such country phone code A\r\n\t// for which country phone code B exists\r\n\t// where B starts with A.\r\n\t// Therefore, while scanning digits,\r\n\t// if a valid country code is found,\r\n\t// that means that it is the country code.\r\n\t//\r\n\tlet i = 2\r\n\twhile (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\r\n\t\tconst countryCallingCode = number.slice(1, i)\r\n\t\tif (metadata.hasCallingCode(countryCallingCode)) {\r\n\t\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: number.slice(i)\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\r\n\treturn {}\r\n}","import extractCountryCallingCode from './helpers/extractCountryCallingCode.js'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js'\r\nimport extractNationalNumberFromPossiblyIncompleteNumber from './helpers/extractNationalNumberFromPossiblyIncompleteNumber.js'\r\nimport stripIddPrefix from './helpers/stripIddPrefix.js'\r\nimport parseDigits from './helpers/parseDigits.js'\r\n\r\nimport {\r\n\tVALID_DIGITS,\r\n\tVALID_PUNCTUATION,\r\n\tPLUS_CHARS\r\n} from './constants.js'\r\n\r\nconst VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART =\r\n\t'[' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']+'\r\n\r\nconst VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN = new RegExp('^' + VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART + '$', 'i')\r\n\r\nconst VALID_FORMATTED_PHONE_NUMBER_PART =\r\n\t'(?:' +\r\n\t\t'[' + PLUS_CHARS + ']' +\r\n\t\t'[' +\r\n\t\t\tVALID_PUNCTUATION +\r\n\t\t\tVALID_DIGITS +\r\n\t\t']*' +\r\n\t\t'|' +\r\n\t\t'[' +\r\n\t\t\tVALID_PUNCTUATION +\r\n\t\t\tVALID_DIGITS +\r\n\t\t']+' +\r\n\t')'\r\n\r\nconst AFTER_PHONE_NUMBER_DIGITS_END_PATTERN = new RegExp(\r\n\t'[^' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']+' +\r\n\t'.*' +\r\n\t'$'\r\n)\r\n\r\n// Tests whether `national_prefix_for_parsing` could match\r\n// different national prefixes.\r\n// Matches anything that's not a digit or a square bracket.\r\nconst COMPLEX_NATIONAL_PREFIX = /[^\\d\\[\\]]/\r\n\r\nexport default class AsYouTypeParser {\r\n\tconstructor({\r\n\t\tdefaultCountry,\r\n\t\tdefaultCallingCode,\r\n\t\tmetadata,\r\n\t\tonNationalSignificantNumberChange\r\n\t}) {\r\n\t\tthis.defaultCountry = defaultCountry\r\n\t\tthis.defaultCallingCode = defaultCallingCode\r\n\t\tthis.metadata = metadata\r\n\t\tthis.onNationalSignificantNumberChange = onNationalSignificantNumberChange\r\n\t}\r\n\r\n\tinput(text, state) {\r\n\t\tconst [formattedDigits, hasPlus] = extractFormattedDigitsAndPlus(text)\r\n\t\tconst digits = parseDigits(formattedDigits)\r\n\t\t// Checks for a special case: just a leading `+` has been entered.\r\n\t\tlet justLeadingPlus\r\n\t\tif (hasPlus) {\r\n\t\t\tif (!state.digits) {\r\n\t\t\t\tstate.startInternationalNumber()\r\n\t\t\t\tif (!digits) {\r\n\t\t\t\t\tjustLeadingPlus = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (digits) {\r\n\t\t\tthis.inputDigits(digits, state)\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tdigits,\r\n\t\t\tjustLeadingPlus\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inputs \"next\" phone number digits.\r\n\t * @param  {string} digits\r\n\t * @return {string} [formattedNumber] Formatted national phone number (if it can be formatted at this stage). Returning `undefined` means \"don't format the national phone number at this stage\".\r\n\t */\r\n\tinputDigits(nextDigits, state) {\r\n\t\tconst { digits } = state\r\n\t\tconst hasReceivedThreeLeadingDigits = digits.length < 3 && digits.length + nextDigits.length >= 3\r\n\r\n\t\t// Append phone number digits.\r\n\t\tstate.appendDigits(nextDigits)\r\n\r\n\t\t// Attempt to extract IDD prefix:\r\n\t\t// Some users input their phone number in international format,\r\n\t\t// but in an \"out-of-country\" dialing format instead of using the leading `+`.\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/185\r\n\t\t// Detect such numbers as soon as there're at least 3 digits.\r\n\t\t// Google's library attempts to extract IDD prefix at 3 digits,\r\n\t\t// so this library just copies that behavior.\r\n\t\t// I guess that's because the most commot IDD prefixes are\r\n\t\t// `00` (Europe) and `011` (US).\r\n\t\t// There exist really long IDD prefixes too:\r\n\t\t// for example, in Australia the default IDD prefix is `0011`,\r\n\t\t// and it could even be as long as `14880011`.\r\n\t\t// An IDD prefix is extracted here, and then every time when\r\n\t\t// there's a new digit and the number couldn't be formatted.\r\n\t\tif (hasReceivedThreeLeadingDigits) {\r\n\t\t\tthis.extractIddPrefix(state)\r\n\t\t}\r\n\r\n\t\tif (this.isWaitingForCountryCallingCode(state)) {\r\n\t\t\tif (!this.extractCountryCallingCode(state)) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstate.appendNationalSignificantNumberDigits(nextDigits)\r\n\t\t}\r\n\r\n\t\t// If a phone number is being input in international format,\r\n\t\t// then it's not valid for it to have a national prefix.\r\n\t\t// Still, some people incorrectly input such numbers with a national prefix.\r\n\t\t// In such cases, only attempt to strip a national prefix if the number becomes too long.\r\n\t\t// (but that is done later, not here)\r\n\t\tif (!state.international) {\r\n\t\t\tif (!this.hasExtractedNationalSignificantNumber) {\r\n\t\t\t\tthis.extractNationalSignificantNumber(\r\n\t\t\t\t\tstate.getNationalDigits(),\r\n\t\t\t\t\t(stateUpdate) => state.update(stateUpdate)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisWaitingForCountryCallingCode({ international, callingCode }) {\r\n\t\treturn international && !callingCode\r\n\t}\r\n\r\n\t// Extracts a country calling code from a number\r\n\t// being entered in internatonal format.\r\n\textractCountryCallingCode(state) {\r\n\t\tconst { countryCallingCode, number } = extractCountryCallingCode(\r\n\t\t\t'+' + state.getDigitsWithoutInternationalPrefix(),\r\n\t\t\tthis.defaultCountry,\r\n\t\t\tthis.defaultCallingCode,\r\n\t\t\tthis.metadata.metadata\r\n\t\t)\r\n\t\tif (countryCallingCode) {\r\n\t\t\tstate.setCallingCode(countryCallingCode)\r\n\t\t\tstate.update({\r\n\t\t\t\tnationalSignificantNumber: number\r\n\t\t\t})\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\treset(numberingPlan) {\r\n\t\tif (numberingPlan) {\r\n\t\t\tthis.hasSelectedNumberingPlan = true\r\n\t\t\tconst nationalPrefixForParsing = numberingPlan._nationalPrefixForParsing()\r\n\t\t\tthis.couldPossiblyExtractAnotherNationalSignificantNumber = nationalPrefixForParsing && COMPLEX_NATIONAL_PREFIX.test(nationalPrefixForParsing)\r\n\t\t} else {\r\n\t\t\tthis.hasSelectedNumberingPlan = undefined\r\n\t\t\tthis.couldPossiblyExtractAnotherNationalSignificantNumber = undefined\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts a national (significant) number from user input.\r\n\t * Google's library is different in that it only applies `national_prefix_for_parsing`\r\n\t * and doesn't apply `national_prefix_transform_rule` after that.\r\n\t * https://github.com/google/libphonenumber/blob/a3d70b0487875475e6ad659af404943211d26456/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L539\r\n\t * @return {boolean} [extracted]\r\n\t */\r\n\textractNationalSignificantNumber(nationalDigits, setState) {\r\n\t\tif (!this.hasSelectedNumberingPlan) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst {\r\n\t\t\tnationalPrefix,\r\n\t\t\tnationalNumber,\r\n\t\t\tcarrierCode\r\n\t\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\t\tnationalDigits,\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t\tif (nationalNumber === nationalDigits) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.onExtractedNationalNumber(\r\n\t\t\tnationalPrefix,\r\n\t\t\tcarrierCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tnationalDigits,\r\n\t\t\tsetState\r\n\t\t)\r\n\t\treturn true\r\n\t}\r\n\r\n\t/**\r\n\t * In Google's code this function is called \"attempt to extract longer NDD\".\r\n\t * \"Some national prefixes are a substring of others\", they say.\r\n\t * @return {boolean} [result] — Returns `true` if extracting a national prefix produced different results from what they were.\r\n\t */\r\n\textractAnotherNationalSignificantNumber(nationalDigits, prevNationalSignificantNumber, setState) {\r\n\t\tif (!this.hasExtractedNationalSignificantNumber) {\r\n\t\t\treturn this.extractNationalSignificantNumber(nationalDigits, setState)\r\n\t\t}\r\n\t\tif (!this.couldPossiblyExtractAnotherNationalSignificantNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst {\r\n\t\t\tnationalPrefix,\r\n\t\t\tnationalNumber,\r\n\t\t\tcarrierCode\r\n\t\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\t\tnationalDigits,\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t\t// If a national prefix has been extracted previously,\r\n\t\t// then it's always extracted as additional digits are added.\r\n\t\t// That's assuming `extractNationalNumberFromPossiblyIncompleteNumber()`\r\n\t\t// doesn't do anything different from what it currently does.\r\n\t\t// So, just in case, here's this check, though it doesn't occur.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (nationalNumber === prevNationalSignificantNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.onExtractedNationalNumber(\r\n\t\t\tnationalPrefix,\r\n\t\t\tcarrierCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tnationalDigits,\r\n\t\t\tsetState\r\n\t\t)\r\n\t\treturn true\r\n\t}\r\n\r\n\tonExtractedNationalNumber(\r\n\t\tnationalPrefix,\r\n\t\tcarrierCode,\r\n\t\tnationalSignificantNumber,\r\n\t\tnationalDigits,\r\n\t\tsetState\r\n\t) {\r\n\t\tlet complexPrefixBeforeNationalSignificantNumber\r\n\t\tlet nationalSignificantNumberMatchesInput\r\n\t\t// This check also works with empty `this.nationalSignificantNumber`.\r\n\t\tconst nationalSignificantNumberIndex = nationalDigits.lastIndexOf(nationalSignificantNumber)\r\n\t\t// If the extracted national (significant) number is the\r\n\t\t// last substring of the `digits`, then it means that it hasn't been altered:\r\n\t\t// no digits have been removed from the national (significant) number\r\n\t\t// while applying `national_prefix_transform_rule`.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\r\n\t\tif (nationalSignificantNumberIndex >= 0 &&\r\n\t\t\tnationalSignificantNumberIndex === nationalDigits.length - nationalSignificantNumber.length) {\r\n\t\t\tnationalSignificantNumberMatchesInput = true\r\n\t\t\t// If a prefix of a national (significant) number is not as simple\r\n\t\t\t// as just a basic national prefix, then such prefix is stored in\r\n\t\t\t// `this.complexPrefixBeforeNationalSignificantNumber` property and will be\r\n\t\t\t// prepended \"as is\" to the national (significant) number to produce\r\n\t\t\t// a formatted result.\r\n\t\t\tconst prefixBeforeNationalNumber = nationalDigits.slice(0, nationalSignificantNumberIndex)\r\n\t\t\t// `prefixBeforeNationalNumber` is always non-empty,\r\n\t\t\t// because `onExtractedNationalNumber()` isn't called\r\n\t\t\t// when a national (significant) number hasn't been actually \"extracted\":\r\n\t\t\t// when a national (significant) number is equal to the national part of `digits`,\r\n\t\t\t// then `onExtractedNationalNumber()` doesn't get called.\r\n\t\t\tif (prefixBeforeNationalNumber !== nationalPrefix) {\r\n\t\t\t\tcomplexPrefixBeforeNationalSignificantNumber = prefixBeforeNationalNumber\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetState({\r\n\t\t\tnationalPrefix,\r\n\t\t\tcarrierCode,\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tnationalSignificantNumberMatchesInput,\r\n\t\t\tcomplexPrefixBeforeNationalSignificantNumber\r\n\t\t})\r\n\t\t// `onExtractedNationalNumber()` is only called when\r\n\t\t// the national (significant) number actually did change.\r\n\t\tthis.hasExtractedNationalSignificantNumber = true\r\n\t\tthis.onNationalSignificantNumberChange()\r\n\t}\r\n\r\n\treExtractNationalSignificantNumber(state) {\r\n\t\t// Attempt to extract a national prefix.\r\n\t\t//\r\n\t\t// Some people incorrectly input national prefix\r\n\t\t// in an international phone number.\r\n\t\t// For example, some people write British phone numbers as `+44(0)...`.\r\n\t\t//\r\n\t\t// Also, in some rare cases, it is valid for a national prefix\r\n\t\t// to be a part of an international phone number.\r\n\t\t// For example, mobile phone numbers in Mexico are supposed to be\r\n\t\t// dialled internationally using a `1` national prefix,\r\n\t\t// so the national prefix will be part of an international number.\r\n\t\t//\r\n\t\t// Quote from:\r\n\t\t// https://www.mexperience.com/dialing-cell-phones-in-mexico/\r\n\t\t//\r\n\t\t// \"Dialing a Mexican cell phone from abroad\r\n\t\t// When you are calling a cell phone number in Mexico from outside Mexico,\r\n\t\t// it’s necessary to dial an additional “1” after Mexico’s country code\r\n\t\t// (which is “52”) and before the area code.\r\n\t\t// You also ignore the 045, and simply dial the area code and the\r\n\t\t// cell phone’s number.\r\n\t\t//\r\n\t\t// If you don’t add the “1”, you’ll receive a recorded announcement\r\n\t\t// asking you to redial using it.\r\n\t\t//\r\n\t\t// For example, if you are calling from the USA to a cell phone\r\n\t\t// in Mexico City, you would dial +52 – 1 – 55 – 1234 5678.\r\n\t\t// (Note that this is different to calling a land line in Mexico City\r\n\t\t// from abroad, where the number dialed would be +52 – 55 – 1234 5678)\".\r\n\t\t//\r\n\t\t// Google's demo output:\r\n\t\t// https://libphonenumber.appspot.com/phonenumberparser?number=%2b5215512345678&country=MX\r\n\t\t//\r\n\t\tif (this.extractAnotherNationalSignificantNumber(\r\n\t\t\tstate.getNationalDigits(),\r\n\t\t\tstate.nationalSignificantNumber,\r\n\t\t\t(stateUpdate) => state.update(stateUpdate)\r\n\t\t)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t// If no format matches the phone number, then it could be\r\n\t\t// \"a really long IDD\" (quote from a comment in Google's library).\r\n\t\t// An IDD prefix is first extracted when the user has entered at least 3 digits,\r\n\t\t// and then here — every time when there's a new digit and the number\r\n\t\t// couldn't be formatted.\r\n\t\t// For example, in Australia the default IDD prefix is `0011`,\r\n\t\t// and it could even be as long as `14880011`.\r\n\t\t//\r\n\t\t// Could also check `!hasReceivedThreeLeadingDigits` here\r\n\t\t// to filter out the case when this check duplicates the one\r\n\t\t// already performed when there're 3 leading digits,\r\n\t\t// but it's not a big deal, and in most cases there\r\n\t\t// will be a suitable `format` when there're 3 leading digits.\r\n\t\t//\r\n\t\tif (this.extractIddPrefix(state)) {\r\n\t\t\tthis.extractCallingCodeAndNationalSignificantNumber(state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t// Google's AsYouType formatter supports sort of an \"autocorrection\" feature\r\n\t\t// when it \"autocorrects\" numbers that have been input for a country\r\n\t\t// with that country's calling code.\r\n\t\t// Such \"autocorrection\" feature looks weird, but different people have been requesting it:\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/375\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/316\r\n\t\tif (this.fixMissingPlus(state)) {\r\n\t\t\tthis.extractCallingCodeAndNationalSignificantNumber(state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\textractIddPrefix(state) {\r\n\t\t// An IDD prefix can't be present in a number written with a `+`.\r\n\t\t// Also, don't re-extract an IDD prefix if has already been extracted.\r\n\t\tconst {\r\n\t\t\tinternational,\r\n\t\t\tIDDPrefix,\r\n\t\t\tdigits,\r\n\t\t\tnationalSignificantNumber\r\n\t\t} = state\r\n\t\tif (international || IDDPrefix) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Some users input their phone number in \"out-of-country\"\r\n\t\t// dialing format instead of using the leading `+`.\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/185\r\n\t\t// Detect such numbers.\r\n\t\tconst numberWithoutIDD = stripIddPrefix(\r\n\t\t\tdigits,\r\n\t\t\tthis.defaultCountry,\r\n\t\t\tthis.defaultCallingCode,\r\n\t\t\tthis.metadata.metadata\r\n\t\t)\r\n\t\tif (numberWithoutIDD !== undefined && numberWithoutIDD !== digits) {\r\n\t\t\t// If an IDD prefix was stripped then convert the IDD-prefixed number\r\n\t\t\t// to international number for subsequent parsing.\r\n\t\t\tstate.update({\r\n\t\t\t\tIDDPrefix: digits.slice(0, digits.length - numberWithoutIDD.length)\r\n\t\t\t})\r\n\t\t\tthis.startInternationalNumber(state, {\r\n\t\t\t\tcountry: undefined,\r\n\t\t\t\tcallingCode: undefined\r\n\t\t\t})\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tfixMissingPlus(state) {\r\n\t\tif (!state.international) {\r\n\t\t\tconst {\r\n\t\t\t\tcountryCallingCode: newCallingCode,\r\n\t\t\t\tnumber\r\n\t\t\t} = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\t\t\t\tstate.digits,\r\n\t\t\t\tthis.defaultCountry,\r\n\t\t\t\tthis.defaultCallingCode,\r\n\t\t\t\tthis.metadata.metadata\r\n\t\t\t)\r\n\t\t\tif (newCallingCode) {\r\n\t\t\t\tstate.update({\r\n\t\t\t\t\tmissingPlus: true\r\n\t\t\t\t})\r\n\t\t\t\tthis.startInternationalNumber(state, {\r\n\t\t\t\t\tcountry: state.country,\r\n\t\t\t\t\tcallingCode: newCallingCode\r\n\t\t\t\t})\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstartInternationalNumber(state, { country, callingCode }) {\r\n\t\tstate.startInternationalNumber(country, callingCode)\r\n\t\t// If a national (significant) number has been extracted before, reset it.\r\n\t\tif (state.nationalSignificantNumber) {\r\n\t\t\tstate.resetNationalSignificantNumber()\r\n\t\t\tthis.onNationalSignificantNumberChange()\r\n\t\t\tthis.hasExtractedNationalSignificantNumber = undefined\r\n\t\t}\r\n\t}\r\n\r\n\textractCallingCodeAndNationalSignificantNumber(state) {\r\n\t\tif (this.extractCountryCallingCode(state)) {\r\n\t\t\t// `this.extractCallingCode()` is currently called when the number\r\n\t\t\t// couldn't be formatted during the standard procedure.\r\n\t\t\t// Normally, the national prefix would be re-extracted\r\n\t\t\t// for an international number if such number couldn't be formatted,\r\n\t\t\t// but since it's already not able to be formatted,\r\n\t\t\t// there won't be yet another retry, so also extract national prefix here.\r\n\t\t\tthis.extractNationalSignificantNumber(\r\n\t\t\t\tstate.getNationalDigits(),\r\n\t\t\t\t(stateUpdate) => state.update(stateUpdate)\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts formatted phone number from text (if there's any).\r\n * @param  {string} text\r\n * @return {string} [formattedPhoneNumber]\r\n */\r\nfunction extractFormattedPhoneNumber(text) {\r\n\t// Attempt to extract a possible number from the string passed in.\r\n\tconst startsAt = text.search(VALID_FORMATTED_PHONE_NUMBER_PART)\r\n\tif (startsAt < 0) {\r\n\t\treturn\r\n\t}\r\n\t// Trim everything to the left of the phone number.\r\n\ttext = text.slice(startsAt)\r\n\t// Trim the `+`.\r\n\tlet hasPlus\r\n\tif (text[0] === '+') {\r\n\t\thasPlus = true\r\n\t\ttext = text.slice('+'.length)\r\n\t}\r\n\t// Trim everything to the right of the phone number.\r\n\ttext = text.replace(AFTER_PHONE_NUMBER_DIGITS_END_PATTERN, '')\r\n\t// Re-add the previously trimmed `+`.\r\n\tif (hasPlus) {\r\n\t\ttext = '+' + text\r\n\t}\r\n\treturn text\r\n}\r\n\r\n/**\r\n * Extracts formatted phone number digits (and a `+`) from text (if there're any).\r\n * @param  {string} text\r\n * @return {any[]}\r\n */\r\nfunction _extractFormattedDigitsAndPlus(text) {\r\n\t// Extract a formatted phone number part from text.\r\n\tconst extractedNumber = extractFormattedPhoneNumber(text) || ''\r\n\t// Trim a `+`.\r\n\tif (extractedNumber[0] === '+') {\r\n\t\treturn [extractedNumber.slice('+'.length), true]\r\n\t}\r\n\treturn [extractedNumber]\r\n}\r\n\r\n/**\r\n * Extracts formatted phone number digits (and a `+`) from text (if there're any).\r\n * @param  {string} text\r\n * @return {any[]}\r\n */\r\nexport function extractFormattedDigitsAndPlus(text) {\r\n\tlet [formattedDigits, hasPlus] = _extractFormattedDigitsAndPlus(text)\r\n\t// If the extracted phone number part\r\n\t// can possibly be a part of some valid phone number\r\n\t// then parse phone number characters from a formatted phone number.\r\n\tif (!VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN.test(formattedDigits)) {\r\n\t\tformattedDigits = ''\r\n\t}\r\n\treturn [formattedDigits, hasPlus]\r\n}","import Metadata from '../metadata.js'\r\nimport getNumberType from './getNumberType.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default function getCountryByCallingCode(callingCode, nationalPhoneNumber, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\tif (metadata.isNonGeographicCallingCode(callingCode)) {\r\n\t\t\treturn '001'\r\n\t\t}\r\n\t}\r\n\t// Is always non-empty, because `callingCode` is always valid\r\n\tconst possibleCountries = metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn\r\n\t}\r\n\t// If there's just one country corresponding to the country code,\r\n\t// then just return it, without further phone number digits validation.\r\n\tif (possibleCountries.length === 1) {\r\n\t\treturn possibleCountries[0]\r\n\t}\r\n\treturn selectCountryFromList(possibleCountries, nationalPhoneNumber, metadata.metadata)\r\n}\r\n\r\nfunction selectCountryFromList(possibleCountries, nationalPhoneNumber, metadata) {\r\n\t// Re-create `metadata` because it will be selecting a `country`.\r\n\tmetadata = new Metadata(metadata)\r\n\tfor (const country of possibleCountries) {\r\n\t\tmetadata.country(country)\r\n\t\t// Leading digits check would be the simplest and fastest one.\r\n\t\t// Leading digits patterns are only defined for about 20% of all countries.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\r\n\t\t// Matching \"leading digits\" is a sufficient but not necessary condition.\r\n\t\tif (metadata.leadingDigits()) {\r\n\t\t\tif (nationalPhoneNumber &&\r\n\t\t\t\tnationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Else perform full validation with all of those\r\n\t\t// fixed-line/mobile/etc regular expressions.\r\n\t\telse if (getNumberType({ phone: nationalPhoneNumber, country }, undefined, metadata.metadata)) {\r\n\t\t\treturn country\r\n\t\t}\r\n\t}\r\n}","import Metadata from './metadata.js'\r\nimport PhoneNumber from './PhoneNumber.js'\r\nimport AsYouTypeState from './AsYouTypeState.js'\r\nimport AsYouTypeFormatter, { DIGIT_PLACEHOLDER } from './AsYouTypeFormatter.js'\r\nimport AsYouTypeParser, { extractFormattedDigitsAndPlus } from './AsYouTypeParser.js'\r\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default class AsYouType {\r\n\t/**\r\n\t * @param {(string|object)?} [optionsOrDefaultCountry] - The default country used for parsing non-international phone numbers. Can also be an `options` object.\r\n\t * @param {Object} metadata\r\n\t */\r\n\tconstructor(optionsOrDefaultCountry, metadata) {\r\n\t\tthis.metadata = new Metadata(metadata)\r\n\t\tconst [defaultCountry, defaultCallingCode] = this.getCountryAndCallingCode(optionsOrDefaultCountry)\r\n\t\tthis.defaultCountry = defaultCountry\r\n\t\tthis.defaultCallingCode = defaultCallingCode\r\n\t\tthis.reset()\r\n\t}\r\n\r\n\tgetCountryAndCallingCode(optionsOrDefaultCountry) {\r\n\t\t// Set `defaultCountry` and `defaultCallingCode` options.\r\n\t\tlet defaultCountry\r\n\t\tlet defaultCallingCode\r\n\t\t// Turns out `null` also has type \"object\". Weird.\r\n\t\tif (optionsOrDefaultCountry) {\r\n\t\t\tif (typeof optionsOrDefaultCountry === 'object') {\r\n\t\t\t\tdefaultCountry = optionsOrDefaultCountry.defaultCountry\r\n\t\t\t\tdefaultCallingCode = optionsOrDefaultCountry.defaultCallingCode\r\n\t\t\t} else {\r\n\t\t\t\tdefaultCountry = optionsOrDefaultCountry\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (defaultCountry && !this.metadata.hasCountry(defaultCountry)) {\r\n\t\t\tdefaultCountry = undefined\r\n\t\t}\r\n\t\tif (defaultCallingCode) {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (this.metadata.isNonGeographicCallingCode(defaultCallingCode)) {\r\n\t\t\t\t\tdefaultCountry = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [defaultCountry, defaultCallingCode]\r\n\t}\r\n\r\n\t/**\r\n\t * Inputs \"next\" phone number characters.\r\n\t * @param  {string} text\r\n\t * @return {string} Formatted phone number characters that have been input so far.\r\n\t */\r\n\tinput(text) {\r\n\t\tconst {\r\n\t\t\tdigits,\r\n\t\t\tjustLeadingPlus\r\n\t\t} = this.parser.input(text, this.state)\r\n\t\tif (justLeadingPlus) {\r\n\t\t\tthis.formattedOutput = '+'\r\n\t\t} else if (digits) {\r\n\t\t\tthis.determineTheCountryIfNeeded()\r\n\t\t\t// Match the available formats by the currently available leading digits.\r\n\t\t\tif (this.state.nationalSignificantNumber) {\r\n\t\t\t\tthis.formatter.narrowDownMatchingFormats(this.state)\r\n\t\t\t}\r\n\t\t\tlet formattedNationalNumber\r\n\t\t\tif (this.metadata.hasSelectedNumberingPlan()) {\r\n\t\t\t\tformattedNationalNumber = this.formatter.format(digits, this.state)\r\n\t\t\t}\r\n\t\t\tif (formattedNationalNumber === undefined) {\r\n\t\t\t\t// See if another national (significant) number could be re-extracted.\r\n\t\t\t\tif (this.parser.reExtractNationalSignificantNumber(this.state)) {\r\n\t\t\t\t\tthis.determineTheCountryIfNeeded()\r\n\t\t\t\t\t// If it could, then re-try formatting the new national (significant) number.\r\n\t\t\t\t\tconst nationalDigits = this.state.getNationalDigits()\r\n\t\t\t\t\tif (nationalDigits) {\r\n\t\t\t\t\t\tformattedNationalNumber = this.formatter.format(nationalDigits, this.state)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.formattedOutput = formattedNationalNumber\r\n\t\t\t\t? this.getFullNumber(formattedNationalNumber)\r\n\t\t\t\t: this.getNonFormattedNumber()\r\n\t\t}\r\n\t\treturn this.formattedOutput\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.state = new AsYouTypeState({\r\n\t\t\tonCountryChange: (country) => {\r\n\t\t\t\t// Before version `1.6.0`, the official `AsYouType` formatter API\r\n\t\t\t\t// included the `.country` property of an `AsYouType` instance.\r\n\t\t\t\t// Since that property (along with the others) have been moved to\r\n\t\t\t\t// `this.state`, `this.country` property is emulated for compatibility\r\n\t\t\t\t// with the old versions.\r\n\t\t\t\tthis.country = country\r\n\t\t\t},\r\n\t\t\tonCallingCodeChange: (callingCode, country) => {\r\n\t\t\t\tthis.metadata.selectNumberingPlan(country, callingCode)\r\n\t\t\t\tthis.formatter.reset(this.metadata.numberingPlan, this.state)\r\n\t\t\t\tthis.parser.reset(this.metadata.numberingPlan)\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.formatter = new AsYouTypeFormatter({\r\n\t\t\tstate: this.state,\r\n\t\t\tmetadata: this.metadata\r\n\t\t})\r\n\t\tthis.parser = new AsYouTypeParser({\r\n\t\t\tdefaultCountry: this.defaultCountry,\r\n\t\t\tdefaultCallingCode: this.defaultCallingCode,\r\n\t\t\tmetadata: this.metadata,\r\n\t\t\tstate: this.state,\r\n\t\t\tonNationalSignificantNumberChange: () => {\r\n\t\t\t\tthis.determineTheCountryIfNeeded()\r\n\t\t\t\tthis.formatter.reset(this.metadata.numberingPlan, this.state)\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.state.reset(this.defaultCountry, this.defaultCallingCode)\r\n\t\tthis.formattedOutput = ''\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the phone number is being input in international format.\r\n\t * In other words, returns `true` if and only if the parsed phone number starts with a `\"+\"`.\r\n\t * @return {boolean}\r\n\t */\r\n\tisInternational() {\r\n\t\treturn this.state.international\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the \"calling code\" part of the phone number when it's being input\r\n\t * in an international format.\r\n\t * If no valid calling code has been entered so far, returns `undefined`.\r\n\t * @return {string} [callingCode]\r\n\t */\r\n\tgetCallingCode() {\r\n\t\t // If the number is being input in national format and some \"default calling code\"\r\n\t\t // has been passed to `AsYouType` constructor, then `this.state.callingCode`\r\n\t\t // is equal to that \"default calling code\".\r\n\t\t //\r\n\t\t // If the number is being input in national format and no \"default calling code\"\r\n\t\t // has been passed to `AsYouType` constructor, then returns `undefined`,\r\n\t\t // even if a \"default country\" has been passed to `AsYouType` constructor.\r\n\t\t //\r\n\t\tif (this.isInternational()) {\r\n\t\t\treturn this.state.callingCode\r\n\t\t}\r\n\t}\r\n\r\n\t// A legacy alias.\r\n\tgetCountryCallingCode() {\r\n\t\treturn this.getCallingCode()\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a two-letter country code of the phone number.\r\n\t * Returns `undefined` for \"non-geographic\" phone numbering plans.\r\n\t * Returns `undefined` if no phone number has been input yet.\r\n\t * @return {string} [country]\r\n\t */\r\n\tgetCountry() {\r\n\t\tconst { digits } = this.state\r\n\t\t// Return `undefined` if no digits have been input yet.\r\n\t\tif (digits) {\r\n\t\t\treturn this._getCountry()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a two-letter country code of the phone number.\r\n\t * Returns `undefined` for \"non-geographic\" phone numbering plans.\r\n\t * @return {string} [country]\r\n\t */\r\n\t_getCountry() {\r\n\t\tconst { country } = this.state\r\n\t\t/* istanbul ignore if */\r\n\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t// `AsYouType.getCountry()` returns `undefined`\r\n\t\t\t// for \"non-geographic\" phone numbering plans.\r\n\t\t\tif (country === '001') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn country\r\n\t}\r\n\r\n\tdetermineTheCountryIfNeeded() {\r\n\t\t// Suppose a user enters a phone number in international format,\r\n\t\t// and there're several countries corresponding to that country calling code,\r\n\t\t// and a country has been derived from the number, and then\r\n\t\t// a user enters one more digit and the number is no longer\r\n\t\t// valid for the derived country, so the country should be re-derived\r\n\t\t// on every new digit in those cases.\r\n\t\t//\r\n\t\t// If the phone number is being input in national format,\r\n\t\t// then it could be a case when `defaultCountry` wasn't specified\r\n\t\t// when creating `AsYouType` instance, and just `defaultCallingCode` was specified,\r\n\t\t// and that \"calling code\" could correspond to a \"non-geographic entity\",\r\n\t\t// or there could be several countries corresponding to that country calling code.\r\n\t\t// In those cases, `this.country` is `undefined` and should be derived\r\n\t\t// from the number. Again, if country calling code is ambiguous, then\r\n\t\t// `this.country` should be re-derived with each new digit.\r\n\t\t//\r\n\t\tif (!this.state.country || this.isCountryCallingCodeAmbiguous()) {\r\n\t\t\tthis.determineTheCountry()\r\n\t\t}\r\n\t}\r\n\r\n\t// Prepends `+CountryCode ` in case of an international phone number\r\n\tgetFullNumber(formattedNationalNumber) {\r\n\t\tif (this.isInternational()) {\r\n\t\t\tconst prefix = (text) => this.formatter.getInternationalPrefixBeforeCountryCallingCode(this.state, {\r\n\t\t\t\tspacing: text ? true : false\r\n\t\t\t}) + text\r\n\t\t\tconst { callingCode } = this.state\r\n\t\t\tif (!callingCode) {\r\n\t\t\t\treturn prefix(`${this.state.getDigitsWithoutInternationalPrefix()}`)\r\n\t\t\t}\r\n\t\t\tif (!formattedNationalNumber) {\r\n\t\t\t\treturn prefix(callingCode)\r\n\t\t\t}\r\n\t\t\treturn prefix(`${callingCode} ${formattedNationalNumber}`)\r\n\t\t}\r\n\t\treturn formattedNationalNumber\r\n\t}\r\n\r\n\tgetNonFormattedNationalNumberWithPrefix() {\r\n\t\tconst {\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tcomplexPrefixBeforeNationalSignificantNumber,\r\n\t\t\tnationalPrefix\r\n\t\t} = this.state\r\n\t\tlet number = nationalSignificantNumber\r\n\t\tconst prefix = complexPrefixBeforeNationalSignificantNumber || nationalPrefix\r\n\t\tif (prefix) {\r\n\t\t\tnumber = prefix + number\r\n\t\t}\r\n\t\treturn number\r\n\t}\r\n\r\n\tgetNonFormattedNumber() {\r\n\t\tconst { nationalSignificantNumberMatchesInput } = this.state\r\n\t\treturn this.getFullNumber(\r\n\t\t\tnationalSignificantNumberMatchesInput\r\n\t\t\t\t? this.getNonFormattedNationalNumberWithPrefix()\r\n\t\t\t\t: this.state.getNationalDigits()\r\n\t\t)\r\n\t}\r\n\r\n\tgetNonFormattedTemplate() {\r\n\t\tconst number = this.getNonFormattedNumber()\r\n\t\tif (number) {\r\n\t\t\treturn number.replace(/[\\+\\d]/g, DIGIT_PLACEHOLDER)\r\n\t\t}\r\n\t}\r\n\r\n\tisCountryCallingCodeAmbiguous() {\r\n\t\tconst { callingCode } = this.state\r\n\t\tconst countryCodes = this.metadata.getCountryCodesForCallingCode(callingCode)\r\n\t\treturn countryCodes && countryCodes.length > 1\r\n\t}\r\n\r\n\t// Determines the country of the phone number\r\n\t// entered so far based on the country phone code\r\n\t// and the national phone number.\r\n\tdetermineTheCountry() {\r\n\t\tthis.state.setCountry(getCountryByCallingCode(\r\n\t\t\tthis.isInternational() ? this.state.callingCode : this.defaultCallingCode,\r\n\t\t\tthis.state.nationalSignificantNumber,\r\n\t\t\tthis.metadata\r\n\t\t))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a E.164 phone number value for the user's input.\r\n\t *\r\n\t * For example, for country `\"US\"` and input `\"(222) 333-4444\"`\r\n\t * it will return `\"+12223334444\"`.\r\n\t *\r\n\t * For international phone number input, it will also auto-correct\r\n\t * some minor errors such as using a national prefix when writing\r\n\t * an international phone number. For example, if the user inputs\r\n\t * `\"+44 0 7400 000000\"` then it will return an auto-corrected\r\n\t * `\"+447400000000\"` phone number value.\r\n\t *\r\n\t * Will return `undefined` if no digits have been input,\r\n\t * or when inputting a phone number in national format and no\r\n\t * default country or default \"country calling code\" have been set.\r\n\t *\r\n\t * @return {string} [value]\r\n\t */\r\n\tgetNumberValue() {\r\n\t\tconst {\r\n\t\t\tdigits,\r\n\t\t\tcallingCode,\r\n\t\t\tcountry,\r\n\t\t\tnationalSignificantNumber\r\n\t\t} = this.state\r\n\r\n\t \t// Will return `undefined` if no digits have been input.\r\n\t\tif (!digits) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (this.isInternational()) {\r\n\t\t\tif (callingCode) {\r\n\t\t\t\treturn '+' + callingCode + nationalSignificantNumber\r\n\t\t\t} else {\r\n\t\t\t\treturn '+' + digits\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (country || callingCode) {\r\n\t\t\t\tconst callingCode_ = country ? this.metadata.countryCallingCode() : callingCode\r\n\t\t\t\treturn '+' + callingCode_ + nationalSignificantNumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an instance of `PhoneNumber` class.\r\n\t * Will return `undefined` if no national (significant) number\r\n\t * digits have been entered so far, or if no `defaultCountry` has been\r\n\t * set and the user enters a phone number not in international format.\r\n\t */\r\n\tgetNumber() {\r\n\t\tconst {\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tcarrierCode,\r\n\t\t\tcallingCode\r\n\t\t} = this.state\r\n\r\n\t\t// `this._getCountry()` is basically same as `this.state.country`\r\n\t\t// with the only change that it return `undefined` in case of a\r\n\t\t// \"non-geographic\" numbering plan instead of `\"001\"` \"internal use\" value.\r\n\t\tconst country = this._getCountry()\r\n\r\n\t\tif (!nationalSignificantNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!country && !callingCode) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst phoneNumber = new PhoneNumber(\r\n\t\t\tcountry || callingCode,\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tthis.metadata.metadata\r\n\t\t)\r\n\t\tif (carrierCode) {\r\n\t\t\tphoneNumber.carrierCode = carrierCode\r\n\t\t}\r\n\t\t// Phone number extensions are not supported by \"As You Type\" formatter.\r\n\t\treturn phoneNumber\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the phone number is \"possible\".\r\n\t * Is just a shortcut for `PhoneNumber.isPossible()`.\r\n\t * @return {boolean}\r\n\t */\r\n\tisPossible() {\r\n\t\tconst phoneNumber = this.getNumber()\r\n\t\tif (!phoneNumber) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn phoneNumber.isPossible()\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the phone number is \"valid\".\r\n\t * Is just a shortcut for `PhoneNumber.isValid()`.\r\n\t * @return {boolean}\r\n\t */\r\n\tisValid() {\r\n\t\tconst phoneNumber = this.getNumber()\r\n\t\tif (!phoneNumber) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn phoneNumber.isValid()\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated\r\n\t * This method is used in `react-phone-number-input/source/input-control.js`\r\n\t * in versions before `3.0.16`.\r\n\t */\r\n\tgetNationalNumber() {\r\n\t\treturn this.state.nationalSignificantNumber\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the phone number characters entered by the user.\r\n\t * @return {string}\r\n\t */\r\n\tgetChars() {\r\n\t\treturn (this.state.international ? '+' : '') + this.state.digits\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the template for the formatted phone number.\r\n\t * @return {string}\r\n\t */\r\n\tgetTemplate() {\r\n\t\treturn this.formatter.getTemplate(this.state) || this.getNonFormattedTemplate() || ''\r\n\t}\r\n}","import { parseDigit } from './helpers/parseDigits.js'\r\n\r\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\r\nexport default function parseIncompletePhoneNumber(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tresult += parsePhoneNumberCharacter(character, result) || ''\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {object} meta - Optional custom use-case-specific metadata.\r\n * @return {string?} The parsed character.\r\n */\r\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters) {\r\n\t// Only allow a leading `+`.\r\n\tif (character === '+') {\r\n\t\t// If this `+` is not the first parsed character\r\n\t\t// then discard it.\r\n\t\tif (prevParsedCharacters) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn '+'\r\n\t}\r\n\t// Allow digits.\r\n\treturn parseDigit(character)\r\n}","import { getCountryCallingCode } from 'libphonenumber-js/core'\r\n\r\nexport function getInputValuePrefix({\r\n\tcountry,\r\n\tinternational,\r\n\twithCountryCallingCode,\r\n\tmetadata\r\n}) {\r\n\treturn country && international && !withCountryCallingCode ?\r\n\t\t`+${getCountryCallingCode(country, metadata)}` :\r\n\t\t''\r\n}\r\n\r\nexport function removeInputValuePrefix(value, prefix) {\r\n\tif (prefix) {\r\n\t\tvalue = value.slice(prefix.length)\r\n\t\tif (value[0] === ' ') {\r\n\t\t\tvalue = value.slice(1)\r\n\t\t}\r\n\t}\r\n\treturn value\r\n}","import React, { useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Input from 'input-format/react'\r\nimport { AsYouType, parsePhoneNumberCharacter } from 'libphonenumber-js/core'\r\n\r\nimport { getInputValuePrefix, removeInputValuePrefix } from './helpers/inputValuePrefix.js'\r\n\r\nexport function createInput(defaultMetadata)\r\n{\r\n\t/**\r\n\t * `InputSmart` is a \"smarter\" implementation of a `Component`\r\n\t * that can be passed to `<PhoneInput/>`. It parses and formats\r\n\t * the user's and maintains the caret's position in the process.\r\n\t * The caret positioning is maintained using `input-format` library.\r\n\t * Relies on being run in a DOM environment for calling caret positioning functions.\r\n\t */\r\n\tfunction InputSmart({\r\n\t\tcountry,\r\n\t\tinternational,\r\n\t\twithCountryCallingCode,\r\n\t\tmetadata,\r\n\t\t...rest\r\n\t}, ref) {\r\n\t\tconst format = useCallback((value) => {\r\n\t\t\t// \"As you type\" formatter.\r\n\t\t\tconst formatter = new AsYouType(country, metadata)\r\n\t\t\tconst prefix = getInputValuePrefix({\r\n\t\t\t\tcountry,\r\n\t\t\t\tinternational,\r\n\t\t\t\twithCountryCallingCode,\r\n\t\t\t\tmetadata\r\n\t\t\t})\r\n\t\t\t// Format the number.\r\n\t\t\tlet text = formatter.input(prefix + value)\r\n\t\t\tlet template = formatter.getTemplate()\r\n\t\t\tif (prefix) {\r\n\t\t\t\ttext = removeInputValuePrefix(text, prefix)\r\n\t\t\t\t// `AsYouType.getTemplate()` can be `undefined`.\r\n\t\t\t\tif (template) {\r\n\t\t\t\t\ttemplate = removeInputValuePrefix(template, prefix)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\ttext,\r\n\t\t\t\ttemplate\r\n\t\t\t}\r\n\t\t}, [country, metadata])\r\n\t\treturn (\r\n\t\t\t<Input\r\n\t\t\t\t{...rest}\r\n\t\t\t\tref={ref}\r\n\t\t\t\tparse={parsePhoneNumberCharacter}\r\n\t\t\t\tformat={format}/>\r\n\t\t)\r\n\t}\r\n\r\n\tInputSmart = React.forwardRef(InputSmart)\r\n\r\n\tInputSmart.propTypes = {\r\n\t\t/**\r\n\t\t * The parsed phone number.\r\n\t\t * \"Parsed\" not in a sense of \"E.164\"\r\n\t\t * but rather in a sense of \"having only\r\n\t\t * digits and possibly a leading plus character\".\r\n\t\t * Examples: `\"\"`, `\"+\"`, `\"+123\"`, `\"123\"`.\r\n\t\t */\r\n\t\tvalue: PropTypes.string.isRequired,\r\n\r\n\t\t/**\r\n\t\t * A function of `value: string`.\r\n\t\t * Updates the `value` property.\r\n\t\t */\r\n\t\tonChange: PropTypes.func.isRequired,\r\n\r\n\t\t/**\r\n\t\t * A two-letter country code for formatting `value`\r\n\t\t * as a national phone number (e.g. `(800) 555 35 35`).\r\n\t\t * E.g. \"US\", \"RU\", etc.\r\n\t\t * If no `country` is passed then `value`\r\n\t\t * is formatted as an international phone number.\r\n\t\t * (e.g. `+7 800 555 35 35`)\r\n\t\t * Perhaps the `country` property should have been called `defaultCountry`\r\n\t\t * because if `value` is an international number then `country` is ignored.\r\n\t\t */\r\n\t\tcountry: PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * If `country` property is passed along with `international={true}` property\r\n\t\t * then the phone number will be input in \"international\" format for that `country`\r\n\t\t * (without \"country calling code\").\r\n\t\t * For example, if `country=\"US\"` property is passed to \"without country select\" input\r\n\t\t * then the phone number will be input in the \"national\" format for `US` (`(213) 373-4253`).\r\n\t\t * But if both `country=\"US\"` and `international={true}` properties are passed then\r\n\t\t * the phone number will be input in the \"international\" format for `US` (`213 373 4253`)\r\n\t\t * (without \"country calling code\" `+1`).\r\n\t\t */\r\n\t\tinternational: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * If `country` and `international` properties are set,\r\n\t\t * then by default it won't include \"country calling code\" in the input field.\r\n\t\t * To change that, pass `withCountryCallingCode` property,\r\n\t\t * and it will include \"country calling code\" in the input field.\r\n\t\t */\r\n\t\twithCountryCallingCode: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * `libphonenumber-js` metadata.\r\n\t\t */\r\n\t\tmetadata: PropTypes.object.isRequired\r\n\t}\r\n\r\n\tInputSmart.defaultProps = {\r\n\t\tmetadata: defaultMetadata\r\n\t}\r\n\r\n\treturn InputSmart\r\n}\r\n\r\nexport default createInput()","import React, { useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { parseIncompletePhoneNumber, formatIncompletePhoneNumber } from 'libphonenumber-js/core'\r\n\r\nimport { getInputValuePrefix, removeInputValuePrefix } from './helpers/inputValuePrefix.js'\r\n\r\nexport function createInput(defaultMetadata) {\r\n\t/**\r\n\t * `InputBasic` is the most basic implementation of a `Component`\r\n\t * that can be passed to `<PhoneInput/>`. It parses and formats\r\n\t * the user's input but doesn't control the caret in the process:\r\n\t * when erasing or inserting digits in the middle of a phone number\r\n\t * the caret usually jumps to the end (this is the expected behavior).\r\n\t * Why does `InputBasic` exist when there's `InputSmart`?\r\n\t * One reason is working around the [Samsung Galaxy smart caret positioning bug]\r\n\t * (https://github.com/catamphetamine/react-phone-number-input/issues/75).\r\n\t * Another reason is that, unlike `InputSmart`, it doesn't require DOM environment.\r\n\t */\r\n\tfunction InputBasic({\r\n\t\tvalue,\r\n\t\tonChange,\r\n\t\tcountry,\r\n\t\tinternational,\r\n\t\twithCountryCallingCode,\r\n\t\tmetadata,\r\n\t\tinputComponent: Input,\r\n\t\t...rest\r\n\t}, ref) {\r\n\t\tconst prefix = getInputValuePrefix({\r\n\t\t\tcountry,\r\n\t\t\tinternational,\r\n\t\t\twithCountryCallingCode,\r\n\t\t\tmetadata\r\n\t\t})\r\n\r\n\t\tconst _onChange = useCallback((event) => {\r\n\t\t\tlet newValue = parseIncompletePhoneNumber(event.target.value)\r\n\t\t\t// By default, if a value is something like `\"(123)\"`\r\n\t\t\t// then Backspace would only erase the rightmost brace\r\n\t\t\t// becoming something like `\"(123\"`\r\n\t\t\t// which would give the same `\"123\"` value\r\n\t\t\t// which would then be formatted back to `\"(123)\"`\r\n\t\t\t// and so a user wouldn't be able to erase the phone number.\r\n\t\t\t// Working around this issue with this simple hack.\r\n\t\t\tif (newValue === value) {\r\n\t\t\t\tconst newValueFormatted = format(prefix, newValue, country, metadata)\r\n\t\t\t\tif (newValueFormatted.indexOf(event.target.value) === 0) {\r\n\t\t\t\t\t// Trim the last digit (or plus sign).\r\n\t\t\t\t\tnewValue = newValue.slice(0, -1)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tonChange(newValue)\r\n\t\t}, [\r\n\t\t\tprefix,\r\n\t\t\tvalue,\r\n\t\t\tonChange,\r\n\t\t\tcountry,\r\n\t\t\tmetadata\r\n\t\t])\r\n\r\n\t\treturn (\r\n\t\t\t<Input\r\n\t\t\t\t{...rest}\r\n\t\t\t\tref={ref}\r\n\t\t\t\tvalue={format(prefix, value, country, metadata)}\r\n\t\t\t\tonChange={_onChange}/>\r\n\t\t)\r\n\t}\r\n\r\n\tInputBasic = React.forwardRef(InputBasic)\r\n\r\n\tInputBasic.propTypes = {\r\n\t\t/**\r\n\t\t * The parsed phone number.\r\n\t\t * \"Parsed\" not in a sense of \"E.164\"\r\n\t\t * but rather in a sense of \"having only\r\n\t\t * digits and possibly a leading plus character\".\r\n\t\t * Examples: `\"\"`, `\"+\"`, `\"+123\"`, `\"123\"`.\r\n\t\t */\r\n\t\tvalue: PropTypes.string.isRequired,\r\n\r\n\t\t/**\r\n\t\t * A function of `value: string`.\r\n\t\t * Updates the `value` property.\r\n\t\t */\r\n\t\tonChange: PropTypes.func.isRequired,\r\n\r\n\t\t/**\r\n\t\t * A two-letter country code for formatting `value`\r\n\t\t * as a national phone number (e.g. `(800) 555 35 35`).\r\n\t\t * E.g. \"US\", \"RU\", etc.\r\n\t\t * If no `country` is passed then `value`\r\n\t\t * is formatted as an international phone number.\r\n\t\t * (e.g. `+7 800 555 35 35`)\r\n\t\t * Perhaps the `country` property should have been called `defaultCountry`\r\n\t\t * because if `value` is an international number then `country` is ignored.\r\n\t\t */\r\n\t\tcountry : PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * If `country` property is passed along with `international={true}` property\r\n\t\t * then the phone number will be input in \"international\" format for that `country`\r\n\t\t * (without \"country calling code\").\r\n\t\t * For example, if `country=\"US\"` property is passed to \"without country select\" input\r\n\t\t * then the phone number will be input in the \"national\" format for `US` (`(213) 373-4253`).\r\n\t\t * But if both `country=\"US\"` and `international={true}` properties are passed then\r\n\t\t * the phone number will be input in the \"international\" format for `US` (`213 373 4253`)\r\n\t\t * (without \"country calling code\" `+1`).\r\n\t\t */\r\n\t\tinternational: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * If `country` and `international` properties are set,\r\n\t\t * then by default it won't include \"country calling code\" in the input field.\r\n\t\t * To change that, pass `withCountryCallingCode` property,\r\n\t\t * and it will include \"country calling code\" in the input field.\r\n\t\t */\r\n\t\twithCountryCallingCode: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * `libphonenumber-js` metadata.\r\n\t\t */\r\n\t\tmetadata: PropTypes.object.isRequired,\r\n\r\n\t\t/**\r\n\t\t * The `<input/>` component.\r\n\t\t */\r\n\t\tinputComponent: PropTypes.elementType.isRequired\r\n\t}\r\n\r\n\tInputBasic.defaultProps = {\r\n\t\tmetadata: defaultMetadata,\r\n\t\tinputComponent: 'input'\r\n\t}\r\n\r\n\treturn InputBasic\r\n}\r\n\r\nexport default createInput()\r\n\r\nfunction format(prefix, value, country, metadata) {\r\n\treturn removeInputValuePrefix(\r\n\t\tformatIncompletePhoneNumber(\r\n\t\t\tprefix + value,\r\n\t\t\tcountry,\r\n\t\t\tmetadata\r\n\t\t),\r\n\t\tprefix\r\n\t)\r\n}","import AsYouType from './AsYouType.js'\r\n\r\n/**\r\n * Formats a (possibly incomplete) phone number.\r\n * The phone number can be either in E.164 format\r\n * or in a form of national number digits.\r\n * @param {string} value - A possibly incomplete phone number. Either in E.164 format or in a form of national number digits.\r\n * @param {string?} country - Two-letter (\"ISO 3166-1 alpha-2\") country code.\r\n * @return {string} Formatted (possibly incomplete) phone number.\r\n */\r\nexport default function formatIncompletePhoneNumber(value, country, metadata) {\r\n\tif (!metadata) {\r\n\t\tmetadata = country\r\n\t\tcountry = undefined\r\n\t}\r\n\treturn new AsYouType(country, metadata).input(value)\r\n}","/**\r\n * Creates Unicode flag from a two-letter ISO country code.\r\n * https://stackoverflow.com/questions/24050671/how-to-put-japan-flag-character-in-a-string\r\n * @param  {string} country — A two-letter ISO country code (case-insensitive).\r\n * @return {string}\r\n */\r\nexport default function getCountryFlag(country) {\r\n\treturn getRegionalIndicatorSymbol(country[0]) + getRegionalIndicatorSymbol(country[1])\r\n}\r\n\r\n/**\r\n * Converts a letter to a Regional Indicator Symbol.\r\n * @param  {string} letter\r\n * @return {string}\r\n */\r\nfunction getRegionalIndicatorSymbol(letter) {\r\n\treturn String.fromCodePoint(0x1F1E6 - 65 + letter.toUpperCase().charCodeAt(0))\r\n}","import React, { useCallback, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode'\r\n\r\nexport default function CountrySelect({\r\n\tvalue,\r\n\tonChange,\r\n\toptions,\r\n\t...rest\r\n}) {\r\n\tconst onChange_ = useCallback((event) => {\r\n\t\tconst value = event.target.value\r\n\t\tonChange(value === 'ZZ' ? undefined : value)\r\n\t}, [onChange])\r\n\r\n\tconst selectedOption = useMemo(() => {\r\n\t\treturn getSelectedOption(options, value)\r\n\t}, [options, value])\r\n\r\n\t// \"ZZ\" means \"International\".\r\n\t// (HTML requires each `<option/>` have some string `value`).\r\n\treturn (\r\n\t\t<select\r\n\t\t\t{...rest}\r\n\t\t\tvalue={value || 'ZZ'}\r\n\t\t\tonChange={onChange_}>\r\n\t\t\t{options.map(({ value, label, divider }) => (\r\n\t\t\t\t<option\r\n\t\t\t\t\tkey={divider ? '|' : value || 'ZZ'}\r\n\t\t\t\t\tvalue={divider ? '|' : value || 'ZZ'}\r\n\t\t\t\t\tdisabled={divider ? true : false}\r\n\t\t\t\t\tstyle={divider ? DIVIDER_STYLE : undefined}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</option>\r\n\t\t\t))}\r\n\t\t</select>\r\n\t)\r\n}\r\n\r\nCountrySelect.propTypes = {\r\n\t/**\r\n\t * A two-letter country code.\r\n\t * Example: \"US\", \"RU\", etc.\r\n\t */\r\n\tvalue: PropTypes.string,\r\n\r\n\t/**\r\n\t * A function of `value: string`.\r\n\t * Updates the `value` property.\r\n\t */\r\n\tonChange: PropTypes.func.isRequired,\r\n\r\n\t// `<select/>` options.\r\n\toptions: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tvalue: PropTypes.string,\r\n\t\tlabel: PropTypes.string,\r\n\t\tdivider: PropTypes.bool\r\n\t})).isRequired\r\n}\r\n\r\nconst DIVIDER_STYLE = {\r\n\tfontSize: '1px',\r\n\tbackgroundColor: 'currentColor',\r\n\tcolor: 'inherit'\r\n}\r\n\r\nexport function CountrySelectWithIcon({\r\n\tvalue,\r\n\toptions,\r\n\tclassName,\r\n\ticonComponent: Icon,\r\n\tgetIconAspectRatio,\r\n\tarrowComponent: Arrow,\r\n\tunicodeFlags,\r\n\t...rest\r\n}) {\r\n\tconst selectedOption = useMemo(() => {\r\n\t\treturn getSelectedOption(options, value)\r\n\t}, [options, value])\r\n\r\n\treturn (\r\n\t\t<div className=\"PhoneInputCountry\">\r\n\t\t\t<CountrySelect\r\n\t\t\t\t{...rest}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\toptions={options}\r\n\t\t\t\tclassName={classNames('PhoneInputCountrySelect', className)}/>\r\n\r\n\t\t\t{/* Either a Unicode flag icon. */}\r\n\t\t\t{(unicodeFlags && value) &&\r\n\t\t\t\t<div className=\"PhoneInputCountryIconUnicode\">\r\n\t\t\t\t\t{getUnicodeFlagIcon(value)}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t{/* Or an SVG flag icon. */}\r\n\t\t\t{!(unicodeFlags && value) &&\r\n\t\t\t\t<Icon\r\n\t\t\t\t\taria-hidden\r\n\t\t\t\t\tcountry={value}\r\n\t\t\t\t\tlabel={selectedOption && selectedOption.label}\r\n\t\t\t\t\taspectRatio={unicodeFlags ? 1 : undefined}/>\r\n\t\t\t}\r\n\r\n\t\t\t<Arrow/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCountrySelectWithIcon.propTypes = {\r\n\t// Country flag component.\r\n\ticonComponent: PropTypes.elementType,\r\n\r\n\t// Select arrow component.\r\n\tarrowComponent: PropTypes.elementType.isRequired,\r\n\r\n\t// Set to `true` to render Unicode flag icons instead of SVG images.\r\n\tunicodeFlags: PropTypes.bool\r\n}\r\n\r\nCountrySelectWithIcon.defaultProps = {\r\n\tarrowComponent: () => <div className=\"PhoneInputCountrySelectArrow\"/>\r\n}\r\n\r\nfunction getSelectedOption(options, value) {\r\n\tfor (const option of options) {\r\n\t\tif (!option.divider && option.value === value) {\r\n\t\t\treturn option\r\n\t\t}\r\n\t}\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\n// Default country flag icon.\r\n// `<img/>` is wrapped in a `<div/>` to prevent SVGs from exploding in size in IE 11.\r\n// https://github.com/catamphetamine/react-phone-number-input/issues/111\r\nexport default function FlagComponent({\r\n\tcountry,\r\n\tcountryName,\r\n\tflags,\r\n\tflagUrl,\r\n\t...rest\r\n}) {\r\n\tif (flags && flags[country]) {\r\n\t\treturn flags[country]({ title: countryName })\r\n\t}\r\n\treturn (\r\n\t\t<img\r\n\t\t\t{...rest}\r\n\t\t\talt={countryName}\r\n\t\t\trole={countryName ? undefined : \"presentation\"}\r\n\t\t\tsrc={flagUrl.replace('{XX}', country).replace('{xx}', country.toLowerCase())}/>\r\n\t)\r\n}\r\n\r\nFlagComponent.propTypes = {\r\n\t// The country to be selected by default.\r\n\t// Two-letter country code (\"ISO 3166-1 alpha-2\").\r\n\tcountry: PropTypes.string.isRequired,\r\n\r\n\t// Will be HTML `title` attribute of the `<img/>`.\r\n\tcountryName: PropTypes.string.isRequired,\r\n\r\n\t// Country flag icon components.\r\n\t// By default flag icons are inserted as `<img/>`s\r\n\t// with their `src` pointed to `country-flag-icons` gitlab pages website.\r\n\t// There might be cases (e.g. an offline application)\r\n\t// where having a large (3 megabyte) `<svg/>` flags\r\n\t// bundle is more appropriate.\r\n\t// `import flags from 'react-phone-number-input/flags'`.\r\n\tflags: PropTypes.objectOf(PropTypes.elementType),\r\n\r\n\t// A URL for a country flag icon.\r\n\t// By default it points to `country-flag-icons` gitlab pages website.\r\n\tflagUrl: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function InternationalIcon({ aspectRatio, ...rest }) {\r\n\tif (aspectRatio === 1) {\r\n\t\treturn <InternationalIcon1x1 {...rest}/>\r\n\t} else {\r\n\t\treturn <InternationalIcon3x2 {...rest}/>\r\n\t}\r\n}\r\n\r\nInternationalIcon.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\taspectRatio: PropTypes.number\r\n}\r\n\r\n// 3x2.\r\n// Using `<title/>` in `<svg/>`s:\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title\r\nfunction InternationalIcon3x2({ title, ...rest }) {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\t{...rest}\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\tviewBox=\"0 0 75 50\">\r\n\t\t\t<title>{title}</title>\r\n\t\t\t<g\r\n\t\t\t\tclassName=\"PhoneInputInternationalIconGlobe\"\r\n\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\tstrokeMiterlimit=\"10\">\r\n\t\t\t\t<path strokeLinecap=\"round\" d=\"M47.2,36.1C48.1,36,49,36,50,36c7.4,0,14,1.7,18.5,4.3\"/>\r\n\t\t\t\t<path d=\"M68.6,9.6C64.2,12.3,57.5,14,50,14c-7.4,0-14-1.7-18.5-4.3\"/>\r\n\t\t\t\t<line x1=\"26\" y1=\"25\" x2=\"74\" y2=\"25\"/>\r\n\t\t\t\t<line x1=\"50\" y1=\"1\" x2=\"50\" y2=\"49\"/>\r\n\t\t\t\t<path strokeLinecap=\"round\" d=\"M46.3,48.7c1.2,0.2,2.5,0.3,3.7,0.3c13.3,0,24-10.7,24-24S63.3,1,50,1S26,11.7,26,25c0,2,0.3,3.9,0.7,5.8\"/>\r\n\t\t\t\t<path strokeLinecap=\"round\" d=\"M46.8,48.2c1,0.6,2.1,0.8,3.2,0.8c6.6,0,12-10.7,12-24S56.6,1,50,1S38,11.7,38,25c0,1.4,0.1,2.7,0.2,4c0,0.1,0,0.2,0,0.2\"/>\r\n\t\t\t</g>\r\n\t\t\t<path\r\n\t\t\t\tclassName=\"PhoneInputInternationalIconPhone\"\r\n\t\t\t\tstroke=\"none\"\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M12.4,17.9c2.9-2.9,5.4-4.8,0.3-11.2S4.1,5.2,1.3,8.1C-2,11.4,1.1,23.5,13.1,35.6s24.3,15.2,27.5,11.9c2.8-2.8,7.8-6.3,1.4-11.5s-8.3-2.6-11.2,0.3c-2,2-7.2-2.2-11.7-6.7S10.4,19.9,12.4,17.9z\"/>\r\n\t\t</svg>\r\n\t)\r\n}\r\n\r\nInternationalIcon3x2.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n}\r\n\r\n// 1x1.\r\n// Using `<title/>` in `<svg/>`s:\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title\r\nfunction InternationalIcon1x1({ title, ...rest }) {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\t{...rest}\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\tviewBox=\"0 0 50 50\">\r\n\t\t\t<title>{title}</title>\r\n\t\t\t<g\r\n\t\t\t\tclassName=\"PhoneInputInternationalIconGlobe\"\r\n\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tstrokeWidth=\"2\"\r\n\t\t\t\tstrokeLinecap=\"round\">\r\n\t\t\t\t<path d=\"M8.45,13A21.44,21.44,0,1,1,37.08,41.56\"/>\r\n\t\t\t\t<path d=\"M19.36,35.47a36.9,36.9,0,0,1-2.28-13.24C17.08,10.39,21.88.85,27.8.85s10.72,9.54,10.72,21.38c0,6.48-1.44,12.28-3.71,16.21\"/>\r\n\t\t\t\t<path d=\"M17.41,33.4A39,39,0,0,1,27.8,32.06c6.62,0,12.55,1.5,16.48,3.86\"/>\r\n\t\t\t\t<path d=\"M44.29,8.53c-3.93,2.37-9.86,3.88-16.49,3.88S15.25,10.9,11.31,8.54\"/>\r\n\t\t\t\t<line x1=\"27.8\" y1=\"0.85\" x2=\"27.8\" y2=\"34.61\"/>\r\n\t\t\t\t<line x1=\"15.2\" y1=\"22.23\" x2=\"49.15\" y2=\"22.23\"/>\r\n\t\t\t</g>\r\n\t\t\t<path\r\n\t\t\t\tclassName=\"PhoneInputInternationalIconPhone\"\r\n\t\t\t\tstroke=\"transparent\"\r\n\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\td=\"M9.42,26.64c2.22-2.22,4.15-3.59.22-8.49S3.08,17,.93,19.17c-2.49,2.48-.13,11.74,9,20.89s18.41,11.5,20.89,9c2.15-2.15,5.91-4.77,1-8.71s-6.27-2-8.49.22c-1.55,1.55-5.48-1.69-8.86-5.08S7.87,28.19,9.42,26.64Z\"/>\r\n\t\t</svg>\r\n\t)\r\n}\r\n\r\nInternationalIcon1x1.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n}\r\n","import { isSupportedCountry } from 'libphonenumber-js/core'\r\nexport { getCountries } from 'libphonenumber-js/core'\r\n\r\n/**\r\n * Sorts country `<select/>` options.\r\n * Can move some country `<select/>` options\r\n * to the top of the list, for example.\r\n * @param  {object[]} countryOptions — Country `<select/>` options.\r\n * @param  {string[]} [countryOptionsOrder] — Country `<select/>` options order. Example: `[\"US\", \"CA\", \"AU\", \"|\", \"...\"]`.\r\n * @return {object[]}\r\n */\r\nexport function sortCountryOptions(options, order) {\r\n\tif (!order) {\r\n\t\treturn options\r\n\t}\r\n\tconst optionsOnTop = []\r\n\tconst optionsOnBottom = []\r\n\tlet appendTo = optionsOnTop\r\n\tfor (const element of order) {\r\n\t\tif (element === '|') {\r\n\t\t\tappendTo.push({ divider: true })\r\n\t\t} else if (element === '...' || element === '…') {\r\n\t\t\tappendTo = optionsOnBottom\r\n\t\t} else {\r\n\t\t\tlet countryCode\r\n\t\t\tif (element === '🌐') {\r\n\t\t\t\tcountryCode = undefined\r\n\t\t\t} else {\r\n\t\t\t\tcountryCode = element\r\n\t\t\t}\r\n\t\t\t// Find the position of the option.\r\n\t\t\tconst index = options.indexOf(options.filter(option => option.value === countryCode)[0])\r\n\t\t\t// Get the option.\r\n\t\t\tconst option = options[index]\r\n\t\t\t// Remove the option from its default position.\r\n\t\t\toptions.splice(index, 1)\r\n\t\t\t// Add the option on top.\r\n\t\t\tappendTo.push(option)\r\n\t\t}\r\n\t}\r\n\treturn optionsOnTop.concat(options).concat(optionsOnBottom)\r\n}\r\n\r\nexport function getSupportedCountryOptions(countryOptions, metadata) {\r\n\tif (countryOptions) {\r\n\t\tcountryOptions = countryOptions.filter((option) => {\r\n\t\t\tswitch (option) {\r\n\t\t\t\tcase '🌐':\r\n\t\t\t\tcase '|':\r\n\t\t\t\tcase '...':\r\n\t\t\t\tcase '…':\r\n\t\t\t\t\treturn true\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn isCountrySupportedWithError(option, metadata)\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (countryOptions.length > 0) {\r\n\t\t\treturn countryOptions\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isCountrySupportedWithError(country, metadata) {\r\n\tif (isSupportedCountry(country, metadata)) {\r\n\t\treturn true\r\n\t} else {\r\n\t\tconsole.error(`Country not found: ${country}`)\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nexport function getSupportedCountries(countries, metadata) {\r\n\tif (countries) {\r\n\t\tcountries = countries.filter(country => isCountrySupportedWithError(country, metadata))\r\n\t\tif (countries.length === 0) {\r\n\t\t\tcountries = undefined\r\n\t\t}\r\n\t}\r\n\treturn countries\r\n}","import Metadata from './metadata.js'\r\n\r\nexport default function getCountries(metadata) {\r\n\treturn new Metadata(metadata).getCountries()\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport DefaultInternationalIcon from './InternationalIcon.js'\r\nimport Flag from './Flag.js'\r\n\r\nexport function createCountryIconComponent({\r\n\tflags,\r\n\tflagUrl,\r\n\tflagComponent: FlagComponent,\r\n\tinternationalIcon: InternationalIcon\r\n}) {\r\n\tfunction CountryIcon({\r\n\t\tcountry,\r\n\t\tlabel,\r\n\t\taspectRatio,\r\n\t\t...rest\r\n\t}) {\r\n\t\t// `aspectRatio` is currently a hack for the default \"International\" icon\r\n\t\t// to render it as a square when Unicode flag icons are used.\r\n\t\t// So `aspectRatio` property is only used with the default \"International\" icon.\r\n\t\tconst _aspectRatio = InternationalIcon === DefaultInternationalIcon ? aspectRatio : undefined\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\t{...rest}\r\n\t\t\t\tclassName={classNames('PhoneInputCountryIcon', {\r\n\t\t\t\t\t'PhoneInputCountryIcon--square': _aspectRatio === 1,\r\n\t\t\t\t\t'PhoneInputCountryIcon--border': country\r\n\t\t\t\t})}>\r\n\t\t\t\t{\r\n\t\t\t\t\tcountry\r\n\t\t\t\t\t?\r\n\t\t\t\t\t<FlagComponent\r\n\t\t\t\t\t\tcountry={country}\r\n\t\t\t\t\t\tcountryName={label}\r\n\t\t\t\t\t\tflags={flags}\r\n\t\t\t\t\t\tflagUrl={flagUrl}\r\n\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<InternationalIcon\r\n\t\t\t\t\t\ttitle={label}\r\n\t\t\t\t\t\taspectRatio={_aspectRatio}\r\n\t\t\t\t\t\tclassName=\"PhoneInputCountryIconImg\"/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tCountryIcon.propTypes = {\r\n\t\tcountry: PropTypes.string,\r\n\t\tlabel: PropTypes.string.isRequired,\r\n\t\taspectRatio: PropTypes.number\r\n\t}\r\n\r\n\treturn CountryIcon\r\n}\r\n\r\nexport default createCountryIconComponent({\r\n\t// Must be equal to `defaultProps.flagUrl` in `./PhoneInputWithCountry.js`.\r\n\tflagUrl: 'https://purecatamphetamine.github.io/country-flag-icons/3x2/{XX}.svg',\r\n\tflagComponent: Flag,\r\n\tinternationalIcon: DefaultInternationalIcon\r\n})","import parsePhoneNumber_ from './parsePhoneNumber_.js'\r\n\r\nexport default function parsePhoneNumber() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn parsePhoneNumber_(text, options, metadata)\r\n}\r\n\r\nexport function normalizeArguments(args)\r\n{\r\n\tconst [arg_1, arg_2, arg_3, arg_4] = Array.prototype.slice.call(args)\r\n\r\n\tlet text\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `parsePhoneNumber('88005553535', ...)`.\r\n\tif (typeof arg_1 === 'string') {\r\n\t\ttext = arg_1\r\n\t}\r\n\telse throw new TypeError('A text for parsing must be a string.')\r\n\r\n\t// If \"default country\" argument is being passed then move it to `options`.\r\n\t// `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\r\n\tif (!arg_2 || typeof arg_2 === 'string')\r\n\t{\r\n\t\tif (arg_4) {\r\n\t\t\toptions = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t} else {\r\n\t\t\toptions = undefined\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\r\n\t\tif (arg_2) {\r\n\t\t\toptions = { defaultCountry: arg_2, ...options }\r\n\t\t}\r\n\t}\r\n\t// `defaultCountry` is not passed.\r\n\t// Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\r\n\telse if (isObject(arg_2))\r\n\t{\r\n\t\tif (arg_3) {\r\n\t\t\toptions  = arg_2\r\n\t\t\tmetadata = arg_3\r\n\t\t} else {\r\n\t\t\tmetadata = arg_2\r\n\t\t}\r\n\t}\r\n\telse throw new Error(`Invalid second argument: ${arg_2}`)\r\n\r\n\treturn {\r\n\t\ttext,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Otherwise istanbul would show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst isObject = _ => typeof _ === 'object'","// https://stackoverflow.com/a/46971044/970769\r\n// \"Breaking changes in Typescript 2.1\"\r\n// \"Extending built-ins like Error, Array, and Map may no longer work.\"\r\n// \"As a recommendation, you can manually adjust the prototype immediately after any super(...) calls.\"\r\n// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\nexport default class ParseError extends Error {\r\n  constructor(code) {\r\n    super(code)\r\n    // Set the prototype explicitly.\r\n    // Any subclass of FooError will have to manually set the prototype as well.\r\n    Object.setPrototypeOf(this, ParseError.prototype)\r\n    this.name = this.constructor.name\r\n  }\r\n}","import createExtensionPattern from './createExtensionPattern.js'\r\n\r\n// Regexp of all known extension prefixes used by different regions followed by\r\n// 1 or more valid digits, for use when parsing.\r\nconst EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i')\r\n\r\n// Strips any extension (as in, the part of the number dialled after the call is\r\n// connected, usually indicated with extn, ext, x or similar) from the end of\r\n// the number, and returns it.\r\nexport default function extractExtension(number) {\r\n\tconst start = number.search(EXTN_PATTERN)\r\n\tif (start < 0) {\r\n\t\treturn {}\r\n\t}\r\n\t// If we find a potential extension, and the number preceding this is a viable\r\n\t// number, we assume it is an extension.\r\n\tconst numberWithoutExtension = number.slice(0, start)\r\n\tconst matches = number.match(EXTN_PATTERN)\r\n\tlet i = 1\r\n\twhile (i < matches.length) {\r\n\t\tif (matches[i]) {\r\n\t\t\treturn {\r\n\t\t\t\tnumber: numberWithoutExtension,\r\n\t\t\t\text: matches[i]\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}","// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport {\r\n\tVALID_DIGITS,\r\n\tPLUS_CHARS,\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tMAX_LENGTH_FOR_NSN\r\n} from './constants.js'\r\n\r\nimport ParseError from './ParseError.js'\r\nimport Metadata from './metadata.js'\r\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber.js'\r\nimport extractExtension from './helpers/extension/extractExtension.js'\r\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber.js'\r\nimport getCountryCallingCode from './getCountryCallingCode.js'\r\nimport { isPossibleNumber } from './isPossibleNumber_.js'\r\nimport { parseRFC3966 } from './helpers/RFC3966.js'\r\nimport PhoneNumber from './PhoneNumber.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js'\r\nimport extractNationalNumber from './helpers/extractNationalNumber.js'\r\nimport stripIddPrefix from './helpers/stripIddPrefix.js'\r\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js'\r\n\r\n// We don't allow input strings for parsing to be longer than 250 chars.\r\n// This prevents malicious input from consuming CPU.\r\nconst MAX_INPUT_STRING_LENGTH = 250\r\n\r\n// This consists of the plus symbol, digits, and arabic-indic digits.\r\nconst PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']')\r\n\r\n// Regular expression of trailing characters that we want to remove.\r\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\r\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\r\nconst AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$')\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\n// Examples:\r\n//\r\n// ```js\r\n// parse('8 (800) 555-35-35', 'RU')\r\n// parse('8 (800) 555-35-35', 'RU', metadata)\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\r\n// parse('+7 800 555 35 35')\r\n// parse('+7 800 555 35 35', metadata)\r\n// ```\r\n//\r\nexport default function parse(text, options, metadata) {\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// Validate `defaultCountry`.\r\n\tif (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\tthrow new Error(`Unknown country: ${options.defaultCountry}`)\r\n\t}\r\n\r\n\t// Parse the phone number.\r\n\tconst { number: formattedPhoneNumber, ext, error } = parseInput(text, options.v2, options.extract)\r\n\r\n\t// If the phone number is not viable then return nothing.\r\n\tif (!formattedPhoneNumber) {\r\n\t\tif (options.v2) {\r\n\t\t\tif (error === 'TOO_SHORT') {\r\n\t\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t\t}\r\n\t\t\tthrow new ParseError('NOT_A_NUMBER')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst {\r\n\t\tcountry,\r\n\t\tnationalNumber,\r\n\t\tcountryCallingCode,\r\n\t\tcarrierCode\r\n\t} = parsePhoneNumber(\r\n\t\tformattedPhoneNumber,\r\n\t\toptions.defaultCountry,\r\n\t\toptions.defaultCallingCode,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (!metadata.hasSelectedNumberingPlan()) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\tif (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\r\n\t\t// Won't throw here because the regexp already demands length > 1.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\t//\r\n\t// A sidenote:\r\n\t//\r\n\t// They say that sometimes national (significant) numbers\r\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\r\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\r\n\t// Such numbers will just be discarded.\r\n\t//\r\n\tif (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\tif (options.v2) {\r\n\t\tconst phoneNumber = new PhoneNumber(\r\n\t\t\tcountryCallingCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tmetadata.metadata\r\n\t\t)\r\n\t\tif (country) {\r\n\t\t\tphoneNumber.country = country\r\n\t\t}\r\n\t\tif (carrierCode) {\r\n\t\t\tphoneNumber.carrierCode = carrierCode\r\n\t\t}\r\n\t\tif (ext) {\r\n\t\t\tphoneNumber.ext = ext\r\n\t\t}\r\n\t\treturn phoneNumber\r\n\t}\r\n\r\n\t// Check if national phone number pattern matches the number.\r\n\t// National number pattern is different for each country,\r\n\t// even for those ones which are part of the \"NANPA\" group.\r\n\tconst valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ?\r\n\t\tmatchesEntirely(nationalNumber, metadata.nationalNumberPattern()) :\r\n\t\tfalse\r\n\r\n\tif (!options.extended) {\r\n\t\treturn valid ? result(country, nationalNumber, ext) : {}\r\n\t}\r\n\r\n\t// isInternational: countryCallingCode !== undefined\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tcarrierCode,\r\n\t\tvalid,\r\n\t\tpossible: valid ? true : (\r\n\t\t\toptions.extended === true &&\r\n\t\t\tmetadata.possibleLengths() &&\r\n\t\t\tisPossibleNumber(nationalNumber, metadata) ? true : false\r\n\t\t),\r\n\t\tphone: nationalNumber,\r\n\t\text\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\r\nfunction extractFormattedPhoneNumber(text, extract, throwOnError) {\r\n\tif (!text) {\r\n\t\treturn\r\n\t}\r\n\tif (text.length > MAX_INPUT_STRING_LENGTH) {\r\n\t\tif (throwOnError) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tif (extract === false) {\r\n\t\treturn text\r\n\t}\r\n\t// Attempt to extract a possible number from the string passed in\r\n\tconst startsAt = text.search(PHONE_NUMBER_START_PATTERN)\r\n\tif (startsAt < 0) {\r\n\t\treturn\r\n\t}\r\n\treturn text\r\n\t\t// Trim everything to the left of the phone number\r\n\t\t.slice(startsAt)\r\n\t\t// Remove trailing non-numerical characters\r\n\t\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '')\r\n}\r\n\r\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nfunction parseInput(text, v2, extract) {\r\n\t// Parse RFC 3966 phone number URI.\r\n\tif (text && text.indexOf('tel:') === 0) {\r\n\t\treturn parseRFC3966(text)\r\n\t}\r\n\tlet number = extractFormattedPhoneNumber(text, extract, v2)\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\tif (isViablePhoneNumberStart(number)) {\r\n\t\t\treturn { error: 'TOO_SHORT' }\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\t// Attempt to parse extension first, since it doesn't require region-specific\r\n\t// data and we want to have the non-normalised number here.\r\n\tconst withExtensionStripped = extractExtension(number)\r\n\tif (withExtensionStripped.ext) {\r\n\t\treturn withExtensionStripped\r\n\t}\r\n\treturn { number }\r\n}\r\n\r\n/**\r\n * Creates `parse()` result object.\r\n */\r\nfunction result(country, nationalNumber, ext) {\r\n\tconst result = {\r\n\t\tcountry,\r\n\t\tphone: nationalNumber\r\n\t}\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\r\nfunction parsePhoneNumber(\r\n\tformattedPhoneNumber,\r\n\tdefaultCountry,\r\n\tdefaultCallingCode,\r\n\tmetadata\r\n) {\r\n\t// Extract calling code from phone number.\r\n\tlet { countryCallingCode, number } = extractCountryCallingCode(\r\n\t\tparseIncompletePhoneNumber(formattedPhoneNumber),\r\n\t\tdefaultCountry,\r\n\t\tdefaultCallingCode,\r\n\t\tmetadata.metadata\r\n\t)\r\n\r\n\t// Choose a country by `countryCallingCode`.\r\n\tlet country\r\n\tif (countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t}\r\n\t// If `formattedPhoneNumber` is in \"national\" format\r\n\t// then `number` is defined and `countryCallingCode` isn't.\r\n\telse if (number && (defaultCountry || defaultCallingCode)) {\r\n\t\tmetadata.selectNumberingPlan(defaultCountry, defaultCallingCode)\r\n\t\tif (defaultCountry) {\r\n\t\t\tcountry = defaultCountry\r\n\t\t} else {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\r\n\t\t\t\t\tcountry = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcountryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata)\r\n\t}\r\n\telse return {}\r\n\r\n\tif (!number) {\r\n\t\treturn { countryCallingCode }\r\n\t}\r\n\r\n\tconst {\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t} = extractNationalNumber(\r\n\t\tparseIncompletePhoneNumber(number),\r\n\t\tmetadata\r\n\t)\r\n\r\n\t// Sometimes there are several countries\r\n\t// corresponding to the same country phone code\r\n\t// (e.g. NANPA countries all having `1` country phone code).\r\n\t// Therefore, to reliably determine the exact country,\r\n\t// national (significant) number should have been parsed first.\r\n\t//\r\n\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\r\n\t// get their countries populated with the full set of\r\n\t// \"phone number type\" regular expressions.\r\n\t//\r\n\tconst exactCountry = getCountryByCallingCode(countryCallingCode, nationalNumber, metadata)\r\n\tif (exactCountry) {\r\n\t\tcountry = exactCountry\r\n\t\t/* istanbul ignore if */\r\n\t\tif (exactCountry === '001') {\r\n\t\t\t// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\r\n\t\t\t// If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\r\n\t\t\t// then remove the \"istanbul ignore if\".\r\n\t\t} else {\r\n\t\t\tmetadata.country(country)\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t}\r\n}","import parseNumber from './parse_.js'\r\n\r\nexport default function parsePhoneNumber(text, options, metadata) {\r\n\treturn parseNumber(text, { ...options, v2: true }, metadata)\r\n}","import parsePhoneNumber from './parsePhoneNumber_.js'\r\nimport ParseError from './ParseError.js'\r\nimport { isSupportedCountry } from './metadata.js'\r\n\r\nexport default function parsePhoneNumberFromString(text, options, metadata) {\r\n\t// Validate `defaultCountry`.\r\n\tif (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\r\n\t\toptions = {\r\n\t\t\t...options,\r\n\t\t\tdefaultCountry: undefined\r\n\t\t}\r\n\t}\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\treturn parsePhoneNumber(text, options, metadata)\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}\r\n","import {\r\n\tgetCountryCallingCode,\r\n\tMetadata\r\n} from 'libphonenumber-js/core'\r\n\r\nconst ONLY_DIGITS_REGEXP = /^\\d+$/\r\nexport default function getInternationalPhoneNumberPrefix(country, metadata) {\r\n\t// Standard international phone number prefix: \"+\" and \"country calling code\".\r\n\tlet prefix = '+' + getCountryCallingCode(country, metadata)\r\n\t// Get \"leading digits\" for a phone number of the country.\r\n\t// If there're \"leading digits\" then they can be part of the prefix too.\r\n\tmetadata = new Metadata(metadata)\r\n\tmetadata.selectNumberingPlan(country)\r\n\tif (metadata.numberingPlan.leadingDigits() && ONLY_DIGITS_REGEXP.test(metadata.numberingPlan.leadingDigits())) {\r\n\t\tprefix += metadata.numberingPlan.leadingDigits()\r\n\t}\r\n\treturn prefix\r\n}","import parsePhoneNumber_, {\r\n\tgetCountryCallingCode,\r\n\tAsYouType,\r\n\tMetadata\r\n} from 'libphonenumber-js/core'\r\n\r\nimport getInternationalPhoneNumberPrefix from './getInternationalPhoneNumberPrefix.js'\r\n\r\n/**\r\n * Decides which country should be pre-selected\r\n * when the phone number input component is first mounted.\r\n * @param  {object?} phoneNumber - An instance of `PhoneNumber` class.\r\n * @param  {string?} country - Pre-defined country (two-letter code).\r\n * @param  {string[]?} countries - A list of countries available.\r\n * @param  {object} metadata - `libphonenumber-js` metadata\r\n * @return {string?}\r\n */\r\nexport function getPreSelectedCountry({\r\n\tvalue,\r\n\tphoneNumber,\r\n\tdefaultCountry,\r\n\tgetAnyCountry,\r\n\tcountries,\r\n\trequired,\r\n\tmetadata\r\n}) {\r\n\tlet country\r\n\r\n\t// If can get country from E.164 phone number\r\n\t// then it overrides the `country` passed (or not passed).\r\n\tif (phoneNumber && phoneNumber.country) {\r\n\t\t// `country` will be left `undefined` in case of non-detection.\r\n\t\tcountry = phoneNumber.country\r\n\t} else if (defaultCountry) {\r\n\t\tif (!value || couldNumberBelongToCountry(value, defaultCountry, metadata)) {\r\n\t\t\tcountry = defaultCountry\r\n\t\t}\r\n\t}\r\n\r\n\t// Only pre-select a country if it's in the available `countries` list.\r\n\tif (countries && countries.indexOf(country) < 0) {\r\n\t\tcountry = undefined\r\n\t}\r\n\r\n\t// If there will be no \"International\" option\r\n\t// then some `country` must be selected.\r\n\t// It will still be the wrong country though.\r\n\t// But still country `<select/>` can't be left in a broken state.\r\n\tif (!country && required && countries && countries.length > 0) {\r\n\t\tcountry = getAnyCountry()\r\n\t\t// noCountryMatchesTheNumber = true\r\n\t}\r\n\r\n\treturn country\r\n}\r\n\r\n/**\r\n * Generates a sorted list of country `<select/>` options.\r\n * @param  {string[]} countries - A list of two-letter (\"ISO 3166-1 alpha-2\") country codes.\r\n * @param  {object} labels - Custom country labels. E.g. `{ RU: 'Россия', US: 'США', ... }`.\r\n * @param  {boolean} addInternationalOption - Whether should include \"International\" option at the top of the list.\r\n * @return {object[]} A list of objects having shape `{ value : string, label : string }`.\r\n */\r\nexport function getCountrySelectOptions({\r\n\tcountries,\r\n\tcountryNames,\r\n\taddInternationalOption,\r\n\t// `locales` are only used in country name comparator:\r\n\t// depending on locale, string sorting order could be different.\r\n\tcompareStringsLocales,\r\n\tcompareStrings: _compareStrings\r\n}) {\r\n\t// Default country name comparator uses `String.localeCompare()`.\r\n\tif (!_compareStrings) {\r\n\t\t_compareStrings = compareStrings\r\n\t}\r\n\r\n\t// Generates a `<Select/>` option for each country.\r\n\tconst countrySelectOptions = countries.map((country) => ({\r\n\t\tvalue: country,\r\n\t\t// All `locale` country names included in this library\r\n\t\t// include all countries (this is checked at build time).\r\n\t\t// The only case when a country name might be missing\r\n\t\t// is when a developer supplies their own `labels` property.\r\n\t\t// To guard against such cases, a missing country name\r\n\t\t// is substituted by country code.\r\n\t\tlabel: countryNames[country] || country\r\n\t}))\r\n\r\n\t// Sort the list of countries alphabetically.\r\n\tcountrySelectOptions.sort((a, b) => _compareStrings(a.label, b.label, compareStringsLocales))\r\n\r\n\t// Add the \"International\" option to the country list (if suitable)\r\n\tif (addInternationalOption) {\r\n\t\tcountrySelectOptions.unshift({\r\n\t\t\tlabel: countryNames.ZZ\r\n\t\t})\r\n\t}\r\n\r\n\treturn countrySelectOptions\r\n}\r\n\r\n/**\r\n * Parses a E.164 phone number to an instance of `PhoneNumber` class.\r\n * @param {string?} value = E.164 phone number.\r\n * @param  {object} metadata - `libphonenumber-js` metadata\r\n * @return {object} Object having shape `{ country: string?, countryCallingCode: string, number: string }`. `PhoneNumber`: https://gitlab.com/catamphetamine/libphonenumber-js#phonenumber.\r\n * @example\r\n * parsePhoneNumber('+78005553535')\r\n */\r\nexport function parsePhoneNumber(value, metadata) {\r\n\treturn parsePhoneNumber_(value || '', metadata)\r\n}\r\n\r\n/**\r\n * Generates national number digits for a parsed phone.\r\n * May prepend national prefix.\r\n * The phone number must be a complete and valid phone number.\r\n * @param  {object} phoneNumber - An instance of `PhoneNumber` class.\r\n * @param  {object} metadata - `libphonenumber-js` metadata\r\n * @return {string}\r\n * @example\r\n * getNationalNumberDigits({ country: 'RU', phone: '8005553535' })\r\n * // returns '88005553535'\r\n */\r\nexport function generateNationalNumberDigits(phoneNumber) {\r\n\treturn phoneNumber.formatNational().replace(/\\D/g, '')\r\n}\r\n\r\n/**\r\n * Migrates parsed `<input/>` `value` for the newly selected `country`.\r\n * @param {string?} phoneDigits - Phone number digits (and `+`) parsed from phone number `<input/>` (it's not the same as the `value` property).\r\n * @param {string?} prevCountry - Previously selected country.\r\n * @param {string?} newCountry - Newly selected country. Can't be same as previously selected country.\r\n * @param {object} metadata - `libphonenumber-js` metadata.\r\n * @param {boolean} useNationalFormat - whether should attempt to convert from international to national number for the new country.\r\n * @return {string?}\r\n */\r\nexport function getPhoneDigitsForNewCountry(phoneDigits, {\r\n\tprevCountry,\r\n\tnewCountry,\r\n\tmetadata,\r\n\tuseNationalFormat\r\n}) {\r\n\tif (prevCountry === newCountry) {\r\n\t\treturn phoneDigits\r\n\t}\r\n\r\n\t// If `parsed_input` is empty\r\n\t// then no need to migrate anything.\r\n\tif (!phoneDigits) {\r\n\t\tif (useNationalFormat) {\r\n\t\t\treturn ''\r\n\t\t} else {\r\n\t\t\t// If `phoneDigits` is empty then set `phoneDigits` to\r\n\t\t\t// `+{getCountryCallingCode(newCountry)}`.\r\n\t\t\treturn getInternationalPhoneNumberPrefix(newCountry, metadata)\r\n\t\t}\r\n\t}\r\n\r\n\t// If switching to some country.\r\n\t// (from \"International\" or another country)\r\n\t// If switching from \"International\" then `phoneDigits` starts with a `+`.\r\n\t// Otherwise it may or may not start with a `+`.\r\n\tif (newCountry) {\r\n\t\t// If the phone number was entered in international format\r\n\t\t// then migrate it to the newly selected country.\r\n\t\t// The phone number may be incomplete.\r\n\t\t// The phone number entered not necessarily starts with\r\n\t\t// the previously selected country phone prefix.\r\n\t\tif (phoneDigits[0] === '+') {\r\n\t\t\t// If the international phone number is for the new country\r\n\t\t\t// then convert it to local if required.\r\n\t\t\tif (useNationalFormat) {\r\n\t\t\t\t// // If a phone number is being input in international form\r\n\t\t\t\t// // and the country can already be derived from it,\r\n\t\t\t\t// // and if it is the new country, then format as a national number.\r\n\t\t\t\t// const derived_country = getCountryFromPossiblyIncompleteInternationalPhoneNumber(phoneDigits, metadata)\r\n\t\t\t\t// if (derived_country === newCountry) {\r\n\t\t\t\t// \treturn stripCountryCallingCode(phoneDigits, derived_country, metadata)\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// Actually, the two countries don't necessarily need to match:\r\n\t\t\t\t// the condition could be looser here, because several countries\r\n\t\t\t\t// might share the same international phone number format\r\n\t\t\t\t// (for example, \"NANPA\" countries like US, Canada, etc).\r\n\t\t\t\t// The looser condition would be just \"same nternational phone number format\"\r\n\t\t\t\t// which would mean \"same country calling code\" in the context of `libphonenumber-js`.\r\n\t\t\t\tif (phoneDigits.indexOf('+' + getCountryCallingCode(newCountry, metadata)) === 0) {\r\n\t\t\t\t\treturn stripCountryCallingCode(phoneDigits, newCountry, metadata)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Simply discard the previously entered international phone number,\r\n\t\t\t\t// because otherwise any \"smart\" transformation like getting the\r\n\t\t\t\t// \"national (significant) number\" part and then prepending the\r\n\t\t\t\t// newly selected country's \"country calling code\" to it\r\n\t\t\t\t// would just be confusing for a user without being actually useful.\r\n\t\t\t\treturn ''\r\n\r\n\t\t\t\t// // Simply strip the leading `+` character\r\n\t\t\t\t// // therefore simply converting all digits into a \"local\" phone number.\r\n\t\t\t\t// // https://github.com/catamphetamine/react-phone-number-input/issues/287\r\n\t\t\t\t// return phoneDigits.slice(1)\r\n\t\t\t}\r\n\r\n\t\t\tif (prevCountry) {\r\n\t\t\t\tconst newCountryPrefix = getInternationalPhoneNumberPrefix(newCountry, metadata)\r\n\t\t\t\tif (phoneDigits.indexOf(newCountryPrefix) === 0) {\r\n\t\t\t\t\treturn phoneDigits\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn newCountryPrefix\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst defaultValue = getInternationalPhoneNumberPrefix(newCountry, metadata)\r\n\t\t\t\t// If `phoneDigits`'s country calling code part is the same\r\n\t\t\t\t// as for the new `country`, then leave `phoneDigits` as is.\r\n\t\t\t\tif (phoneDigits.indexOf(defaultValue) === 0) {\r\n\t\t\t\t\treturn phoneDigits\r\n\t\t\t\t}\r\n\t\t\t\t// If `phoneDigits`'s country calling code part is not the same\r\n\t\t\t\t// as for the new `country`, then set `phoneDigits` to\r\n\t\t\t\t// `+{getCountryCallingCode(newCountry)}`.\r\n\t\t\t\treturn defaultValue\r\n\t\t\t}\r\n\r\n\t\t\t// // If the international phone number already contains\r\n\t\t\t// // any country calling code then trim the country calling code part.\r\n\t\t\t// // (that could also be the newly selected country phone code prefix as well)\r\n\t\t\t// // `phoneDigits` doesn't neccessarily belong to `prevCountry`.\r\n\t\t\t// // (e.g. if a user enters an international number\r\n\t\t\t// //  not belonging to any of the reduced `countries` list).\r\n\t\t\t// phoneDigits = stripCountryCallingCode(phoneDigits, prevCountry, metadata)\r\n\r\n\t\t\t// // Prepend country calling code prefix\r\n\t\t\t// // for the newly selected country.\r\n\t\t\t// return e164(phoneDigits, newCountry, metadata) || `+${getCountryCallingCode(newCountry, metadata)}`\r\n\t\t}\r\n\t}\r\n\t// If switching to \"International\" from a country.\r\n\telse {\r\n\t\t// If the phone number was entered in national format.\r\n\t\tif (phoneDigits[0] !== '+') {\r\n\t\t\t// Format the national phone number as an international one.\r\n\t\t\t// The phone number entered not necessarily even starts with\r\n\t\t\t// the previously selected country phone prefix.\r\n\t\t\t// Even if the phone number belongs to whole another country\r\n\t\t\t// it will still be parsed into some national phone number.\r\n\t\t\t//\r\n\t\t\t// Ignore the now-uncovered `|| ''` code branch:\r\n\t\t\t// previously `e164()` function could return an empty string\r\n\t\t\t// even when `phoneDigits` were not empty.\r\n\t\t\t// Now it always returns some `value` when there're any `phoneDigits`.\r\n\t\t\t// Still, didn't remove the `|| ''` code branch just in case\r\n\t\t\t// that logic changes somehow in some future, so there're no\r\n\t\t\t// possible bugs related to that.\r\n\t\t\t//\r\n\t\t\t// (ignore the `|| ''` code branch)\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\treturn e164(phoneDigits, prevCountry, metadata) || ''\r\n\t\t}\r\n\t}\r\n\r\n\treturn phoneDigits\r\n}\r\n\r\n/**\r\n * Converts phone number digits to a (possibly incomplete) E.164 phone number.\r\n * @param  {string?} number - A possibly incomplete phone number digits string. Can be a possibly incomplete E.164 phone number.\r\n * @param  {string?} country\r\n * @param  {object} metadata - `libphonenumber-js` metadata.\r\n * @return {string?}\r\n */\r\nexport function e164(number, country, metadata) {\r\n\tif (!number) {\r\n\t\treturn\r\n\t}\r\n\t// If the phone number is being input in international format.\r\n\tif (number[0] === '+') {\r\n\t\t// If it's just the `+` sign then return nothing.\r\n\t\tif (number === '+') {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Return a E.164 phone number.\r\n\t\t//\r\n\t\t// Could return `number` \"as is\" here, but there's a possibility\r\n\t\t// that some user might incorrectly input an international number\r\n\t\t// with a \"national prefix\". Such numbers aren't considered valid,\r\n\t\t// but `libphonenumber-js` is \"forgiving\" when it comes to parsing\r\n\t\t// user's input, and this input component follows that behavior.\r\n\t\t//\r\n\t\tconst asYouType = new AsYouType(country, metadata)\r\n\t\tasYouType.input(number)\r\n\t\t// This function would return `undefined` only when `number` is `\"+\"`,\r\n\t\t// but at this point it is known that `number` is not `\"+\"`.\r\n\t\treturn asYouType.getNumberValue()\r\n\t}\r\n\t// For non-international phone numbers\r\n\t// an accompanying country code is required.\r\n\t// The situation when `country` is `undefined`\r\n\t// and a non-international phone number is passed\r\n\t// to this function shouldn't happen.\r\n\tif (!country) {\r\n\t\treturn\r\n\t}\r\n\tconst partial_national_significant_number = getNationalSignificantNumberDigits(number, country, metadata)\r\n\t//\r\n\t// Even if no \"national (significant) number\" digits have been input,\r\n\t// still return a non-`undefined` value.\r\n\t// https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/113\r\n\t//\r\n\t// For example, if the user has selected country `US` and entered `\"1\"`\r\n\t// then that `\"1\"` is just a \"national prefix\" and no \"national (significant) number\"\r\n\t// digits have been input yet. Still, return `\"+1\"` as `value` in such cases,\r\n\t// because otherwise the app would think that the input is empty and mark it as such\r\n\t// while in reality it isn't empty, which might be thought of as a \"bug\", or just\r\n\t// a \"weird\" behavior.\r\n\t//\r\n\t// if (partial_national_significant_number) {\r\n\t\treturn `+${getCountryCallingCode(country, metadata)}${partial_national_significant_number || ''}`\r\n\t// }\r\n}\r\n\r\n/**\r\n * Trims phone number digits if they exceed the maximum possible length\r\n * for a national (significant) number for the country.\r\n * @param  {string} number - A possibly incomplete phone number digits string. Can be a possibly incomplete E.164 phone number.\r\n * @param  {string} country\r\n * @param  {object} metadata - `libphonenumber-js` metadata.\r\n * @return {string} Can be empty.\r\n */\r\nexport function trimNumber(number, country, metadata) {\r\n\tconst nationalSignificantNumberPart = getNationalSignificantNumberDigits(number, country, metadata)\r\n\tif (nationalSignificantNumberPart) {\r\n\t\tconst overflowDigitsCount = nationalSignificantNumberPart.length - getMaxNumberLength(country, metadata)\r\n\t\tif (overflowDigitsCount > 0) {\r\n\t\t\treturn number.slice(0, number.length - overflowDigitsCount)\r\n\t\t}\r\n\t}\r\n\treturn number\r\n}\r\n\r\nfunction getMaxNumberLength(country, metadata) {\r\n\t// Get \"possible lengths\" for a phone number of the country.\r\n\tmetadata = new Metadata(metadata)\r\n\tmetadata.selectNumberingPlan(country)\r\n\t// Return the last \"possible length\".\r\n\treturn metadata.numberingPlan.possibleLengths()[metadata.numberingPlan.possibleLengths().length - 1]\r\n}\r\n\r\n// If the phone number being input is an international one\r\n// then tries to derive the country from the phone number.\r\n// (regardless of whether there's any country currently selected)\r\n/**\r\n * @param {string} partialE164Number - A possibly incomplete E.164 phone number.\r\n * @param {string?} country - Currently selected country.\r\n * @param {string[]?} countries - A list of available countries. If not passed then \"all countries\" are assumed.\r\n * @param  {object} metadata - `libphonenumber-js` metadata.\r\n * @return {string?}\r\n */\r\nexport function getCountryForPartialE164Number(partialE164Number, {\r\n\tcountry,\r\n\tcountries,\r\n\trequired,\r\n\tmetadata\r\n}) {\r\n\tif (partialE164Number === '+') {\r\n\t\t// Don't change the currently selected country yet.\r\n\t\treturn country\r\n\t}\r\n\r\n\tconst derived_country = getCountryFromPossiblyIncompleteInternationalPhoneNumber(partialE164Number, metadata)\r\n\r\n\t// If a phone number is being input in international form\r\n\t// and the country can already be derived from it,\r\n\t// then select that country.\r\n\tif (derived_country && (!countries || (countries.indexOf(derived_country) >= 0))) {\r\n\t\treturn derived_country\r\n\t}\r\n\t// If \"International\" country option has not been disabled\r\n\t// and the international phone number entered doesn't correspond\r\n\t// to the currently selected country then reset the currently selected country.\r\n\telse if (country &&\r\n\t\t!required &&\r\n\t\t!couldNumberBelongToCountry(partialE164Number, country, metadata)) {\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t// Don't change the currently selected country.\r\n\treturn country\r\n}\r\n\r\n/**\r\n * Parses `<input/>` value. Derives `country` from `input`. Derives an E.164 `value`.\r\n * @param  {string?} phoneDigits — Parsed `<input/>` value. Examples: `\"\"`, `\"+\"`, `\"+123\"`, `\"123\"`.\r\n * @param  {string?} prevPhoneDigits — Previous parsed `<input/>` value. Examples: `\"\"`, `\"+\"`, `\"+123\"`, `\"123\"`.\r\n * @param  {string?} country - Currently selected country.\r\n * @param  {boolean} countryRequired - Is selecting some country required.\r\n * @param  {function} getAnyCountry - Can be used to get any country when selecting some country required.\r\n * @param  {string[]?} countries - A list of available countries. If not passed then \"all countries\" are assumed.\r\n * @param  {boolean} international - Set to `true` to force international phone number format (leading `+`). Set to `false` to force \"national\" phone number format. Is `undefined` by default.\r\n * @param  {boolean} limitMaxLength — Whether to enable limiting phone number max length.\r\n * @param  {object} metadata - `libphonenumber-js` metadata.\r\n * @return {object} An object of shape `{ input, country, value }`.\r\n */\r\nexport function onPhoneDigitsChange(phoneDigits, {\r\n\tprevPhoneDigits,\r\n\tcountry,\r\n\tdefaultCountry,\r\n\tcountryRequired,\r\n\tgetAnyCountry,\r\n\tcountries,\r\n\tinternational,\r\n\tlimitMaxLength,\r\n\tcountryCallingCodeEditable,\r\n\tmetadata\r\n}) {\r\n\tif (international && countryCallingCodeEditable === false) {\r\n\t\tconst prefix = getInternationalPhoneNumberPrefix(country, metadata)\r\n\t\t// The `<input/>` value must start with the country calling code.\r\n\t\tif (phoneDigits.indexOf(prefix) !== 0) {\r\n\t\t\tlet value\r\n\t\t\t// If a phone number input is declared as\r\n\t\t\t// `international` and `withCountryCallingCode`,\r\n\t\t\t// then it's gonna be non-empty even before the user\r\n\t\t\t// has input anything in it.\r\n\t\t\t// This will result in its contents (the country calling code part)\r\n\t\t\t// being selected when the user tabs into such field.\r\n\t\t\t// If the user then starts inputting the national part digits,\r\n\t\t\t// then `<input/>` value changes from `+xxx` to `y`\r\n\t\t\t// because inputting anything while having the `<input/>` value\r\n\t\t\t// selected results in erasing the `<input/>` value.\r\n\t\t\t// So, the component handles such case by restoring\r\n\t\t\t// the intended `<input/>` value: `+xxxy`.\r\n\t\t\t// https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/43\r\n\t\t\tif (phoneDigits && phoneDigits[0] !== '+') {\r\n\t\t\t\tphoneDigits = prefix + phoneDigits\r\n\t\t\t\tvalue = e164(phoneDigits, country, metadata)\r\n\t\t\t} else {\r\n\t\t\t\tphoneDigits = prefix\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tphoneDigits,\r\n\t\t\t\tvalue,\r\n\t\t\t\tcountry\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// If `international` property is `false`, then it means\r\n\t// \"enforce national-only format during input\",\r\n\t// so, if that's the case, then remove all `+` characters,\r\n\t// but only if some country is currently selected.\r\n\t// (not if \"International\" country is selected).\r\n\tif (international === false && country && phoneDigits && phoneDigits[0] === '+') {\r\n\t\tphoneDigits = convertInternationalPhoneDigitsToNational(phoneDigits, country, metadata)\r\n\t}\r\n\r\n\t// Trim the input to not exceed the maximum possible number length.\r\n\tif (phoneDigits && country && limitMaxLength) {\r\n\t\tphoneDigits = trimNumber(phoneDigits, country, metadata)\r\n\t}\r\n\r\n\t// If this `onChange()` event was triggered\r\n\t// as a result of selecting \"International\" country,\r\n\t// then force-prepend a `+` sign if the phone number\r\n\t// `<input/>` value isn't in international format.\r\n\t// Also, force-prepend a `+` sign if international\r\n\t// phone number input format is set.\r\n\tif (phoneDigits && phoneDigits[0] !== '+' && (!country || international)) {\r\n\t\tphoneDigits = '+' + phoneDigits\r\n\t}\r\n\r\n\t// If the previously entered phone number\r\n\t// has been entered in international format\r\n\t// and the user decides to erase it,\r\n\t// then also reset the `country`\r\n\t// because it was most likely automatically selected\r\n\t// while the user was typing in the phone number\r\n\t// in international format.\r\n\t// This fixes the issue when a user is presented\r\n\t// with a phone number input with no country selected\r\n\t// and then types in their local phone number\r\n\t// then discovers that the input's messed up\r\n\t// (a `+` has been prepended at the start of their input\r\n\t//  and a random country has been selected),\r\n\t// decides to undo it all by erasing everything\r\n\t// and then types in their local phone number again\r\n\t// resulting in a seemingly correct phone number\r\n\t// but in reality that phone number has incorrect country.\r\n\t// https://github.com/catamphetamine/react-phone-number-input/issues/273\r\n\tif (!phoneDigits && prevPhoneDigits && prevPhoneDigits[0] === '+') {\r\n\t\tif (international) {\r\n\t\t\tcountry = undefined\r\n\t\t} else {\r\n\t\t\tcountry = defaultCountry\r\n\t\t}\r\n\t}\r\n\t// Also resets such \"randomly\" selected country\r\n\t// as soon as the user erases the number\r\n\t// digit-by-digit up to the leading `+` sign.\r\n\tif (phoneDigits === '+' && prevPhoneDigits && prevPhoneDigits[0] === '+' && prevPhoneDigits.length > '+'.length) {\r\n\t\tcountry = undefined\r\n\t}\r\n\r\n\t// Generate the new `value` property.\r\n\tlet value\r\n\tif (phoneDigits) {\r\n\t\tif (phoneDigits[0] === '+') {\r\n\t\t\tif (phoneDigits === '+') {\r\n\t\t\t\tvalue = undefined\r\n\t\t\t} else if (country && getInternationalPhoneNumberPrefix(country, metadata).indexOf(phoneDigits) === 0) {\r\n\t\t\t\t// Selected a `country` but started inputting an\r\n\t\t\t\t// international phone number for another country.\r\n\t\t\t\t// Even though the input value is non-empty,\r\n\t\t\t\t// the `value` is assumed `undefined` in such case.\r\n\t\t\t\t// The `country` will be reset (or re-selected)\r\n\t\t\t\t// immediately after such mismatch has been detected\r\n\t\t\t\t// by the phone number input component, and `value`\r\n\t\t\t\t// will be set to the currently entered international prefix.\r\n\t\t\t\t//\r\n\t\t\t\t// For example, if selected `country` `\"US\"`\r\n\t\t\t\t// and started inputting phone number `\"+2\"`\r\n\t\t\t\t// then `value` `undefined` will be returned from this function,\r\n\t\t\t\t// and then, immediately after that, `country` will be reset\r\n\t\t\t\t// and the `value` will be set to `\"+2\"`.\r\n\t\t\t\t//\r\n\t\t\t\tvalue = undefined\r\n\t\t\t} else {\r\n\t\t\t\tvalue = e164(phoneDigits, country, metadata)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalue = e164(phoneDigits, country, metadata)\r\n\t\t}\r\n\t}\r\n\r\n\t// Derive the country from the phone number.\r\n\t// (regardless of whether there's any country currently selected,\r\n\t//  because there could be several countries corresponding to one country calling code)\r\n\tif (value) {\r\n\t\tcountry = getCountryForPartialE164Number(value, {\r\n\t\t\tcountry,\r\n\t\t\tcountries,\r\n\t\t\tmetadata\r\n\t\t})\r\n\t\t// If `international` property is `false`, then it means\r\n\t\t// \"enforce national-only format during input\",\r\n\t\t// so, if that's the case, then remove all `+` characters,\r\n\t\t// but only if some country is currently selected.\r\n\t\t// (not if \"International\" country is selected).\r\n\t\tif (international === false && country && phoneDigits && phoneDigits[0] === '+') {\r\n\t\t\tphoneDigits = convertInternationalPhoneDigitsToNational(phoneDigits, country, metadata)\r\n\t\t\t// Re-calculate `value` because `phoneDigits` has changed.\r\n\t\t\tvalue = e164(phoneDigits, country, metadata)\r\n\t\t}\r\n\t}\r\n\r\n\tif (!country && countryRequired) {\r\n\t\tcountry = defaultCountry || getAnyCountry()\r\n\t}\r\n\r\n\treturn {\r\n\t\tphoneDigits,\r\n\t\tcountry,\r\n\t\tvalue\r\n\t}\r\n}\r\n\r\nfunction convertInternationalPhoneDigitsToNational(input, country, metadata) {\r\n\t// Handle the case when a user might have pasted\r\n\t// a phone number in international format.\r\n\tif (input.indexOf(getInternationalPhoneNumberPrefix(country, metadata)) === 0) {\r\n\t\t// Create \"as you type\" formatter.\r\n\t\tconst formatter = new AsYouType(country, metadata)\r\n\t\t// Input partial national phone number.\r\n\t\tformatter.input(input)\r\n\t\t// Return the parsed partial national phone number.\r\n\t\tconst phoneNumber = formatter.getNumber()\r\n\t\tif (phoneNumber) {\r\n\t\t\t// Transform the number to a national one,\r\n\t\t\t// and remove all non-digits.\r\n\t\t\treturn phoneNumber.formatNational().replace(/\\D/g, '')\r\n\t\t} else {\r\n\t\t\treturn ''\r\n\t\t}\r\n\t} else {\r\n\t\t// Just remove the `+` sign.\r\n\t\treturn input.replace(/\\D/g, '')\r\n\t}\r\n}\r\n\r\n/**\r\n * Determines the country for a given (possibly incomplete) E.164 phone number.\r\n * @param  {string} number - A possibly incomplete E.164 phone number.\r\n * @param  {object} metadata - `libphonenumber-js` metadata.\r\n * @return {string?}\r\n */\r\nexport function getCountryFromPossiblyIncompleteInternationalPhoneNumber(number, metadata) {\r\n\tconst formatter = new AsYouType(null, metadata)\r\n\tformatter.input(number)\r\n\t// // `001` is a special \"non-geograpical entity\" code\r\n\t// // in Google's `libphonenumber` library.\r\n\t// if (formatter.getCountry() === '001') {\r\n\t// \treturn\r\n\t// }\r\n\treturn formatter.getCountry()\r\n}\r\n\r\n/**\r\n * Compares two strings.\r\n * A helper for `Array.sort()`.\r\n * @param {string} a — First string.\r\n * @param {string} b — Second string.\r\n * @param {(string[]|string)} [locales] — The `locales` argument of `String.localeCompare`.\r\n */\r\nexport function compareStrings(a, b, locales) {\r\n  // Use `String.localeCompare` if it's available.\r\n  // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\r\n  // Which means everyone except IE <= 10 and Safari <= 10.\r\n  // `localeCompare()` is available in latest Node.js versions.\r\n  /* istanbul ignore else */\r\n  if (String.prototype.localeCompare) {\r\n    return a.localeCompare(b, locales);\r\n  }\r\n  /* istanbul ignore next */\r\n  return a < b ? -1 : (a > b ? 1 : 0);\r\n}\r\n\r\n/**\r\n * Strips `+${countryCallingCode}` prefix from an E.164 phone number.\r\n * @param {string} number - (possibly incomplete) E.164 phone number.\r\n * @param {string?} country - A possible country for this phone number.\r\n * @param {object} metadata - `libphonenumber-js` metadata.\r\n * @return {string}\r\n */\r\nexport function stripCountryCallingCode(number, country, metadata) {\r\n\t// Just an optimization, so that it\r\n\t// doesn't have to iterate through all country calling codes.\r\n\tif (country) {\r\n\t\tconst countryCallingCodePrefix = '+' + getCountryCallingCode(country, metadata)\r\n\r\n\t\t// If `country` fits the actual `number`.\r\n\t\tif (number.length < countryCallingCodePrefix.length) {\r\n\t\t\tif (countryCallingCodePrefix.indexOf(number) === 0) {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (number.indexOf(countryCallingCodePrefix) === 0) {\r\n\t\t\t\treturn number.slice(countryCallingCodePrefix.length)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// If `country` doesn't fit the actual `number`.\r\n\t// Try all available country calling codes.\r\n\tfor (const country_calling_code of Object.keys(metadata.country_calling_codes)) {\r\n\t\tif (number.indexOf(country_calling_code) === '+'.length) {\r\n\t\t\treturn number.slice('+'.length + country_calling_code.length)\r\n\t\t}\r\n\t}\r\n\r\n\treturn ''\r\n}\r\n\r\n/**\r\n * Parses a partially entered national phone number digits\r\n * (or a partially entered E.164 international phone number)\r\n * and returns the national significant number part.\r\n * National significant number returned doesn't come with a national prefix.\r\n * @param {string} number - National number digits. Or possibly incomplete E.164 phone number.\r\n * @param {string?} country\r\n * @param {object} metadata - `libphonenumber-js` metadata.\r\n * @return {string} [result]\r\n */\r\nexport function getNationalSignificantNumberDigits(number, country, metadata) {\r\n\t// Create \"as you type\" formatter.\r\n\tconst formatter = new AsYouType(country, metadata)\r\n\t// Input partial national phone number.\r\n\tformatter.input(number)\r\n\t// Return the parsed partial national phone number.\r\n\tconst phoneNumber = formatter.getNumber()\r\n\treturn phoneNumber && phoneNumber.nationalNumber\r\n}\r\n\r\n/**\r\n * Checks if a partially entered E.164 phone number could belong to a country.\r\n * @param  {string} number\r\n * @param  {string} country\r\n * @return {boolean}\r\n */\r\nexport function couldNumberBelongToCountry(number, country, metadata) {\r\n\tconst intlPhoneNumberPrefix = getInternationalPhoneNumberPrefix(country, metadata)\r\n\tlet i = 0\r\n\twhile (i < number.length && i < intlPhoneNumberPrefix.length) {\r\n\t\tif (number[i] !== intlPhoneNumberPrefix[i]) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\treturn true\r\n}\r\n\r\n/**\r\n * Gets initial \"phone digits\" (including `+`, if using international format).\r\n * @return {string} [phoneDigits] Returns `undefined` if there should be no initial \"phone digits\".\r\n */\r\nexport function getInitialPhoneDigits({\r\n\tvalue,\r\n\tphoneNumber,\r\n\tdefaultCountry,\r\n\tinternational,\r\n\tuseNationalFormat,\r\n\tmetadata\r\n}) {\r\n\t// If the `value` (E.164 phone number)\r\n\t// belongs to the currently selected country\r\n\t// and `useNationalFormat` is `true`\r\n\t// then convert `value` (E.164 phone number)\r\n\t// to a local phone number digits.\r\n\t// E.g. '+78005553535' -> '88005553535'.\r\n\tif ((international === false || useNationalFormat) && phoneNumber && phoneNumber.country) {\r\n\t\treturn generateNationalNumberDigits(phoneNumber)\r\n\t}\r\n\t// If `international` property is `true`,\r\n\t// meaning \"enforce international phone number format\",\r\n\t// then always show country calling code in the input field.\r\n\tif (!value && international && defaultCountry) {\r\n\t\treturn getInternationalPhoneNumberPrefix(defaultCountry, metadata)\r\n\t}\r\n\treturn value\r\n}","import { normalizeArguments } from './parsePhoneNumber.js'\r\nimport parsePhoneNumberFromString_ from './parsePhoneNumberFromString_.js'\r\n\r\nexport default function parsePhoneNumberFromString() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn parsePhoneNumberFromString_(text, options, metadata)\r\n}\r\n","import {\r\n\tgetInitialPhoneDigits,\r\n\tgetCountryForPartialE164Number,\r\n\tparsePhoneNumber\r\n} from './phoneInputHelpers.js'\r\n\r\nimport {\r\n\tisCountrySupportedWithError,\r\n\tgetSupportedCountries\r\n} from './countries.js'\r\n\r\nexport default function getPhoneInputWithCountryStateUpdateFromNewProps(props, prevProps, state) {\r\n\tconst {\r\n\t\tmetadata,\r\n\t\tcountries,\r\n\t\tdefaultCountry: newDefaultCountry,\r\n\t\tvalue: newValue,\r\n\t\treset: newReset,\r\n\t\tinternational,\r\n\t\t// `displayInitialValueAsLocalNumber` property has been\r\n\t\t// superceded by `initialValueFormat` property.\r\n\t\tdisplayInitialValueAsLocalNumber,\r\n\t\tinitialValueFormat\r\n\t} = props\r\n\r\n\tconst {\r\n\t\tdefaultCountry: prevDefaultCountry,\r\n\t\tvalue: prevValue,\r\n\t\treset: prevReset\r\n\t} = prevProps\r\n\r\n\tconst {\r\n\t\tcountry,\r\n\t\tvalue,\r\n\t\t// If the user has already manually selected a country\r\n\t\t// then don't override that already selected country\r\n\t\t// if the `defaultCountry` property changes.\r\n\t\t// That's what `hasUserSelectedACountry` flag is for.\r\n\t\thasUserSelectedACountry\r\n\t} = state\r\n\r\n\tconst _getInitialPhoneDigits = (parameters) => getInitialPhoneDigits({\r\n\t\t...parameters,\r\n\t\tinternational,\r\n\t\tuseNationalFormat: displayInitialValueAsLocalNumber || initialValueFormat === 'national',\r\n\t\tmetadata\r\n\t})\r\n\r\n\t// Some users requested a way to reset the component\r\n\t// (both number `<input/>` and country `<select/>`).\r\n\t// Whenever `reset` property changes both number `<input/>`\r\n\t// and country `<select/>` are reset.\r\n\t// It's not implemented as some instance `.reset()` method\r\n\t// because `ref` is forwarded to `<input/>`.\r\n\t// It's also not replaced with just resetting `country` on\r\n\t// external `value` reset, because a user could select a country\r\n\t// and then not input any `value`, and so the selected country\r\n\t// would be \"stuck\", if not using this `reset` property.\r\n\t// https://github.com/catamphetamine/react-phone-number-input/issues/300\r\n\tif (newReset !== prevReset) {\r\n\t\treturn {\r\n\t\t\tphoneDigits: _getInitialPhoneDigits({\r\n\t\t\t\tvalue: undefined,\r\n\t\t\t\tdefaultCountry: newDefaultCountry\r\n\t\t\t}),\r\n\t\t\tvalue: undefined,\r\n\t\t\tcountry: newDefaultCountry,\r\n\t\t\thasUserSelectedACountry: undefined\r\n\t\t}\r\n\t}\r\n\r\n\t// `value` is the value currently shown in the component:\r\n\t// it's stored in the component's `state`, and it's not the `value` property.\r\n\t// `prevValue` is \"previous `value` property\".\r\n\t// `newValue` is \"new `value` property\".\r\n\r\n\t// If the default country changed\r\n\t// (e.g. in case of ajax GeoIP detection after page loaded)\r\n\t// then select it, but only if the user hasn't already manually\r\n\t// selected a country, and no phone number has been manually entered so far.\r\n\t// Because if the user has already started inputting a phone number\r\n\t// then they're okay with no country being selected at all (\"International\")\r\n\t// and they don't want to be disturbed, don't want their input to be screwed, etc.\r\n\tif (newDefaultCountry !== prevDefaultCountry) {\r\n\t\tconst isNewDefaultCountrySupported = !newDefaultCountry || isCountrySupportedWithError(newDefaultCountry, metadata)\r\n\t\tconst noValueHasBeenEnteredByTheUser = (\r\n\t\t\t// By default, \"no value has been entered\" means `value` is `undefined`.\r\n\t\t\t!value ||\r\n\t\t\t// When `international` is `true`, and some country has been pre-selected,\r\n\t\t\t// then the `<input/>` contains a pre-filled value of `+${countryCallingCode}${leadingDigits}`,\r\n\t\t\t// so in case of `international` being `true`, \"the user hasn't entered anything\" situation\r\n\t\t\t// doesn't just mean `value` is `undefined`, but could also mean `value` is `+${countryCallingCode}`.\r\n\t\t\t(international && value === _getInitialPhoneDigits({\r\n\t\t\t\tvalue: undefined,\r\n\t\t\t\tdefaultCountry: prevDefaultCountry\r\n\t\t\t}))\r\n\t\t)\r\n\t\t// Only update the `defaultCountry` property if no phone number\r\n\t\t// has been entered by the user or pre-set by the application.\r\n\t\tconst noValueHasBeenEntered = !newValue && noValueHasBeenEnteredByTheUser\r\n\t\tif (!hasUserSelectedACountry && isNewDefaultCountrySupported && noValueHasBeenEntered) {\r\n\t\t\treturn {\r\n\t\t\t\tcountry: newDefaultCountry,\r\n\t\t\t\t// If `phoneDigits` is empty, then automatically select the new `country`\r\n\t\t\t\t// and set `phoneDigits` to `+{getCountryCallingCode(newCountry)}`.\r\n\t\t\t\t// The code assumes that \"no phone number has been entered by the user\",\r\n\t\t\t\t// and no `value` property has been passed, so the `phoneNumber` parameter\r\n\t\t\t\t// of `_getInitialPhoneDigits({ value, phoneNumber, ... })` is `undefined`.\r\n\t\t\t\tphoneDigits: _getInitialPhoneDigits({\r\n\t\t\t\t\tvalue: undefined,\r\n\t\t\t\t\tdefaultCountry: newDefaultCountry\r\n\t\t\t\t}),\r\n\t\t\t\t// `value` is `undefined` and it stays so.\r\n\t\t\t\tvalue: undefined\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// If a new `value` is set externally.\r\n\t// (e.g. as a result of an ajax API request\r\n\t//  to get user's phone after page loaded)\r\n\t// The first part — `newValue !== prevValue` —\r\n\t// is basically `props.value !== prevProps.value`\r\n\t// so it means \"if value property was changed externally\".\r\n\t// The second part — `newValue !== value` —\r\n\t// is for ignoring the `getDerivedStateFromProps()` call\r\n\t// which happens in `this.onChange()` right after `this.setState()`.\r\n\t// If this `getDerivedStateFromProps()` call isn't ignored\r\n\t// then the country flag would reset on each input.\r\n\tif (newValue !== prevValue && newValue !== value) {\r\n\t\tlet phoneNumber\r\n\t\tlet parsedCountry\r\n\t\tif (newValue) {\r\n\t\t\tphoneNumber = parsePhoneNumber(newValue, metadata)\r\n\t\t\tconst supportedCountries = getSupportedCountries(countries, metadata)\r\n\t\t\tif (phoneNumber && phoneNumber.country) {\r\n\t\t\t\t// Ignore `else` because all countries are supported in metadata.\r\n\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\tif (!supportedCountries || supportedCountries.indexOf(phoneNumber.country) >= 0) {\r\n\t\t\t\t\tparsedCountry = phoneNumber.country\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tparsedCountry = getCountryForPartialE164Number(newValue, {\r\n\t\t\t\t\tcountry: undefined,\r\n\t\t\t\t\tcountries: supportedCountries,\r\n\t\t\t\t\tmetadata\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet hasUserSelectedACountryUpdate\r\n\t\tif (!newValue) {\r\n\t\t\t// Reset `hasUserSelectedACountry` flag in `state`.\r\n\t\t\thasUserSelectedACountryUpdate = {\r\n\t\t\t\thasUserSelectedACountry: undefined\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...hasUserSelectedACountryUpdate,\r\n\t\t\tphoneDigits: _getInitialPhoneDigits({\r\n\t\t\t\tphoneNumber,\r\n\t\t\t\tvalue: newValue,\r\n\t\t\t\tdefaultCountry: newDefaultCountry\r\n\t\t\t}),\r\n\t\t\tvalue: newValue,\r\n\t\t\tcountry: newValue ? parsedCountry : newDefaultCountry\r\n\t\t}\r\n\t}\r\n\r\n\t// `defaultCountry` didn't change.\r\n\t// `value` didn't change.\r\n\t// `phoneDigits` didn't change, because `value` didn't change.\r\n\t//\r\n\t// So no need to update state.\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport InputSmart from './InputSmart.js'\r\nimport InputBasic from './InputBasic.js'\r\n\r\nimport { CountrySelectWithIcon as CountrySelect } from './CountrySelect.js'\r\n\r\nimport Flag from './Flag.js'\r\nimport InternationalIcon from './InternationalIcon.js'\r\n\r\nimport {\r\n\tsortCountryOptions,\r\n\tisCountrySupportedWithError,\r\n\tgetSupportedCountries,\r\n\tgetSupportedCountryOptions,\r\n\tgetCountries\r\n} from './helpers/countries.js'\r\n\r\nimport { createCountryIconComponent } from './CountryIcon.js'\r\n\r\nimport {\r\n\tmetadata as metadataPropType,\r\n\tlabels as labelsPropType\r\n} from './PropTypes.js'\r\n\r\nimport {\r\n\tgetPreSelectedCountry,\r\n\tgetCountrySelectOptions,\r\n\tparsePhoneNumber,\r\n\tgenerateNationalNumberDigits,\r\n\tgetPhoneDigitsForNewCountry,\r\n\tgetInitialPhoneDigits,\r\n\tonPhoneDigitsChange,\r\n\te164\r\n} from './helpers/phoneInputHelpers.js'\r\n\r\nimport getPhoneInputWithCountryStateUpdateFromNewProps from './helpers/getPhoneInputWithCountryStateUpdateFromNewProps.js'\r\n\r\nclass PhoneNumberInput_ extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.inputRef = React.createRef()\r\n\r\n\t\tconst {\r\n\t\t\tvalue,\r\n\t\t\tlabels,\r\n\t\t\tinternational,\r\n\t\t\taddInternationalOption,\r\n\t\t\t// `displayInitialValueAsLocalNumber` property has been\r\n\t\t\t// superceded by `initialValueFormat` property.\r\n\t\t\tdisplayInitialValueAsLocalNumber,\r\n\t\t\tinitialValueFormat,\r\n\t\t\tmetadata\r\n\t\t} = this.props\r\n\r\n\t\tlet {\r\n\t\t\tdefaultCountry,\r\n\t\t\tcountries\r\n\t\t} = this.props\r\n\r\n\t\t// Validate `defaultCountry`.\r\n\t\tif (defaultCountry) {\r\n\t\t\tif (!this.isCountrySupportedWithError(defaultCountry)) {\r\n\t\t\t\tdefaultCountry = undefined\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Validate `countries`.\r\n\t\tcountries = getSupportedCountries(countries, metadata)\r\n\r\n\t\tconst phoneNumber = parsePhoneNumber(value, metadata)\r\n\r\n\t\tthis.CountryIcon = createCountryIconComponent(this.props)\r\n\r\n\t\tconst preSelectedCountry = getPreSelectedCountry({\r\n\t\t\tvalue,\r\n\t\t\tphoneNumber,\r\n\t\t\tdefaultCountry,\r\n\t\t\trequired: !addInternationalOption,\r\n\t\t\tcountries: countries || getCountries(metadata),\r\n\t\t\tgetAnyCountry: () => this.getFirstSupportedCountry({ countries }),\r\n\t\t\tmetadata\r\n\t\t})\r\n\r\n\t\tthis.state = {\r\n\t\t\t// Workaround for `this.props` inside `getDerivedStateFromProps()`.\r\n\t\t\tprops: this.props,\r\n\r\n\t\t\t// The country selected.\r\n\t\t\tcountry: preSelectedCountry,\r\n\r\n\t\t\t// `countries` are stored in `this.state` because they're filtered.\r\n\t\t\t// For example, a developer might theoretically pass some unsupported\r\n\t\t\t// countries as part of the `countries` property, and because of that\r\n\t\t\t// the component uses `this.state.countries` (which are filtered)\r\n\t\t\t// instead of `this.props.countries`\r\n\t\t\t// (which could potentially contain unsupported countries).\r\n\t\t\tcountries,\r\n\r\n\t\t\t// `phoneDigits` state property holds non-formatted user's input.\r\n\t\t\t// The reason is that there's no way of finding out\r\n\t\t\t// in which form should `value` be displayed: international or national.\r\n\t\t\t// E.g. if `value` is `+78005553535` then it could be input\r\n\t\t\t// by a user both as `8 (800) 555-35-35` and `+7 800 555 35 35`.\r\n\t\t\t// Hence storing just `value` is not sufficient for correct formatting.\r\n\t\t\t// E.g. if a user entered `8 (800) 555-35-35`\r\n\t\t\t// then value is `+78005553535` and `phoneDigits` are `88005553535`\r\n\t\t\t// and if a user entered `+7 800 555 35 35`\r\n\t\t\t// then value is `+78005553535` and `phoneDigits` are `+78005553535`.\r\n\t\t\tphoneDigits: getInitialPhoneDigits({\r\n\t\t\t\tvalue,\r\n\t\t\t\tphoneNumber,\r\n\t\t\t\tdefaultCountry,\r\n\t\t\t\tinternational,\r\n\t\t\t\tuseNationalFormat: displayInitialValueAsLocalNumber || initialValueFormat === 'national',\r\n\t\t\t\tmetadata\r\n\t\t\t}),\r\n\r\n\t\t\t// `value` property is duplicated in state.\r\n\t\t\t// The reason is that `getDerivedStateFromProps()`\r\n\t\t\t// needs this `value` to compare to the new `value` property\r\n\t\t\t// to find out if `phoneDigits` needs updating:\r\n\t\t\t// If the `value` property was changed externally\r\n\t\t\t// then it won't be equal to `state.value`\r\n\t\t\t// in which case `phoneDigits` and `country` should be updated.\r\n\t\t\tvalue\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { onCountryChange } = this.props\r\n\t\tlet { defaultCountry } = this.props\r\n\t\tconst { country: selectedCountry } = this.state\r\n\t\tif (onCountryChange) {\r\n\t\t\tif (defaultCountry) {\r\n\t\t\t\tif (!this.isCountrySupportedWithError(defaultCountry)) {\r\n\t\t\t\t\tdefaultCountry = undefined\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (selectedCountry !== defaultCountry) {\r\n\t\t\t\tonCountryChange(selectedCountry)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tconst { onCountryChange } = this.props\r\n\t\tconst { country } = this.state\r\n\t\t// Call `onCountryChange` when user selects another country.\r\n\t\tif (onCountryChange && country !== prevState.country) {\r\n\t\t\tonCountryChange(country)\r\n\t\t}\r\n\t}\r\n\r\n\tsetInputRef = (instance) => {\r\n\t\tthis.inputRef.current = instance\r\n\t\tconst { inputRef: ref } = this.props\r\n\t\tif (ref) {\r\n\t\t\tif (typeof ref === 'function') {\r\n\t\t\t\tref(instance)\r\n\t\t\t} else {\r\n\t\t\t\tref.current = instance\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetCountrySelectOptions({ countries }) {\r\n\t\tconst {\r\n\t\t\tinternational,\r\n\t\t\tcountryCallingCodeEditable,\r\n\t\t\tcountryOptionsOrder,\r\n\t\t\taddInternationalOption,\r\n\t\t\tlabels,\r\n\t\t\tlocales,\r\n\t\t\tmetadata\r\n\t\t} = this.props\r\n\t\treturn this.useMemoCountrySelectOptions(() => {\r\n\t\t\treturn sortCountryOptions(\r\n\t\t\t\tgetCountrySelectOptions({\r\n\t\t\t\t\tcountries: countries || getCountries(metadata),\r\n\t\t\t\t\tcountryNames: labels,\r\n\t\t\t\t\taddInternationalOption: (international && countryCallingCodeEditable === false) ? false : addInternationalOption,\r\n\t\t\t\t\tcompareStringsLocales: locales,\r\n\t\t\t\t\t// compareStrings\r\n\t\t\t\t}),\r\n\t\t\t\tgetSupportedCountryOptions(countryOptionsOrder, metadata)\r\n\t\t\t)\r\n\t\t}, [\r\n\t\t\tcountries,\r\n\t\t\tcountryOptionsOrder,\r\n\t\t\taddInternationalOption,\r\n\t\t\tlabels,\r\n\t\t\tmetadata\r\n\t\t])\r\n\t}\r\n\r\n\tuseMemoCountrySelectOptions(generator, dependencies) {\r\n\t\tif (\r\n\t\t\t!this.countrySelectOptionsMemoDependencies ||\r\n\t\t\t!areEqualArrays(dependencies, this.countrySelectOptionsMemoDependencies)\r\n\t\t) {\r\n\t\t\tthis.countrySelectOptionsMemo = generator()\r\n\t\t\tthis.countrySelectOptionsMemoDependencies = dependencies\r\n\t\t}\r\n\t\treturn this.countrySelectOptionsMemo\r\n\t}\r\n\r\n\tgetFirstSupportedCountry({ countries }) {\r\n\t\tconst countryOptions = this.getCountrySelectOptions({ countries })\r\n\t\treturn countryOptions[0].value\r\n\t}\r\n\r\n\t// A shorthand for not passing `metadata` as a second argument.\r\n\tisCountrySupportedWithError = (country) => {\r\n\t\tconst { metadata } = this.props\r\n\t\treturn isCountrySupportedWithError(country, metadata)\r\n\t}\r\n\r\n\t// Country `<select/>` `onChange` handler.\r\n\tonCountryChange = (newCountry) => {\r\n\t\tconst {\r\n\t\t\tinternational,\r\n\t\t\tmetadata,\r\n\t\t\tonChange,\r\n\t\t\tfocusInputOnCountrySelection\r\n\t\t} = this.props\r\n\r\n\t\tconst {\r\n\t\t\tphoneDigits: prevPhoneDigits,\r\n\t\t\tcountry: prevCountry\r\n\t\t} = this.state\r\n\r\n\t\t// After the new `country` has been selected,\r\n\t\t// if the phone number `<input/>` holds any digits\r\n\t\t// then migrate those digits for the new `country`.\r\n\t\tconst newPhoneDigits = getPhoneDigitsForNewCountry(prevPhoneDigits, {\r\n\t\t\tprevCountry,\r\n\t\t\tnewCountry,\r\n\t\t\tmetadata,\r\n\t\t\t// Convert the phone number to \"national\" format\r\n\t\t\t// when the user changes the selected country by hand.\r\n\t\t\tuseNationalFormat: !international\r\n\t\t})\r\n\r\n\t\tconst newValue = e164(newPhoneDigits, newCountry, metadata)\r\n\r\n\t\t// Focus phone number `<input/>` upon country selection.\r\n\t\tif (focusInputOnCountrySelection) {\r\n\t\t\tthis.inputRef.current.focus()\r\n\t\t}\r\n\r\n\t\t// If the user has already manually selected a country\r\n\t\t// then don't override that already selected country\r\n\t\t// if the `defaultCountry` property changes.\r\n\t\t// That's what `hasUserSelectedACountry` flag is for.\r\n\r\n\t\tthis.setState({\r\n\t\t\tcountry: newCountry,\r\n\t\t\thasUserSelectedACountry: true,\r\n\t\t\tphoneDigits: newPhoneDigits,\r\n\t\t\tvalue: newValue\r\n\t\t},\r\n\t\t() => {\r\n\t\t\t// Update the new `value` property.\r\n\t\t\t// Doing it after the `state` has been updated\r\n\t\t\t// because `onChange()` will trigger `getDerivedStateFromProps()`\r\n\t\t\t// with the new `value` which will be compared to `state.value` there.\r\n\t\t\tonChange(newValue)\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * `<input/>` `onChange()` handler.\r\n\t * Updates `value` property accordingly (so that they are kept in sync).\r\n\t * @param {string?} input — Either a parsed phone number or an empty string. Examples: `\"\"`, `\"+\"`, `\"+123\"`, `\"123\"`.\r\n\t */\r\n\tonChange = (_phoneDigits) => {\r\n\t\tconst {\r\n\t\t\tdefaultCountry,\r\n\t\t\tonChange,\r\n\t\t\taddInternationalOption,\r\n\t\t\tinternational,\r\n\t\t\tlimitMaxLength,\r\n\t\t\tcountryCallingCodeEditable,\r\n\t\t\tmetadata\r\n\t\t} = this.props\r\n\r\n\t\tconst {\r\n\t\t\tcountries,\r\n\t\t\tphoneDigits: prevPhoneDigits,\r\n\t\t\tcountry: currentlySelectedCountry\r\n\t\t} = this.state\r\n\r\n\t\tconst {\r\n\t\t\tphoneDigits,\r\n\t\t\tcountry,\r\n\t\t\tvalue\r\n\t\t} = onPhoneDigitsChange(_phoneDigits, {\r\n\t\t\tprevPhoneDigits,\r\n\t\t\tcountry: currentlySelectedCountry,\r\n\t\t\tcountryRequired: !addInternationalOption,\r\n\t\t\tdefaultCountry,\r\n\t\t\tgetAnyCountry: () => this.getFirstSupportedCountry({ countries }),\r\n\t\t\tcountries,\r\n\t\t\tinternational,\r\n\t\t\tlimitMaxLength,\r\n\t\t\tcountryCallingCodeEditable,\r\n\t\t\tmetadata\r\n\t\t})\r\n\r\n\t\tconst stateUpdate = {\r\n\t\t\tphoneDigits,\r\n\t\t\tvalue,\r\n\t\t\tcountry\r\n\t\t}\r\n\r\n\t\tif (countryCallingCodeEditable === false) {\r\n\t\t\t// If it simply did `setState({ phoneDigits: intlPrefix })` here,\r\n\t\t\t// then it would have no effect when erasing an inital international prefix\r\n\t\t\t// via Backspace, because `phoneDigits` in `state` wouldn't change\r\n\t\t\t// as a result, because it was `prefix` and it became `prefix`,\r\n\t\t\t// so the component wouldn't rerender, and the user would be able\r\n\t\t\t// to erase the country calling code part, and that part is\r\n\t\t\t// assumed to be non-eraseable. That's why the component is\r\n\t\t\t// forcefully rerendered here.\r\n\t\t\t// https://github.com/catamphetamine/react-phone-number-input/issues/367#issuecomment-721703501\r\n\t\t\tif (!value && phoneDigits === this.state.phoneDigits) {\r\n\t\t\t\t// Force a re-render of the `<input/>` in order to reset its value.\r\n\t\t\t\tstateUpdate.forceRerender = {}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState(\r\n\t\t\tstateUpdate,\r\n\t\t\t// Update the new `value` property.\r\n\t\t\t// Doing it after the `state` has been updated\r\n\t\t\t// because `onChange()` will trigger `getDerivedStateFromProps()`\r\n\t\t\t// with the new `value` which will be compared to `state.value` there.\r\n\t\t\t() => onChange(value)\r\n\t\t)\r\n\t}\r\n\r\n\t// Toggles the `--focus` CSS class.\r\n\t_onFocus = () => this.setState({ isFocused: true })\r\n\r\n\t// Toggles the `--focus` CSS class.\r\n\t_onBlur = () => this.setState({ isFocused: false })\r\n\r\n\tonFocus = (event) => {\r\n\t\tthis._onFocus()\r\n\t\tconst { onFocus } = this.props\r\n\t\tif (onFocus) {\r\n\t\t\tonFocus(event)\r\n\t\t}\r\n\t}\r\n\r\n\tonBlur = (event) => {\r\n\t\tconst { onBlur } = this.props\r\n\t\tthis._onBlur()\r\n\t\tif (onBlur) {\r\n\t\t\tonBlur(event)\r\n\t\t}\r\n\t}\r\n\r\n\tonCountryFocus = (event) => {\r\n\t\tthis._onFocus()\r\n\t\t// this.setState({ countrySelectFocused: true })\r\n\t\tconst { countrySelectProps } = this.props\r\n\t\tif (countrySelectProps) {\r\n\t\t\tconst { onFocus } = countrySelectProps\r\n\t\t\tif (onFocus) {\r\n\t\t\t\tonFocus(event)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonCountryBlur = (event) => {\r\n\t\tthis._onBlur()\r\n\t\t// this.setState({ countrySelectFocused: false })\r\n\t\tconst { countrySelectProps } = this.props\r\n\t\tif (countrySelectProps) {\r\n\t\t\tconst { onBlur } = countrySelectProps\r\n\t\t\tif (onBlur) {\r\n\t\t\t\tonBlur(event)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// `state` holds previous props as `props`, and also:\r\n\t// * `country` — The currently selected country, e.g. `\"RU\"`.\r\n\t// * `value` — The currently entered phone number (E.164), e.g. `+78005553535`.\r\n\t// * `phoneDigits` — The parsed `<input/>` value, e.g. `8005553535`.\r\n\t// (and a couple of other less significant properties)\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n\t\treturn {\r\n\t\t\t// Emulate `prevProps` via `state.props`.\r\n\t\t\tprops,\r\n\t\t\t...getPhoneInputWithCountryStateUpdateFromNewProps(props, state.props, state)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\t// Generic HTML attributes.\r\n\t\t\tname,\r\n\t\t\tdisabled,\r\n\t\t\treadOnly,\r\n\t\t\tautoComplete,\r\n\t\t\tstyle,\r\n\t\t\tclassName,\r\n\r\n\t\t\t// Number `<input/>` properties.\r\n\t\t\tinputRef,\r\n\t\t\tinputComponent,\r\n\t\t\tnumberInputProps,\r\n\t\t\tsmartCaret,\r\n\r\n\t\t\t// Country `<select/>` properties.\r\n\t\t\tcountrySelectComponent: CountrySelectComponent,\r\n\t\t\tcountrySelectProps,\r\n\r\n\t\t\t// Container `<div/>` properties.\r\n\t\t\tcontainerComponent: ContainerComponent,\r\n\r\n\t\t\t// Get \"rest\" properties (passed through to number `<input/>`).\r\n\t\t\tdefaultCountry,\r\n\t\t\tcountries: countriesProperty,\r\n\t\t\tcountryOptionsOrder,\r\n\t\t\tlabels,\r\n\t\t\tflags,\r\n\t\t\tflagComponent,\r\n\t\t\tflagUrl,\r\n\t\t\taddInternationalOption,\r\n\t\t\tinternationalIcon,\r\n\t\t\t// `displayInitialValueAsLocalNumber` property has been\r\n\t\t\t// superceded by `initialValueFormat` property.\r\n\t\t\tdisplayInitialValueAsLocalNumber,\r\n\t\t\tinitialValueFormat,\r\n\t\t\tonCountryChange,\r\n\t\t\tlimitMaxLength,\r\n\t\t\tcountryCallingCodeEditable,\r\n\t\t\tfocusInputOnCountrySelection,\r\n\t\t\treset,\r\n\t\t\tmetadata,\r\n\t\t\tinternational,\r\n\t\t\tlocales,\r\n\t\t\t// compareStrings,\r\n\t\t\t...rest\r\n\t\t} = this.props\r\n\r\n\t\tconst {\r\n\t\t\tcountry,\r\n\t\t\tcountries,\r\n\t\t\tphoneDigits,\r\n\t\t\tisFocused\r\n\t\t} = this.state\r\n\r\n\t\tconst InputComponent = smartCaret ? InputSmart : InputBasic\r\n\r\n\t\tconst countrySelectOptions = this.getCountrySelectOptions({ countries })\r\n\r\n\t\treturn (\r\n\t\t\t<ContainerComponent\r\n\t\t\t\tstyle={style}\r\n\t\t\t\tclassName={classNames(className, 'PhoneInput', {\r\n\t\t\t\t\t'PhoneInput--focus': isFocused,\r\n\t\t\t\t\t'PhoneInput--disabled': disabled,\r\n\t\t\t\t\t'PhoneInput--readOnly': readOnly\r\n\t\t\t\t})}>\r\n\r\n\t\t\t\t{/* Country `<select/>` */}\r\n\t\t\t\t<CountrySelectComponent\r\n\t\t\t\t\tname={name ? `${name}Country` : undefined}\r\n\t\t\t\t\taria-label={labels.country}\r\n\t\t\t\t\t{...countrySelectProps}\r\n\t\t\t\t\tvalue={country}\r\n\t\t\t\t\toptions={countrySelectOptions}\r\n\t\t\t\t\tonChange={this.onCountryChange}\r\n\t\t\t\t\tonFocus={this.onCountryFocus}\r\n\t\t\t\t\tonBlur={this.onCountryBlur}\r\n\t\t\t\t\tdisabled={disabled || (countrySelectProps && countrySelectProps.disabled)}\r\n\t\t\t\t\treadOnly={readOnly || (countrySelectProps && countrySelectProps.readOnly)}\r\n\t\t\t\t\ticonComponent={this.CountryIcon}/>\r\n\r\n\t\t\t\t{/* Phone number `<input/>` */}\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\tref={this.setInputRef}\r\n\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\tautoComplete={autoComplete}\r\n\t\t\t\t\t{...numberInputProps}\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tmetadata={metadata}\r\n\t\t\t\t\tcountry={country}\r\n\t\t\t\t\tvalue={phoneDigits || ''}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\tonFocus={this.onFocus}\r\n\t\t\t\t\tonBlur={this.onBlur}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\treadOnly={readOnly}\r\n\t\t\t\t\tinputComponent={inputComponent}\r\n\t\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t\t'PhoneInputInput',\r\n\t\t\t\t\t\tnumberInputProps && numberInputProps.className,\r\n\t\t\t\t\t\trest.className\r\n\t\t\t\t\t)}/>\r\n\t\t\t</ContainerComponent>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// This wrapper is only to `.forwardRef()` to the `<input/>`.\r\nconst PhoneNumberInput = React.forwardRef((props, ref) => (\r\n\t<PhoneNumberInput_ {...props} inputRef={ref}/>\r\n))\r\n\r\nPhoneNumberInput.propTypes = {\r\n\t/**\r\n\t * Phone number in `E.164` format.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * `\"+12223333333\"`\r\n\t *\r\n\t * Any \"falsy\" value like `undefined`, `null` or an empty string `\"\"` is treated like \"empty\".\r\n\t */\r\n\tvalue: PropTypes.string,\r\n\r\n\t/**\r\n\t * A function of `value: string?`.\r\n\t *\r\n\t * Updates the `value` property as the user inputs a phone number.\r\n\t *\r\n\t * If the user erases the input value, the argument is `undefined`.\r\n\t */\r\n\tonChange: PropTypes.func.isRequired,\r\n\r\n\t/**\r\n\t * Toggles the `--focus` CSS class.\r\n\t * @ignore\r\n\t */\r\n\tonFocus: PropTypes.func,\r\n\r\n\t/**\r\n\t * `onBlur` is usually passed by `redux-form`.\r\n\t * @ignore\r\n\t */\r\n\tonBlur: PropTypes.func,\r\n\r\n\t/**\r\n\t * Set to `true` to mark both the phone number `<input/>`\r\n\t * and the country `<select/>` as `disabled`.\r\n\t */\r\n\tdisabled: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Set to `true` to mark both the phone number `<input/>`\r\n\t * and the country `<select/>` as `readonly`.\r\n\t */\r\n\treadOnly: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Sets `autoComplete` property for phone number `<input/>`.\r\n\t *\r\n\t * Web browser's \"autocomplete\" feature\r\n\t * remembers the phone number being input\r\n\t * and can also autofill the `<input/>`\r\n\t * with previously remembered phone numbers.\r\n\t *\r\n\t * https://developers.google.com\r\n\t * /web/updates/2015/06/checkout-faster-with-autofill\r\n\t *\r\n\t * For example, can be used to turn it off:\r\n\t *\r\n\t * \"So when should you use `autocomplete=\"off\"`?\r\n\t *  One example is when you've implemented your own version\r\n\t *  of autocomplete for search. Another example is any form field\r\n\t *  where users will input and submit different kinds of information\r\n\t *  where it would not be useful to have the browser remember\r\n\t *  what was submitted previously\".\r\n\t */\r\n\t// (is `\"tel\"` by default)\r\n\tautoComplete: PropTypes.string.isRequired,\r\n\r\n\t/**\r\n\t * Set to `\"national\"` to show the initial `value` in\r\n\t * \"national\" format rather than \"international\".\r\n\t *\r\n\t * For example, if `initialValueFormat` is `\"national\"`\r\n\t * and the initial `value=\"+12133734253\"` is passed\r\n\t * then the `<input/>` value will be `\"(213) 373-4253\"`.\r\n\t *\r\n\t * By default, `initialValueFormat` is `undefined`,\r\n\t * meaning that if the initial `value=\"+12133734253\"` is passed\r\n\t * then the `<input/>` value will be `\"+1 213 373 4253\"`.\r\n\t *\r\n\t * The reason for such default behaviour is that\r\n\t * the newer generation grows up when there are no stationary phones\r\n\t * and therefore everyone inputs phone numbers in international format\r\n\t * in their smartphones so people gradually get more accustomed to\r\n\t * writing phone numbers in international format rather than in local format.\r\n\t * Future people won't be using \"national\" format, only \"international\".\r\n\t */\r\n\t// (is `undefined` by default)\r\n\tinitialValueFormat: PropTypes.oneOf(['national']),\r\n\r\n\t// `displayInitialValueAsLocalNumber` property has been\r\n\t// superceded by `initialValueFormat` property.\r\n\tdisplayInitialValueAsLocalNumber: PropTypes.bool,\r\n\r\n\t/**\r\n\t * The country to be selected by default.\r\n\t * For example, can be set after a GeoIP lookup.\r\n\t *\r\n\t * Example: `\"US\"`.\r\n\t */\r\n\t// A two-letter country code (\"ISO 3166-1 alpha-2\").\r\n\tdefaultCountry: PropTypes.string,\r\n\r\n\t/**\r\n\t * If specified, only these countries will be available for selection.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * `[\"RU\", \"UA\", \"KZ\"]`\r\n\t */\r\n\tcountries: PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t/**\r\n\t * Custom country `<select/>` option names.\r\n\t * Also some labels like \"ext\" and country `<select/>` `aria-label`.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * `{ \"ZZ\": \"Международный\", RU: \"Россия\", US: \"США\", ... }`\r\n\t *\r\n\t * See the `locales` directory for examples.\r\n\t */\r\n\tlabels: labelsPropType.isRequired,\r\n\r\n\t/**\r\n\t * Country `<select/>` options are sorted by their labels.\r\n\t * The default sorting function uses `a.localeCompare(b, locales)`,\r\n\t * and, if that's not available, falls back to simple `a > b` / `a < b`.\r\n\t * Some languages, like Chinese, support multiple sorting variants\r\n\t * (called \"collations\"), and the user might prefer one or another.\r\n\t * Also, sometimes the Operating System language is not always\r\n\t * the preferred language for a person using a website or an application,\r\n\t * so there should be a way to specify custom locale.\r\n\t * This `locales` property mimicks the `locales` argument of `Intl` constructors,\r\n\t * and can be either a Unicode BCP 47 locale identifier or an array of such locale identifiers.\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument\r\n\t */\r\n\tlocales: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.arrayOf(PropTypes.string)\r\n\t]),\r\n\r\n\t/*\r\n\t * Custom country `<select/>` options sorting function.\r\n\t * The default one uses `a.localeCompare(b)`, and,\r\n\t * if that's not available, falls back to simple `a > b`/`a < b`.\r\n\t * There have been requests to add custom sorter for cases\r\n\t * like Chinese language and \"pinyin\" (non-default) sorting order.\r\n\t * https://stackoverflow.com/questions/22907288/chinese-sorting-by-pinyin-in-javascript-with-localecompare\r\n\tcompareStrings: PropTypes.func,\r\n\t */\r\n\r\n\t/**\r\n\t * A URL template of a country flag, where\r\n\t * \"{XX}\" is a two-letter country code in upper case,\r\n\t * or where \"{xx}\" is a two-letter country code in lower case.\r\n\t * By default it points to `country-flag-icons` gitlab pages website.\r\n\t * I imagine someone might want to download those country flag icons\r\n\t * and host them on their own servers instead\r\n\t * (all flags are available in the `country-flag-icons` library).\r\n\t * There's a catch though: new countries may be added in future,\r\n\t * so when hosting country flag icons on your own server\r\n\t * one should check the `CHANGELOG.md` every time before updating this library,\r\n\t * otherwise there's a possibility that some new country flag would be missing.\r\n\t */\r\n\tflagUrl: PropTypes.string.isRequired,\r\n\r\n\t/**\r\n\t * Custom country flag icon components.\r\n\t * These flags will be used instead of the default ones.\r\n\t * The the \"Flags\" section of the readme for more info.\r\n\t *\r\n\t * The shape is an object where keys are country codes\r\n\t * and values are flag icon components.\r\n\t * Flag icon components receive the same properties\r\n\t * as `flagComponent` (see below).\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * `{ \"RU\": (props) => <img src=\"...\"/> }`\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * `import flags from 'country-flag-icons/react/3x2'`\r\n\t *\r\n\t * `import PhoneInput from 'react-phone-number-input'`\r\n\t *\r\n\t * `<PhoneInput flags={flags} .../>`\r\n\t */\r\n\tflags: PropTypes.objectOf(PropTypes.elementType),\r\n\r\n\t/**\r\n\t * Country flag icon component.\r\n\t *\r\n\t * Takes properties:\r\n\t *\r\n\t * * `country: string` — The country code.\r\n\t * * `countryName: string` — The country name.\r\n\t * * `flagUrl: string` — The `flagUrl` property (see above).\r\n\t * * `flags: object` — The `flags` property (see above).\r\n\t */\r\n\tflagComponent: PropTypes.elementType.isRequired,\r\n\r\n\t/**\r\n\t * Set to `false` to remove the \"International\" option from country `<select/>`.\r\n\t */\r\n\taddInternationalOption: PropTypes.bool.isRequired,\r\n\r\n\t/**\r\n\t * \"International\" icon component.\r\n\t * Should have the same aspect ratio.\r\n\t *\r\n\t * Receives properties:\r\n\t *\r\n\t * * `title: string` — \"International\" country option label.\r\n\t */\r\n\tinternationalIcon: PropTypes.elementType.isRequired,\r\n\r\n\t/**\r\n\t * Can be used to place some countries on top of the list of country `<select/>` options.\r\n\t *\r\n\t * * `\"XX\"` — inserts an option for \"XX\" country.\r\n\t * * `\"🌐\"` — inserts \"International\" option.\r\n\t * * `\"|\"` — inserts a separator.\r\n\t * * `\"...\"` — inserts options for the rest of the countries (can be omitted, in which case it will be automatically added at the end).\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * `[\"US\", \"CA\", \"AU\", \"|\", \"...\"]`\r\n\t */\r\n\tcountryOptionsOrder: PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t/**\r\n\t * `<Phone/>` component CSS style object.\r\n\t */\r\n\tstyle: PropTypes.object,\r\n\r\n\t/**\r\n\t * `<Phone/>` component CSS class.\r\n\t */\r\n\tclassName: PropTypes.string,\r\n\r\n\t/**\r\n\t * Country `<select/>` component.\r\n\t *\r\n\t * Receives properties:\r\n\t *\r\n\t * * `name: string?` — HTML `name` attribute.\r\n\t * * `value: string?` — The currently selected country code.\r\n\t * * `onChange(value: string?)` — Updates the `value`.\r\n\t * * `onFocus()` — Is used to toggle the `--focus` CSS class.\r\n\t * * `onBlur()` — Is used to toggle the `--focus` CSS class.\r\n\t * * `options: object[]` — The list of all selectable countries (including \"International\") each being an object of shape `{ value: string?, label: string }`.\r\n\t * * `iconComponent: PropTypes.elementType` — React component that renders a country icon: `<Icon country={value}/>`. If `country` is `undefined` then it renders an \"International\" icon.\r\n\t * * `disabled: boolean?` — HTML `disabled` attribute.\r\n\t * * `readOnly: boolean?` — HTML `readOnly` attribute.\r\n\t * * `tabIndex: (number|string)?` — HTML `tabIndex` attribute.\r\n\t * * `className: string` — CSS class name.\r\n\t */\r\n\tcountrySelectComponent: PropTypes.elementType.isRequired,\r\n\r\n\t/**\r\n\t * Country `<select/>` component props.\r\n\t * Along with the usual DOM properties such as `aria-label` and `tabIndex`,\r\n\t * some custom properties are supported, such as `arrowComponent` and `unicodeFlags`.\r\n\t */\r\n\tcountrySelectProps: PropTypes.object,\r\n\r\n\t/**\r\n\t * Phone number `<input/>` component.\r\n\t *\r\n\t * Receives properties:\r\n\t *\r\n\t * * `value: string` — The formatted `value`.\r\n\t * * `onChange(event: Event)` — Updates the formatted `value` from `event.target.value`.\r\n\t * * `onFocus()` — Is used to toggle the `--focus` CSS class.\r\n\t * * `onBlur()` — Is used to toggle the `--focus` CSS class.\r\n\t * * Other properties like `type=\"tel\"` or `autoComplete=\"tel\"` that should be passed through to the DOM `<input/>`.\r\n\t *\r\n\t * Must also either use `React.forwardRef()` to \"forward\" `ref` to the `<input/>` or implement `.focus()` method.\r\n\t */\r\n\tinputComponent: PropTypes.elementType.isRequired,\r\n\r\n\t/**\r\n\t * Wrapping `<div/>` component.\r\n\t *\r\n\t * Receives properties:\r\n\t *\r\n\t * * `style: object` — A component CSS style object.\r\n\t * * `className: string` — Classes to attach to the component, typically changes when component focuses or blurs.\r\n\t */\r\n\tcontainerComponent: PropTypes.elementType.isRequired,\r\n\r\n\t/**\r\n\t * Phone number `<input/>` component props.\r\n\t */\r\n\tnumberInputProps: PropTypes.object,\r\n\r\n\t/**\r\n\t * When the user attempts to insert a digit somewhere in the middle of a phone number,\r\n\t * the caret position is moved right before the next available digit skipping\r\n\t * any punctuation in between. This is called \"smart\" caret positioning.\r\n\t * Another case would be the phone number format changing as a result of\r\n\t * the user inserting the digit somewhere in the middle, which would require\r\n\t * re-positioning the caret because all digit positions have changed.\r\n\t * This \"smart\" caret positioning feature can be turned off by passing\r\n\t * `smartCaret={false}` property: use it in case of any possible issues\r\n\t * with caret position during phone number input.\r\n\t */\r\n\t// Is `true` by default.\r\n\tsmartCaret: PropTypes.bool.isRequired,\r\n\r\n\t/**\r\n\t * Set to `true` to force \"international\" phone number format.\r\n\t * Set to `false` to force \"national\" phone number format.\r\n\t * By default it's `undefined` meaning that it doesn't enforce any phone number format.\r\n\t */\r\n\tinternational: PropTypes.bool,\r\n\r\n\t/**\r\n\t * If set to `true`, the phone number input will get trimmed\r\n\t * if it exceeds the maximum length for the country.\r\n\t */\r\n\tlimitMaxLength: PropTypes.bool.isRequired,\r\n\r\n\t/**\r\n\t * If set to `false`, and `international` is `true`, then\r\n\t * users won't be able to erase the \"country calling part\"\r\n\t * of a phone number in the `<input/>`.\r\n\t */\r\n\tcountryCallingCodeEditable: PropTypes.bool.isRequired,\r\n\r\n\t/**\r\n\t * `libphonenumber-js` metadata.\r\n\t *\r\n\t * Can be used to pass custom `libphonenumber-js` metadata\r\n\t * to reduce the overall bundle size for those who compile \"custom\" metadata.\r\n\t */\r\n\tmetadata: metadataPropType.isRequired,\r\n\r\n\t/**\r\n\t * Is called every time the selected country changes:\r\n\t * either programmatically or when user selects it manually from the list.\r\n\t */\r\n\t// People have been asking for a way to get the selected country.\r\n\t// @see  https://github.com/catamphetamine/react-phone-number-input/issues/128\r\n\t// For some it's just a \"business requirement\".\r\n\t// I guess it's about gathering as much info on the user as a website can\r\n\t// without introducing any addional fields that would complicate the form\r\n\t// therefore reducing \"conversion\" (that's a marketing term).\r\n\t// Assuming that the phone number's country is the user's country\r\n\t// is not 100% correct but in most cases I guess it's valid.\r\n\tonCountryChange: PropTypes.func,\r\n\r\n\t/**\r\n\t * If set to `false`, will not focus the `<input/>` component\r\n\t * when the user selects a country from the list of countries.\r\n\t * This can be used to conform to the Web Content Accessibility Guidelines (WCAG).\r\n\t * Quote:\r\n\t * \"On input: Changing the setting of any user interface component\r\n\t *  does not automatically cause a change of context unless the user\r\n\t *  has been advised of the behaviour before using the component.\"\r\n\t */\r\n\tfocusInputOnCountrySelection: PropTypes.bool.isRequired\r\n}\r\n\r\nPhoneNumberInput.defaultProps = {\r\n\t/**\r\n\t * Remember (and autofill) the value as a phone number.\r\n\t */\r\n\tautoComplete: 'tel',\r\n\r\n\t/**\r\n\t * Country `<select/>` component.\r\n\t */\r\n\tcountrySelectComponent: CountrySelect,\r\n\r\n\t/**\r\n\t * Flag icon component.\r\n\t */\r\n\tflagComponent: Flag,\r\n\r\n\t/**\r\n\t * By default, uses icons from `country-flag-icons` gitlab pages website.\r\n\t */\r\n\t// Must be equal to `flagUrl` in `./CountryIcon.js`.\r\n\tflagUrl: 'https://purecatamphetamine.github.io/country-flag-icons/3x2/{XX}.svg',\r\n\r\n\t/**\r\n\t * Default \"International\" country `<select/>` option icon.\r\n\t */\r\n\tinternationalIcon: InternationalIcon,\r\n\r\n\t/**\r\n\t * Phone number `<input/>` component.\r\n\t */\r\n\tinputComponent: 'input',\r\n\r\n\t/**\r\n\t * Wrapping `<div/>` component.\r\n\t */\r\n\tcontainerComponent: 'div',\r\n\r\n\t/**\r\n\t * Some users requested a way to reset the component:\r\n\t * both number `<input/>` and country `<select/>`.\r\n\t * Whenever `reset` property changes both number `<input/>`\r\n\t * and country `<select/>` are reset.\r\n\t * It's not implemented as some instance `.reset()` method\r\n\t * because `ref` is forwarded to `<input/>`.\r\n\t * It's also not replaced with just resetting `country` on\r\n\t * external `value` reset, because a user could select a country\r\n\t * and then not input any `value`, and so the selected country\r\n\t * would be \"stuck\", if not using this `reset` property.\r\n\t */\r\n\t// https://github.com/catamphetamine/react-phone-number-input/issues/300\r\n\treset: PropTypes.any,\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\r\n\t/**\r\n\t * Set to `false` to use \"basic\" caret instead of the \"smart\" one.\r\n\t */\r\n\tsmartCaret: true,\r\n\r\n\t/**\r\n\t * Whether to add the \"International\" option\r\n\t * to the list of countries.\r\n\t */\r\n\taddInternationalOption: true,\r\n\r\n\t/**\r\n\t * If set to `true` the phone number input will get trimmed\r\n\t * if it exceeds the maximum length for the country.\r\n\t */\r\n\tlimitMaxLength: false,\r\n\r\n\t/**\r\n\t * If set to `false`, and `international` is `true`, then\r\n\t * users won't be able to erase the \"country calling part\"\r\n\t * of a phone number in the `<input/>`.\r\n\t */\r\n\tcountryCallingCodeEditable: true,\r\n\r\n\t/**\r\n\t * If set to `false`, will not focus the `<input/>` component\r\n\t * when the user selects a country from the list of countries.\r\n\t * This can be used to conform to the Web Content Accessibility Guidelines (WCAG).\r\n\t * Quote:\r\n\t * \"On input: Changing the setting of any user interface component\r\n\t *  does not automatically cause a change of context unless the user\r\n\t *  has been advised of the behaviour before using the component.\"\r\n\t */\r\n\tfocusInputOnCountrySelection: true\r\n}\r\n\r\nexport default PhoneNumberInput\r\n\r\nfunction areEqualArrays(a, b) {\r\n\tif (a.length !== b.length) {\r\n\t\treturn false\r\n\t}\r\n\tlet i = 0\r\n\twhile (i < a.length) {\r\n\t\tif (a[i] !== b[i]) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\treturn true\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport labels from '../locale/en.json.js'\r\n\r\nimport {\r\n\tmetadata as metadataPropType,\r\n\tlabels as labelsPropType\r\n} from './PropTypes.js'\r\n\r\nimport PhoneInput from './PhoneInputWithCountry.js'\r\n\r\nexport function createPhoneInput(defaultMetadata) {\r\n\tconst PhoneInputDefault = React.forwardRef((props, ref) => (\r\n\t\t<PhoneInput ref={ref} {...props}/>\r\n\t))\r\n\r\n\tPhoneInputDefault.propTypes = {\r\n\t\tmetadata: metadataPropType.isRequired,\r\n\t\tlabels: labelsPropType.isRequired\r\n\t}\r\n\r\n\tPhoneInputDefault.defaultProps = {\r\n\t\tmetadata: defaultMetadata,\r\n\t\tlabels\r\n\t}\r\n\r\n\treturn PhoneInputDefault\r\n}\r\n\r\nexport default createPhoneInput()","import metadata from 'libphonenumber-js/min/metadata'\r\n\r\nimport {\r\n\tparsePhoneNumber as _parsePhoneNumber,\r\n\tformatPhoneNumber as _formatPhoneNumber,\r\n\tformatPhoneNumberIntl as _formatPhoneNumberIntl,\r\n\tisValidPhoneNumber as _isValidPhoneNumber,\r\n\tisPossiblePhoneNumber as _isPossiblePhoneNumber,\r\n\tgetCountries as _getCountries,\r\n\tgetCountryCallingCode as _getCountryCallingCode,\r\n\tisSupportedCountry as _isSupportedCountry\r\n} from '../core/index.js'\r\n\r\nimport { createPhoneInput } from '../modules/PhoneInputWithCountryDefault.js'\r\n\r\nfunction call(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}\r\n\r\nexport default createPhoneInput(metadata)\r\n\r\nexport function parsePhoneNumber() {\r\n\treturn call(_parsePhoneNumber, arguments)\r\n}\r\n\r\nexport function formatPhoneNumber() {\r\n\treturn call(_formatPhoneNumber, arguments)\r\n}\r\n\r\nexport function formatPhoneNumberIntl() {\r\n\treturn call(_formatPhoneNumberIntl, arguments)\r\n}\r\n\r\nexport function isValidPhoneNumber() {\r\n\treturn call(_isValidPhoneNumber, arguments)\r\n}\r\n\r\nexport function isPossiblePhoneNumber() {\r\n\treturn call(_isPossiblePhoneNumber, arguments)\r\n}\r\n\r\nexport function getCountries() {\r\n\treturn call(_getCountries, arguments)\r\n}\r\n\r\nexport function getCountryCallingCode() {\r\n\treturn call(_getCountryCallingCode, arguments)\r\n}\r\n\r\nexport function isSupportedCountry() {\r\n\treturn call(_isSupportedCountry, arguments)\r\n}"],"names":["render","rest","methods","useFormContext","error","get","formState","messageFromRegister","types","props","Object","assign","ErrorMessage","errors","message","children","React","isValidElement","cloneElement","messages","createElement","Fragment","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","prototype","includes","key","call","join","module","exports","default","hookCallback","some","hooks","setHookCallback","callback","input","isObject","hasOwnProp","a","b","isObjectEmpty","obj","getOwnPropertyNames","k","isUndefined","isNumber","isDate","Date","map","arr","fn","res","arrLen","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","fun","t","this","len","momentProperties","updateInProgress","copyConfig","to","from","prop","val","momentPropertiesLen","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","config","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","args","argLen","slice","Error","stack","keys","deprecations","deprecateSimple","name","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","mom","now","output","_calendar","zeroFill","number","targetLength","forceSign","absNumber","Math","abs","zerosToFill","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","func","localeData","removeFormattingTokens","match","replace","makeFormatFunction","array","formatMoment","expandFormat","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","_longDateFormat","formatUpper","toUpperCase","tok","defaultInvalidDate","_invalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","_ordinal","defaultRelativeTime","future","past","s","ss","mm","h","hh","d","dd","w","ww","M","MM","y","yy","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","getPrioritizedUnits","unitsObj","u","sort","isLeapYear","year","absFloor","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","makeGetSet","keepTime","set$1","month","date","daysInMonth","stringGet","stringSet","prioritized","prioritizedLen","regexes","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","tokenLen","addWeekParseToken","_w","addTimeToArrayFromToken","_a","indexOf","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","mod","n","x","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","split","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","localeMonths","_months","isFormat","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","min","getSetMonth","getDaysInMonth","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","parseTwoDigitYear","parseInt","getSetYear","getIsLeapYear","createDate","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","localeWeek","_week","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","shiftWeekdays","ws","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","localeMeridiem","isLower","globalLocale","baseConfig","dayOfMonthOrdinalParse","meridiemParse","locales","localeFamilies","commonPrefix","arr1","arr2","minl","normalizeLocale","chooseLocale","names","j","next","loadLocale","isLocaleNameSane","oldLocale","_abbr","aliasedRequire","getSetGlobalLocale","e","values","data","getLocale","defineLocale","abbr","parentLocale","forEach","updateLocale","tmpLocale","listLocales","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","exec","isoDatesLen","isoTimesLen","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","setUTCMinutes","getUTCMinutes","configFromString","createFromInputFallback","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","weekYear","temp","weekdayOverflow","curWeek","GG","W","E","createLocal","gg","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","erasConvertYear","hour","isPm","meridiemHour","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","score","configFromObject","dayOrDate","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","prototypeMin","other","prototypeMax","pickBy","moments","ordering","isDurationValid","unitHasDecimal","orderLen","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","offset","separator","utcOffset","sign","offsetFromString","chunkOffset","matcher","parts","matches","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","toArray","isLocal","isUtcOffset","isUtc","aspNetRegex","isoRegex","ret","diffRes","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","tmp","isAdding","invalid","isString","String","isMomentInput","isNumberOrStringArray","isMomentInputObject","property","objectTest","propertyTest","properties","propertyLen","arrayTest","dataTypeTest","filter","item","isCalendarSpec","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","prefix","datetime","suffix","zone","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","startOfDate","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","localeEras","eras","_eras","since","until","localeErasParse","eraName","narrow","localeErasConvertYear","dir","getEraName","getEraNarrow","getEraAbbr","getEraYear","erasNameRegex","computeErasParse","_erasNameRegex","_erasRegex","erasAbbrRegex","_erasAbbrRegex","erasNarrowRegex","_erasNarrowRegex","matchEraAbbr","matchEraName","matchEraNarrow","matchEraYearOrdinal","_eraYearOrdinalRegex","abbrPieces","namePieces","narrowPieces","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","isoWeekYear","getWeeksInYear","weekInfo","getWeeksInWeekYear","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","erasParse","eraYearOrdinalParse","getSetDayOfMonth","getSetDayOfYear","getSetMinute","getSetMillisecond","getSetSecond","parseMs","getZoneAbbr","getZoneName","proto","createUnix","createInZone","parseZone","preParsePostFormat","Symbol","for","eraNarrow","eraAbbr","eraYear","isoWeeks","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","firstDayOfYear","firstDayOfWeek","langData","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","clone$1","get$2","makeGetter","thresholds","substituteTimeAgo","relativeTime$1","posNegDuration","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","argWithSuffix","argThresholds","withSuffix","th","abs$1","toISOString$1","totalSign","ymSign","daysSign","hmsSign","total","toFixed","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","bigint","bool","object","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","allowArrayLike","it","iterator","unsupportedIterableToArray","F","done","_e","f","TypeError","normalCompletion","didErr","step","_e2","type","isDateObject","isNullOrUndefined","isObjectType","getEventValue","event","target","checked","getNodeParentName","has","substring","compact","search","isNameInFieldArray","Boolean","path","defaultValue","reduce","EVENTS","BLUR","onBlur","isCheckBoxInput","control","localProxyFormState","isRoot","defaultValues","_defaultValues","defineProperty","_key","_proxyFormState","isEmptyObject","shouldRenderFormState","formStateData","find","convertToArrayPayload","shouldSubscribeByName","signalName","currentName","startsWith","useSubscribe","_props","useRef","useEffect","disabled","subject","subscribe","unsubscribe","useFormState","generateWatchOutput","_names","formValues","isGlobal","watch","fieldName","watchAll","objectHasFunction","useWatch","shouldUnregister","useState","isArrayField","_registerProps","useCallback","state","_formValues","updateValue","_getWatch","_removeUnmounted","useController","fieldValues","updateFormState","_mounted","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","_name","register","rules","updateMounted","_fields","mount","_shouldUnregisterField","_options","_stateFlags","action","unregister","ref","onSubmit","onChange","elm","focus","select","setCustomValidity","reportValidity","fieldState","defineProperties","enumerable","isTouched","Controller","appendErrors","validateAllFieldCriteria","isKey","stringToPath","tempPath","newValue","objValue","focusFieldBy","fields","fieldsNames","currentField","refs","generateId","watchName","updateFieldArrayRootError","fieldArrayErrors","isBoolean","isFileInput","isMessage","isRegex","defaultResult","validResult","getCheckboxValue","option","focusName","attributes","defaultReturn","getRadioValue","previous","getValidateError","every","getValueAndMessage","validationData","inputValue","shouldUseNativeValidation","isFieldArray","valueAsNumber","inputRef","validate","minLength","pattern","maxLength","required","HookFormContext","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","maxOutput","minOutput","valueNumber","exceedMin","convertTimeToDate","toDateString","isTime","isWeek","maxLengthOutput","minLengthOutput","valueAsDate","valueDate","patternValue","validateError","validationResult","append","isPlainObject","document","copy","Set","isWeb","Blob","FileList","cloneObject","fillEmptyArray","getValidationModes","constructor","window","HTMLElement","prototypeCopy","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","moveArrayAt","previousObjRef","currentPaths","childObject","objectRef","unset","currentPathsLength","updateAt","useFieldArray","keyName","_observers","observer","isPrimitive","observers","deepEqual","object1","object2","keys1","keys2","val1","val2","isHTMLElement","owner","ownerDocument","ElementClass","isMultipleSelect","live","isConnected","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","setValueAs","files","selectedOptions","getResolverOptions","getRuleValue","rule","_updateValid","hasValidation","foundError","pop","skipValidation","reValidateMode","unsetEmptyArray","defaultOptions","_executeSchema","shouldFocusError","submitCount","isSubmitting","isSubmitSuccessful","unMount","validationModeAfterSubmit","delayErrorCallback","timer","validateFields","validationModeBeforeSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","clearTimeout","setTimeout","shouldSkipRender","executeBuiltInValidation","method","useMemo","shouldSetValues","then","existingError","shouldUpdateFieldsAndState","argA","_getDirty","updateErrors","updateValidAndValue","shouldSkipSetValueAs","remove","move","defaultChecked","getFieldValue","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","isFieldDirty","isPreviousFieldTouched","isPreviousFormDirty","isPreviousFieldDirty","isCurrentFieldPristine","shouldRenderByError","previousFieldError","delayError","updatedFormState","v","context","executeSchemaAndUpdateState","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","getValues","fieldReference","optionRef","_fieldIds","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","shouldSkipValidation","deps","watched","previousErrorLookupResult","schemaErrorLookup","errorLookupResult","fieldNames","Promise","getFieldState","clearErrors","INPUT_VALIDATION_RULES","focusIndex","inputName","setError","info","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","disabledIsDefined","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","preventDefault","persist","hasNoPromiseError","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","keepDirtyValues","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","shouldSelect","_formControl","createFormControl","metadata","country_calling_codes","countries","labels","count_occurences","count","character","closeBraces","retained_template","template","placeholder","empty_placeholder","cut_before","opening_braces","closing_braces","dangling_braces","close_braces","should_close_braces","text","characters_in_template","value_character_index","filled_in_template","caret","formatter","template_formatter","found","possibly_last_input_character_index","Keys","setCaretPosition","caret_position","navigator","ANDROID_USER_AGENT_REG_EXP","userAgent","isAndroid","setSelectionRange","onKeyDown","_parse","_format","on_change","hasAttribute","operation","keyCode","getOperation","selection","selectionStart","selectionEnd","start","end","getSelection","eraseSelection","formatInputText","parse_character","focused_input_character_index","parse","newValueAndCaret","formatted","edit","onInputChange","onInputKeyDown","Input","InputComponent","inputComponent","_onKeyDown","current","internalRef","setRef","instance","_onChange","onCut","onPaste","defaultProps","forwardRef","isEmptyValue","propTypes","pa","pb","na","Number","nb","compare","V2","V3","V4","DEFAULT_EXT_PREFIX","CALLING_CODE_REG_EXP","Metadata","_classCallCheck","validateMetadata","setVersion","_","countryCode","v1","v2","v3","nonGeographic","nonGeographical","country","getCountryMetadata","countryCallingCodes","selectNumberingPlan","_nationalPrefixForParsing","getCountryCodeForCallingCode","nationalPrefix","getNumberingPlanMetadata","hasCountry","numberingPlan","NumberingPlan","IDDPrefix","defaultIDDPrefix","possibleLengths","nationalPrefixForParsing","nationalPrefixTransformRule","leadingDigits","hasTypes","ext","country_phone_code_to_countries","nationalNumberPattern","globalMetadataObject","_getFormats","getDefaultCountryMetadataForRegion","_this","_getNationalPrefixFormattingRule","_getNationalPrefixIsOptionalWhenFormatting","getType","Type","nationalPrefixFormattingRule","nationalPrefixIsOptionalWhenFormattingInNationalFormat","usesNationalPrefix","FIRST_GROUP_ONLY_PREFIX_PATTERN","is_object","type_of","_typeof","getCountryCallingCode","getExtPrefix","countryCallingCode","isSupportedCountry","mergeArrays","merged","checkNumberLength","nationalNumber","checkNumberLengthForType","type_info","possible_lengths","mobile_type","actual_length","minimum_length","isNonGeographicCallingCode","matchesEntirely","regular_expression","NON_FIXED_LINE_PHONE_TYPES","getNumberType","options","phone","isNumberTypeEqualTo","VALID_DIGITS","VALID_PUNCTUATION","PLUS_CHARS","applyInternationalSeparatorStyle","formattedNumber","trim","FIRST_GROUP_PATTERN","formatNationalNumberUsingFormat","useInternationalFormat","withNationalPrefix","carrierCode","internationalFormat","SINGLE_IDD_PREFIX_REG_EXP","getExtensionDigitsPattern","createExtensionPattern","purpose","extLimitAfterExplicitLabel","explicitExtLabels","possibleCharsAfterExtLabel","autoDiallingAndExtLabelsFound","VALID_PHONE_NUMBER","VALID_PHONE_NUMBER_START_REG_EXP","VALID_PHONE_NUMBER_WITH_EXTENSION","VALID_PHONE_NUMBER_PATTERN","isViablePhoneNumber","parseRFC3966","formatRFC3966","part","getIddPrefix","DEFAULT_OPTIONS","formatExtension","extension","formatNationalNumber","addExtension","formatNumber","fromCountry","formatIDD","formatAs","chooseFormatForNumber","availableFormats","nationalNnumber","leadingDigitsPatterns","lastLeadingDigitsPattern","fromCountryCallingCode","iddPrefix","callingCode","countryMetadata","isPossibleNumber","isValidNumber","isValidNumberForRegion","USE_NON_GEOGRAPHIC_COUNTRY_CODE","PhoneNumber","_metadata","isCountryCode","phoneNumber","defaultCountry","defaultCallingCode","international","missingPlus","digits","resetNationalSignificantNumber","initCountryAndCallingCode","nationalSignificantNumber","getNationalDigits","onCountryChange","onCallingCodeChange","AsYouTypeState","setCallingCode","nextDigits","complexPrefixBeforeNationalSignificantNumber","DIGIT_PLACEHOLDER","DIGIT_PLACEHOLDER_MATCHER","countOccurences","repeat","times","cutAndStripNonPairedParens","cutBeforeIndex","stripNonPairedParens","closeNonPairedParens","cleared_string","populateTemplateWithDigits","position","digit","DIGITS","parseDigit","parseDigits","formatCompleteNumber","shouldTryNationalPrefixFormattingRule","getSeparatorAfterNationalPrefix","formatNationalNumberWithAndWithoutNationalPrefixFormattingRule","canFormatCompleteNumber","useNationalPrefixFormattingRule","formattedNationalNumber","isValidFormattedNationalNumber","instructions","parsePattern","branches","op","expandSingleElementArray","or","PatternParser","ILLEGAL_CHARACTER_REGEXP","operator","rightPart","startContext","endContext","oneOfSet","parseOneOfSet","prevValue","charCodeAt","nextValue","fromCharCode","getContext","PatternMatcher","matchTree","allowOverflow","characterString","partialMatch","restCharacters","subtree","matchedChars","characters","tree","last","JSON","stringify","branch","char","NATIONAL_PREFIX_SEPARATORS_PATTERN","SUPPORT_LEGACY_FORMATTING_PATTERNS","CREATE_CHARACTER_CLASS_PATTERN","CREATE_STANDALONE_DIGIT_PATTERN","NON_ALTERING_FORMAT_REG_EXP","MIN_LEADING_DIGITS_LENGTH","AsYouTypeFormatter","DUMMY_DIGIT","LONGEST_NATIONAL_PHONE_NUMBER_LENGTH","LONGEST_DUMMY_PHONE_NUMBER","resetFormat","chosenFormat","populatedNationalNumberTemplatePosition","isNANP","matchingFormats","narrowDownMatchingFormats","_this2","formatMatches","leadingDigitsPatternsCount","nationalNumberTemplate","populatedNationalNumberTemplate","leadingDigitsPattern","formattedCompleteNumber","getFormatFormat","createTemplateForFormat","getTemplateForFormat","previouslyChosenFormat","spacing","formatNationalNumberWithNextDigits","internationalPrefix","getInternationalPrefixBeforeCountryCallingCode","getDigitsWithoutInternationalPrefix","strictPattern","nationalNumberDummyDigits","numberFormat","nationalPrefixIncludedInTemplate","numberFormatWithNationalPrefix","newlyChosenFormat","formatNextNationalNumberDigits","chooseFormat","lastIndexOf","CAPTURING_DIGIT_PATTERN","stripIddPrefix","IDDPrefixPattern","matchedGroups","extractNationalNumberFromPossiblyIncompleteNumber","prefixPattern","prefixMatch","capturedGroupsCount","hasCapturedGroups","prefixBeforeNationalNumber","possiblePositionOfTheFirstCapturedGroup","extractNationalNumber","shouldHaveExtractedNationalPrefix","nationalNumberAfter","isPossibleIncompleteNationalNumber","nationalNumberBefore","extractCountryCallingCodeFromInternationalNumberWithoutPlusSign","possibleShorterNumber","extractCountryCallingCode","numberWithoutIDD","shorterNumber","hasCallingCode","extractNationalSignificantNumber","justLeadingPlus","startInternationalNumber","appendDigits","inputDigits","hasReceivedThreeLeadingDigits","extractIddPrefix","isWaitingForCountryCallingCode","appendNationalSignificantNumberDigits","formattedDigits","hasExtractedNationalSignificantNumber","VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART","VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN","VALID_FORMATTED_PHONE_NUMBER_PART","AFTER_PHONE_NUMBER_DIGITS_END_PATTERN","COMPLEX_NATIONAL_PREFIX","AsYouTypeParser","onNationalSignificantNumberChange","extractFormattedDigitsAndPlus","hasPlus","hasSelectedNumberingPlan","nationalSignificantNumberMatchesInput","nationalSignificantNumberIndex","onExtractedNationalNumber","extractAnotherNationalSignificantNumber","extractCallingCodeAndNationalSignificantNumber","fixMissingPlus","stateUpdate","update","couldPossiblyExtractAnotherNationalSignificantNumber","extractFormattedPhoneNumber","_extractFormattedDigitsAndPlus","extractedNumber","startsAt","setState","nationalDigits","getCountryByCallingCode","nationalPhoneNumber","possibleCountries","getCountryCodesForCallingCode","selectCountryFromList","AsYouType","reExtractNationalSignificantNumber","getFullNumber","formattedOutput","getNonFormattedNumber","optionsOrDefaultCountry","parser","getCountryAndCallingCode","determineTheCountryIfNeeded","isInternational","getCallingCode","_getCountry","isCountryCallingCodeAmbiguous","countryCodes","callingCode_","getNumber","isPossible","getNonFormattedTemplate","getNonFormattedNationalNumberWithPrefix","parseIncompletePhoneNumber","parsePhoneNumberCharacter","prevParsedCharacters","getInputValuePrefix","withCountryCallingCode","removeInputValuePrefix","createInput","defaultMetadata","InputSmart","getTemplate","formatIncompletePhoneNumber","InputBasic","newValueFormatted","getRegionalIndicatorSymbol","letter","fromCodePoint","getUnicodeFlagIcon","CountrySelect","onChange_","divider","style","DIVIDER_STYLE","selectedOption","getSelectedOption","label","fontSize","backgroundColor","color","CountrySelectWithIcon","className","Icon","iconComponent","getIconAspectRatio","Arrow","arrowComponent","unicodeFlags","aspectRatio","FlagComponent","countryName","flagUrl","title","alt","role","src","InternationalIcon","InternationalIcon1x1","InternationalIcon3x2","xmlns","viewBox","stroke","fill","strokeWidth","strokeMiterlimit","y2","y1","strokeLinecap","x1","x2","getCountries","sortCountryOptions","order","optionsOnTop","optionsOnBottom","appendTo","splice","getSupportedCountryOptions","countryOptions","isCountrySupportedWithError","getSupportedCountries","DefaultInternationalIcon","Flag","createCountryIconComponent","flagComponent","internationalIcon","CountryIcon","_aspectRatio","parsePhoneNumber_","parsePhoneNumber","normalizeArguments","arg_1","arg_2","arg_3","arg_4","ParseError","code","setPrototypeOf","EXTN_PATTERN","PHONE_NUMBER_START_PATTERN","AFTER_PHONE_NUMBER_END_PATTERN","parseInput","extract","extended","withExtensionStripped","isViablePhoneNumberStart","exactCountry","numberWithoutExtension","extractExtension","formattedPhoneNumber","possible","throwOnError","parseNumber","parsePhoneNumberFromString","ONLY_DIGITS_REGEXP","getInternationalPhoneNumberPrefix","formatNational","parsePhoneNumberFromString_","prevCountry","newCountry","useNationalFormat","stripCountryCallingCode","newCountryPrefix","getNumberValue","couldNumberBelongToCountry","getCountrySelectOptions","getCountryForPartialE164Number","getInitialPhoneDigits","e164","asYouType","partial_national_significant_number","getNationalSignificantNumberDigits","trimNumber","nationalSignificantNumberPart","overflowDigitsCount","getMaxNumberLength","partialE164Number","derived_country","getCountryFromPossiblyIncompleteInternationalPhoneNumber","onPhoneDigitsChange","prevPhoneDigits","countryRequired","countryCallingCodePrefix","limitMaxLength","localeCompare","getPhoneDigitsForNewCountry","phoneDigits","unshift","ZZ","country_calling_code","intlPhoneNumberPrefix","getAnyCountry","getPhoneInputWithCountryStateUpdateFromNewProps","prevProps","newDefaultCountry","newReset","displayInitialValueAsLocalNumber","initialValueFormat","prevDefaultCountry","prevReset","hasUserSelectedACountry","_getInitialPhoneDigits","parameters","metadataPropType","labelsPropType","getPreSelectedCountry","_defineProperty","generateNationalNumberDigits","focusInputOnCountrySelection","getFirstSupportedCountry","forceRerender","isFocused","_onFocus","onFocus","selectedCountry","prevState","countryOptionsOrder","countrySelectProps","createRef","preSelectedCountry","useMemoCountrySelectOptions","PhoneNumberInput_","countrySelectOptions","countryCallingCodeEditable","currentlySelectedCountry","newPhoneDigits","addInternationalOption","onCountryFocus","onCountryBlur","setInputRef","PureComponent","readOnly","numberInputProps","PhoneNumberInput","convertInternationalPhoneDigitsToNational","getCountry","countryNames","CountrySelectComponent","autoComplete","ContainerComponent","compareStringsLocales","_compareStrings","compareStrings","countriesProperty","containerComponent","dependencies","countrySelectOptionsMemoDependencies","generator","supportedCountries","hasUserSelectedACountryUpdate","noValueHasBeenEntered","noValueHasBeenEnteredByTheUser","isNewDefaultCountrySupported","countrySelectComponent","smartCaret","countrySelectOptionsMemo","PhoneInput","createPhoneInput","PhoneInputDefault"],"sourceRoot":""}